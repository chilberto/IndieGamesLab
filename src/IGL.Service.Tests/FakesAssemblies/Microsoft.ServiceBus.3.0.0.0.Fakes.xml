<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ServiceBus.3.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftServiceBusDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Microsoft.ServiceBus</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.#ctor(Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ConnectionBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ExposeConnectionPropertyGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ExposeConnectionProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.ExposeConnectionPropertySetBoolean">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ExposeConnectionProperty(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.InheritBaseAddressSettingsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_InheritBaseAddressSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.InheritBaseAddressSettingsSetBoolean">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_InheritBaseAddressSettings(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.IsMatchBindingElement">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.IsMatch(BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxOutputDelayGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxPendingAcceptsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxPendingConnectionsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ConnectionBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.Constructor">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.ConnectionOrientedTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ConstructorConnectionOrientedTransportBindingElement">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.ConnectionOrientedTransportBindingElement(ConnectionOrientedTransportBindingElement elementToBeCloned)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ExposeConnectionPropertyGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_ExposeConnectionProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.ExposeConnectionPropertySetBoolean">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_ExposeConnectionProperty(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.HostNameComparisonModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.InheritBaseAddressSettingsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_InheritBaseAddressSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.InheritBaseAddressSettingsSetBoolean">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_InheritBaseAddressSettings(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.IsMatchBindingElement">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.IsMatch(BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxOutputDelayGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxPendingAcceptsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxPendingConnectionsGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.TransferModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Channels.Fakes.ShimConnectionOrientedTransportBindingElement.TransferModeSetTransferMode">
            <summary>Sets the shim of ConnectionOrientedTransportBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2">
            <summary>Shim type of Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.#ctor(Microsoft.ServiceBus.Common.ReadOnlyDictionary45{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ContainsKeyT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.CountGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.DictionaryGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Dictionary()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ItemSystemCollectionsGenericIDictionaryTKeyTValuegetT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ItemSystemCollectionsGenericIDictionaryTKeyTValuesetT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.KeysGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.KeysSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueAddKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueClear">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueCopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueRemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericIDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsGenericIDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIDictionaryClear">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.TryGetValueT0T1Out">
            <summary>Sets the shim of ReadOnlyDictionary45`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ValuesGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ValuesSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ConstructorIDictionaryOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.ReadOnlyDictionary45`2(IDictionary`2&lt;!0,!1&gt; dictionary)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ContainsKeyT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.CountGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.DictionaryGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Dictionary()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.GetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.IsCompatibleKeyObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.IsCompatibleKey(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.IsReadOnlySystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ItemGetT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ItemSystemCollectionsGenericIDictionaryTKeyTValuegetT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ItemSystemCollectionsGenericIDictionaryTKeyTValuesetT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ItemSystemCollectionsIDictionarygetObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.KeysGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.KeysSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.KeysSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection">
            <summary>Shim type of Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2+KeyCollection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.#ctor(Microsoft.ServiceBus.Common.ReadOnlyDictionary45{`0,`1}.KeyCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of KeyCollection.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.CountGet">
            <summary>Sets the shim of KeyCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of KeyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTKeyget">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsGenericICollectionTKeyAddT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsGenericICollectionTKeyClear">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsGenericICollectionTKeyContainsT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsGenericICollectionTKeyRemoveT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of KeyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.CopyToT0ArrayInt32">
            <summary>Sets the shim of KeyCollection.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.CountGet">
            <summary>Sets the shim of KeyCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.GetEnumerator">
            <summary>Sets the shim of KeyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.IsReadOnlySystemCollectionsGenericICollectionTKeyget">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsGenericICollectionTKeyAddT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsGenericICollectionTKeyClear">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsGenericICollectionTKeyContainsT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsGenericICollectionTKeyRemoveT0">
            <summary>Sets the shim of KeyCollection.System.Collections.Generic.ICollection&lt;TKey&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of KeyCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimKeyCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of KeyCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection">
            <summary>Shim type of Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2+ValueCollection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.#ctor(Microsoft.ServiceBus.Common.ReadOnlyDictionary45{`0,`1}.ValueCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.CopyToT1ArrayInt32">
            <summary>Sets the shim of ValueCollection.CopyTo(!1[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.CountGet">
            <summary>Sets the shim of ValueCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ValueCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTValueget">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsGenericICollectionTValueAddT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsGenericICollectionTValueClear">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsGenericICollectionTValueContainsT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsGenericICollectionTValueRemoveT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ValueCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.Bind(System.Collections.Generic.ICollection{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.CopyToT1ArrayInt32">
            <summary>Sets the shim of ValueCollection.CopyTo(!1[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.CountGet">
            <summary>Sets the shim of ValueCollection.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.GetEnumerator">
            <summary>Sets the shim of ValueCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.IsReadOnlySystemCollectionsGenericICollectionTValueget">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsGenericICollectionTValueAddT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Add(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsGenericICollectionTValueClear">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsGenericICollectionTValueContainsT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Contains(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsGenericICollectionTValueRemoveT1">
            <summary>Sets the shim of ValueCollection.System.Collections.Generic.ICollection&lt;TValue&gt;.Remove(!1 item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ValueCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ShimValueCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ValueCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueAddKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueClear">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueCopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueRemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericIDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsGenericIDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIDictionaryClear">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIDictionaryContainsObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIDictionaryRemoveObject">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.TryGetValueT0T1Out">
            <summary>Sets the shim of ReadOnlyDictionary45`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ValuesGet">
            <summary>Sets the shim of ReadOnlyDictionary45`2.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ValuesSystemCollectionsGenericIDictionaryTKeyTValueget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.ShimReadOnlyDictionary45`2.ValuesSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReadOnlyDictionary45`2.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2">
            <summary>Stub type of Microsoft.ServiceBus.Common.ReadOnlyDictionary45`2</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2.InitializeStub">
            <summary>Initializes a new instance of type StubReadOnlyDictionary45</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Common.Fakes.StubReadOnlyDictionary45`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.AddressConfigurationElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.#ctor(Microsoft.ServiceBus.Configuration.AddressConfigurationElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.AllInstances.ValueGet">
            <summary>Sets the shim of AddressConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.AllInstances.ValueSetUri">
            <summary>Sets the shim of AddressConfigurationElement.set_Value(Uri value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.Constructor">
            <summary>Sets the shim of AddressConfigurationElement.AddressConfigurationElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.ValueGet">
            <summary>Sets the shim of AddressConfigurationElement.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElement.ValueSetUri">
            <summary>Sets the shim of AddressConfigurationElement.set_Value(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.#ctor(Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AddressesGet">
            <summary>Sets the shim of AddressConfigurationElementCollection.get_Addresses()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances.AddressesGet">
            <summary>Sets the shim of AddressConfigurationElementCollection.get_Addresses()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of AddressConfigurationElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances.ElementNameGet">
            <summary>Sets the shim of AddressConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of AddressConfigurationElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.AllInstances.IsElementNameString">
            <summary>Sets the shim of AddressConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.Constructor">
            <summary>Sets the shim of AddressConfigurationElementCollection.AddressConfigurationElementCollection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.CreateNewElement">
            <summary>Sets the shim of AddressConfigurationElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.ElementNameGet">
            <summary>Sets the shim of AddressConfigurationElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of AddressConfigurationElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection.IsElementNameString">
            <summary>Sets the shim of AddressConfigurationElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimAddressConfigurationElementCollection._get_Addressesb__1AddressConfigurationElement">
            <summary>Sets the shim of AddressConfigurationElementCollection.&lt;get_Addresses&gt;b__1(AddressConfigurationElement address)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of BasicHttpRelayBindingCollectionElement.BasicHttpRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of BasicHttpRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MessageEncodingGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllowCookiesGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.AllowCookiesSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.Constructor">
            <summary>Sets the shim of BasicHttpRelayBindingElement.BasicHttpRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.ConstructorString">
            <summary>Sets the shim of BasicHttpRelayBindingElement.BasicHttpRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.IsDynamicGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.IsDynamicSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MessageEncodingGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of BasicHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.ProxyAddressGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.ProxyAddressSetUri">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.ReaderQuotasGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.SecurityGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.TransferModeGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.TransferModeSetTransferMode">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.UseDefaultWebProxyGet">
            <summary>Sets the shim of BasicHttpRelayBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayBindingElement.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of BasicHttpRelayBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.#ctor(Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AlgorithmSuiteGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.ApplyConfigurationBasicHttpRelayMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.ApplyConfiguration(BasicHttpRelayMessageSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.ClientCredentialTypeSetBasicHttpMessageCredentialType">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.set_ClientCredentialType(BasicHttpMessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.InitializeFromBasicHttpRelayMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.InitializeFrom(BasicHttpRelayMessageSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.ApplyConfigurationBasicHttpRelayMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.ApplyConfiguration(BasicHttpRelayMessageSecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.ClientCredentialTypeGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.ClientCredentialTypeSetBasicHttpMessageCredentialType">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.set_ClientCredentialType(BasicHttpMessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.Constructor">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.BasicHttpRelayMessageSecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.InitializeFromBasicHttpRelayMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.InitializeFrom(BasicHttpRelayMessageSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelayMessageSecurityElement.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurityElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.#ctor(Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.ApplyConfigurationBasicHttpRelaySecurity">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.ApplyConfiguration(BasicHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.InitializeFromBasicHttpRelaySecurity">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.InitializeFrom(BasicHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.MessageGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.ModeGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.ModeSetEndToEndBasicHttpSecurityMode">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.set_Mode(EndToEndBasicHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.AllInstances.TransportGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.ApplyConfigurationBasicHttpRelaySecurity">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.ApplyConfiguration(BasicHttpRelaySecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.Constructor">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.BasicHttpRelaySecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.InitializeFromBasicHttpRelaySecurity">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.InitializeFrom(BasicHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.MessageGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.ModeGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.ModeSetEndToEndBasicHttpSecurityMode">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.set_Mode(EndToEndBasicHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.PropertiesGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimBasicHttpRelaySecurityElement.TransportGet">
            <summary>Sets the shim of BasicHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.#ctor(Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.ApplyConfigurationBindingElement">
            <summary>Sets the shim of ConnectionOrientedTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.ConnectionBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of ConnectionOrientedTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxOutputDelayGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxPendingAcceptsGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxPendingConnectionsGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the shim of ConnectionOrientedTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.ConnectionBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.Constructor">
            <summary>Sets the shim of ConnectionOrientedTransportElement.ConnectionOrientedTransportElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of ConnectionOrientedTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.HostNameComparisonModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxBufferSizeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxOutputDelayGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxPendingAcceptsGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxPendingConnectionsGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.PropertiesGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.TransferModeGet">
            <summary>Sets the shim of ConnectionOrientedTransportElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionOrientedTransportElement.TransferModeSetTransferMode">
            <summary>Sets the shim of ConnectionOrientedTransportElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.ConnectionStatusElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.#ctor(Microsoft.ServiceBus.Configuration.ConnectionStatusElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of ConnectionStatusElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.AllInstances.CreateBehavior">
            <summary>Sets the shim of ConnectionStatusElement.CreateBehavior()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.BehaviorTypeGet">
            <summary>Sets the shim of ConnectionStatusElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.Constructor">
            <summary>Sets the shim of ConnectionStatusElement.ConnectionStatusElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimConnectionStatusElement.CreateBehavior">
            <summary>Sets the shim of ConnectionStatusElement.CreateBehavior()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.HttpRelayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.#ctor(Microsoft.ServiceBus.Configuration.HttpRelayTransportElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.ApplyConfigurationBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.CreateDefaultBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.InitializeFromBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.KeepAliveEnabledGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_KeepAliveEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.KeepAliveEnabledSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_KeepAliveEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of HttpRelayTransportElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of HttpRelayTransportElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.ProxyAuthenticationSchemeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_ProxyAuthenticationScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.ProxyAuthenticationSchemeSetAuthenticationSchemes">
            <summary>Sets the shim of HttpRelayTransportElement.set_ProxyAuthenticationScheme(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of HttpRelayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of HttpRelayTransportElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllowCookiesGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.AllowCookiesSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.BindingElementTypeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.Constructor">
            <summary>Sets the shim of HttpRelayTransportElement.HttpRelayTransportElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.InitializeFromBindingElement">
            <summary>Sets the shim of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.IsDynamicGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.IsDynamicSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.KeepAliveEnabledGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_KeepAliveEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.KeepAliveEnabledSetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_KeepAliveEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.MaxBufferSizeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of HttpRelayTransportElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.PropertiesGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.ProxyAddressGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.ProxyAddressSetUri">
            <summary>Sets the shim of HttpRelayTransportElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.ProxyAuthenticationSchemeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_ProxyAuthenticationScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.ProxyAuthenticationSchemeSetAuthenticationSchemes">
            <summary>Sets the shim of HttpRelayTransportElement.set_ProxyAuthenticationScheme(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of HttpRelayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.TransferModeGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.TransferModeSetTransferMode">
            <summary>Sets the shim of HttpRelayTransportElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.UseDefaultWebProxyGet">
            <summary>Sets the shim of HttpRelayTransportElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportElement.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of HttpRelayTransportElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.#ctor(Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.AllInstances.ApplyConfigurationHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.ApplyConfiguration(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.AllInstances.InitializeFromHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.InitializeFrom(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.AllInstances.ProxyCredentialTypeGet">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.AllInstances.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.ApplyConfigurationHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.ApplyConfiguration(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.Constructor">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.HttpRelayTransportSecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.InitializeFromHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.InitializeFrom(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.ProxyCredentialTypeGet">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpRelayTransportSecurityElement.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of HttpRelayTransportSecurityElement.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.#ctor(Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of HttpsRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.AllInstances.CreateDefaultBindingElement">
            <summary>Sets the shim of HttpsRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.BindingElementTypeGet">
            <summary>Sets the shim of HttpsRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.Constructor">
            <summary>Sets the shim of HttpsRelayTransportElement.HttpsRelayTransportElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimHttpsRelayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the shim of HttpsRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.IssuerElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.#ctor(Microsoft.ServiceBus.Configuration.IssuerElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AddressGet">
            <summary>Sets the shim of IssuerElement.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AddressSetString">
            <summary>Sets the shim of IssuerElement.set_Address(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AllInstances.AddressGet">
            <summary>Sets the shim of IssuerElement.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AllInstances.AddressSetString">
            <summary>Sets the shim of IssuerElement.set_Address(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AllInstances.CopyFromConfigurationElement">
            <summary>Sets the shim of IssuerElement.CopyFrom(ConfigurationElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of IssuerElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.Constructor">
            <summary>Sets the shim of IssuerElement.IssuerElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.CopyFromConfigurationElement">
            <summary>Sets the shim of IssuerElement.CopyFrom(ConfigurationElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimIssuerElement.PropertiesGet">
            <summary>Sets the shim of IssuerElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.#ctor(Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.ApplyConfigurationMessageSecurityOverRelayConnection">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.ApplyConfiguration(MessageSecurityOverRelayConnection security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.InitializeFromMessageSecurityOverRelayConnection">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.InitializeFrom(MessageSecurityOverRelayConnection security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.ApplyConfigurationMessageSecurityOverRelayConnection">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.ApplyConfiguration(MessageSecurityOverRelayConnection security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.MessageSecurityOverRelayConnectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.InitializeFromMessageSecurityOverRelayConnection">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.InitializeFrom(MessageSecurityOverRelayConnection security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayConnectionElement.PropertiesGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnectionElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.#ctor(Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.ApplyConfigurationMessageSecurityOverRelayHttp">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.ApplyConfiguration(MessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.InitializeFromMessageSecurityOverRelayHttp">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.InitializeFrom(MessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.NegotiateServiceCredentialGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_NegotiateServiceCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.AllInstances.NegotiateServiceCredentialSetBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_NegotiateServiceCredential(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.ApplyConfigurationMessageSecurityOverRelayHttp">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.ApplyConfiguration(MessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.MessageSecurityOverRelayHttpElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.InitializeFromMessageSecurityOverRelayHttp">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.InitializeFrom(MessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.NegotiateServiceCredentialGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.get_NegotiateServiceCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayHttpElement.NegotiateServiceCredentialSetBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttpElement.set_NegotiateServiceCredential(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.#ctor(Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.ApplyConfigurationMessageSecurityOverRelayOneway">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.ApplyConfiguration(MessageSecurityOverRelayOneway security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.InitializeFromMessageSecurityOverRelayOneway">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.InitializeFrom(MessageSecurityOverRelayOneway security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.ApplyConfigurationMessageSecurityOverRelayOneway">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.ApplyConfiguration(MessageSecurityOverRelayOneway security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.MessageSecurityOverRelayOnewayElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.InitializeFromMessageSecurityOverRelayOneway">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.InitializeFrom(MessageSecurityOverRelayOneway security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimMessageSecurityOverRelayOnewayElement.PropertiesGet">
            <summary>Sets the shim of MessageSecurityOverRelayOnewayElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of NetEventRelayBindingCollectionElement.NetEventRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of NetEventRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of NetEventRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetEventRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_Security()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.Constructor">
            <summary>Sets the shim of NetEventRelayBindingElement.NetEventRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.ConstructorString">
            <summary>Sets the shim of NetEventRelayBindingElement.NetEventRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of NetEventRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.ListenBacklogGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.ListenBacklogSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxConnectionsGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetEventRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetEventRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.ReaderQuotasGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetEventRelayBindingElement.SecurityGet">
            <summary>Sets the shim of NetEventRelayBindingElement.get_Security()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of NetOnewayRelayBindingCollectionElement.NetOnewayRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of NetOnewayRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of NetOnewayRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetOnewayRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_Security()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.Constructor">
            <summary>Sets the shim of NetOnewayRelayBindingElement.NetOnewayRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.ConstructorString">
            <summary>Sets the shim of NetOnewayRelayBindingElement.NetOnewayRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of NetOnewayRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.ListenBacklogGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.ListenBacklogSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxConnectionsGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetOnewayRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.ReaderQuotasGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelayBindingElement.SecurityGet">
            <summary>Sets the shim of NetOnewayRelayBindingElement.get_Security()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.#ctor(Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.ApplyConfigurationNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.ApplyConfiguration(NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.InitializeFromNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.InitializeFrom(NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.MessageGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.ModeGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.AllInstances.TransportGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.ApplyConfigurationNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.ApplyConfiguration(NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.Constructor">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.NetOnewayRelaySecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.InitializeFromNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.InitializeFrom(NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.MessageGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.ModeGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.PropertiesGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetOnewayRelaySecurityElement.TransportGet">
            <summary>Sets the shim of NetOnewayRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of NetTcpRelayBindingCollectionElement.NetTcpRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of NetTcpRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of NetTcpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetTcpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.ReliableSessionGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ConnectionModeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.Constructor">
            <summary>Sets the shim of NetTcpRelayBindingElement.NetTcpRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ConstructorString">
            <summary>Sets the shim of NetTcpRelayBindingElement.NetTcpRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of NetTcpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.IsDynamicGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.IsDynamicSetBoolean">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ListenBacklogGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ListenBacklogSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxConnectionsGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetTcpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ReaderQuotasGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.ReliableSessionGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.SecurityGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.TransferModeGet">
            <summary>Sets the shim of NetTcpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelayBindingElement.TransferModeSetTransferMode">
            <summary>Sets the shim of NetTcpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.#ctor(Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.ApplyConfigurationNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelaySecurityElement.ApplyConfiguration(NetTcpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.InitializeFromNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelaySecurityElement.InitializeFrom(NetTcpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.MessageGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.ModeGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetTcpRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.AllInstances.TransportGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.ApplyConfigurationNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelaySecurityElement.ApplyConfiguration(NetTcpRelaySecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.Constructor">
            <summary>Sets the shim of NetTcpRelaySecurityElement.NetTcpRelaySecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.InitializeFromNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelaySecurityElement.InitializeFrom(NetTcpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.MessageGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.ModeGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetTcpRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.PropertiesGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNetTcpRelaySecurityElement.TransportGet">
            <summary>Sets the shim of NetTcpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.#ctor(Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances.ApplyConfigurationNonDualMessageSecurityOverRelayHttp">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.ApplyConfiguration(NonDualMessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances.EstablishSecurityContextGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.get_EstablishSecurityContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances.EstablishSecurityContextSetBoolean">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.set_EstablishSecurityContext(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances.InitializeFromNonDualMessageSecurityOverRelayHttp">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.InitializeFrom(NonDualMessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.ApplyConfigurationNonDualMessageSecurityOverRelayHttp">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.ApplyConfiguration(NonDualMessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.Constructor">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.NonDualMessageSecurityOverRelayHttpElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContextGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.get_EstablishSecurityContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContextSetBoolean">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.set_EstablishSecurityContext(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.InitializeFromNonDualMessageSecurityOverRelayHttp">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.InitializeFrom(NonDualMessageSecurityOverRelayHttp security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimNonDualMessageSecurityOverRelayHttpElement.PropertiesGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttpElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.#ctor(Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ApplyConfigurationBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ConnectionModeSetRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ConnectionMode(RelayedOnewayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ConnectionPoolSettingsGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ConnectionPoolSettingsSetSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ConnectionPoolSettings(SocketConnectionPoolSettingsElement value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.CreateDefaultBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.InitializeFromBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.BindingElementTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ConnectionModeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ConnectionModeSetRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ConnectionMode(RelayedOnewayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ConnectionPoolSettingsGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ConnectionPoolSettingsSetSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ConnectionPoolSettings(SocketConnectionPoolSettingsElement value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.Constructor">
            <summary>Sets the shim of RelayedOnewayTransportElement.RelayedOnewayTransportElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.InitializeFromBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ListenBacklogGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.ListenBacklogSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.PropertiesGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of RelayedOnewayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.#ctor(Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances.ApplyConfigurationRelayedOnewayTransportSecurity">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.ApplyConfiguration(RelayedOnewayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances.InitializeFromRelayedOnewayTransportSecurity">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.InitializeFrom(RelayedOnewayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances.ProtectionLevelGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.AllInstances.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.ApplyConfigurationRelayedOnewayTransportSecurity">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.ApplyConfiguration(RelayedOnewayTransportSecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.Constructor">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.RelayedOnewayTransportSecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.InitializeFromRelayedOnewayTransportSecurity">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.InitializeFrom(RelayedOnewayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.PropertiesGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.ProtectionLevelGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimRelayedOnewayTransportSecurityElement.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of RelayedOnewayTransportSecurityElement.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.#ctor(Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.CreateBehavior">
            <summary>Sets the shim of ServiceRegistrySettingsElement.CreateBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.DiscoveryModeGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_DiscoveryMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.DiscoveryModeSetDiscoveryType">
            <summary>Sets the shim of ServiceRegistrySettingsElement.set_DiscoveryMode(DiscoveryType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.DisplayNameGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of ServiceRegistrySettingsElement.set_DisplayName(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.BehaviorTypeGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.Constructor">
            <summary>Sets the shim of ServiceRegistrySettingsElement.ServiceRegistrySettingsElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.CreateBehavior">
            <summary>Sets the shim of ServiceRegistrySettingsElement.CreateBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.DiscoveryModeGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_DiscoveryMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.DiscoveryModeSetDiscoveryType">
            <summary>Sets the shim of ServiceRegistrySettingsElement.set_DiscoveryMode(DiscoveryType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.DisplayNameGet">
            <summary>Sets the shim of ServiceRegistrySettingsElement.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimServiceRegistrySettingsElement.DisplayNameSetString">
            <summary>Sets the shim of ServiceRegistrySettingsElement.set_DisplayName(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.#ctor(Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.CopyFromSharedAccessSignatureElement">
            <summary>Sets the shim of SharedAccessSignatureElement.CopyFrom(SharedAccessSignatureElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.IsValidGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.KeyGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_Key()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.KeyNameGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.KeyNameSetString">
            <summary>Sets the shim of SharedAccessSignatureElement.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.KeySetString">
            <summary>Sets the shim of SharedAccessSignatureElement.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.TokenScopeGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.AllInstances.TokenScopeSetTokenScope">
            <summary>Sets the shim of SharedAccessSignatureElement.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.Constructor">
            <summary>Sets the shim of SharedAccessSignatureElement.SharedAccessSignatureElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.CopyFromSharedAccessSignatureElement">
            <summary>Sets the shim of SharedAccessSignatureElement.CopyFrom(SharedAccessSignatureElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.IsValidGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.KeyGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_Key()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.KeyNameGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.KeyNameSetString">
            <summary>Sets the shim of SharedAccessSignatureElement.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.KeySetString">
            <summary>Sets the shim of SharedAccessSignatureElement.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.PropertiesGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.TokenScopeGet">
            <summary>Sets the shim of SharedAccessSignatureElement.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedAccessSignatureElement.TokenScopeSetTokenScope">
            <summary>Sets the shim of SharedAccessSignatureElement.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.SharedSecretElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.#ctor(Microsoft.ServiceBus.Configuration.SharedSecretElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.CopyFromSharedSecretElement">
            <summary>Sets the shim of SharedSecretElement.CopyFrom(SharedSecretElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.IsValidGet">
            <summary>Sets the shim of SharedSecretElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.IssuerNameGet">
            <summary>Sets the shim of SharedSecretElement.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.IssuerNameSetString">
            <summary>Sets the shim of SharedSecretElement.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.IssuerSecretGet">
            <summary>Sets the shim of SharedSecretElement.get_IssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.IssuerSecretSetString">
            <summary>Sets the shim of SharedSecretElement.set_IssuerSecret(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of SharedSecretElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.TokenScopeGet">
            <summary>Sets the shim of SharedSecretElement.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.AllInstances.TokenScopeSetTokenScope">
            <summary>Sets the shim of SharedSecretElement.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.Constructor">
            <summary>Sets the shim of SharedSecretElement.SharedSecretElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.CopyFromSharedSecretElement">
            <summary>Sets the shim of SharedSecretElement.CopyFrom(SharedSecretElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.IsValidGet">
            <summary>Sets the shim of SharedSecretElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.IssuerNameGet">
            <summary>Sets the shim of SharedSecretElement.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.IssuerNameSetString">
            <summary>Sets the shim of SharedSecretElement.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.IssuerSecretGet">
            <summary>Sets the shim of SharedSecretElement.get_IssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.IssuerSecretSetString">
            <summary>Sets the shim of SharedSecretElement.set_IssuerSecret(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.PropertiesGet">
            <summary>Sets the shim of SharedSecretElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.TokenScopeGet">
            <summary>Sets the shim of SharedSecretElement.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSharedSecretElement.TokenScopeSetTokenScope">
            <summary>Sets the shim of SharedSecretElement.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.#ctor(Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.ApplyConfigurationSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.ApplyConfiguration(SocketConnectionPoolSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.CopyFromSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.CopyFrom(SocketConnectionPoolSettingsElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.GroupNameGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.GroupNameSetString">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.IdleTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_IdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.IdleTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_IdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.InitializeFromSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.InitializeFrom(SocketConnectionPoolSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.LeaseTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.MaxOutboundConnectionsPerEndpointGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_MaxOutboundConnectionsPerEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.MaxOutboundConnectionsPerEndpointSetInt32">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_MaxOutboundConnectionsPerEndpoint(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.ApplyConfigurationSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.ApplyConfiguration(SocketConnectionPoolSettings settings)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.Constructor">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.SocketConnectionPoolSettingsElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.CopyFromSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.CopyFrom(SocketConnectionPoolSettingsElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.GroupNameGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.GroupNameSetString">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.IdleTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_IdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.IdleTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_IdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.InitializeFromSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.InitializeFrom(SocketConnectionPoolSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.LeaseTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpointGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_MaxOutboundConnectionsPerEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpointSetInt32">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.set_MaxOutboundConnectionsPerEndpoint(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimSocketConnectionPoolSettingsElement.PropertiesGet">
            <summary>Sets the shim of SocketConnectionPoolSettingsElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.StsUriElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.#ctor(Microsoft.ServiceBus.Configuration.StsUriElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.AllInstances.ValueGet">
            <summary>Sets the shim of StsUriElement.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.AllInstances.ValueSetUri">
            <summary>Sets the shim of StsUriElement.set_Value(Uri value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.Constructor">
            <summary>Sets the shim of StsUriElement.StsUriElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.ValueGet">
            <summary>Sets the shim of StsUriElement.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElement.ValueSetUri">
            <summary>Sets the shim of StsUriElement.set_Value(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.StsUriElementCollection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.#ctor(Microsoft.ServiceBus.Configuration.StsUriElementCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AddressesGet">
            <summary>Sets the shim of StsUriElementCollection.get_Addresses()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances.AddressesGet">
            <summary>Sets the shim of StsUriElementCollection.get_Addresses()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of StsUriElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances.ElementNameGet">
            <summary>Sets the shim of StsUriElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of StsUriElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.AllInstances.IsElementNameString">
            <summary>Sets the shim of StsUriElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.Constructor">
            <summary>Sets the shim of StsUriElementCollection.StsUriElementCollection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.CreateNewElement">
            <summary>Sets the shim of StsUriElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.ElementNameGet">
            <summary>Sets the shim of StsUriElementCollection.get_ElementName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of StsUriElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection.IsElementNameString">
            <summary>Sets the shim of StsUriElementCollection.IsElementName(String elementName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimStsUriElementCollection._get_Addressesb__1StsUriElement">
            <summary>Sets the shim of StsUriElementCollection.&lt;get_Addresses&gt;b__1(StsUriElement stsUri)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.TcpRelayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.#ctor(Microsoft.ServiceBus.Configuration.TcpRelayTransportElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ApplyConfigurationBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of TcpRelayTransportElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ConnectionPoolSettingsGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ConnectionPoolSettingsSetSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of TcpRelayTransportElement.set_ConnectionPoolSettings(SocketConnectionPoolSettingsElement value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TcpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.CreateDefaultBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.InitializeFromBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of TcpRelayTransportElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of TcpRelayTransportElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of TcpRelayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.BindingElementTypeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ConnectionModeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of TcpRelayTransportElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ConnectionPoolSettingsGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ConnectionPoolSettingsSetSocketConnectionPoolSettingsElement">
            <summary>Sets the shim of TcpRelayTransportElement.set_ConnectionPoolSettings(SocketConnectionPoolSettingsElement value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.Constructor">
            <summary>Sets the shim of TcpRelayTransportElement.TcpRelayTransportElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TcpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.InitializeFromBindingElement">
            <summary>Sets the shim of TcpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.IsDynamicGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.IsDynamicSetBoolean">
            <summary>Sets the shim of TcpRelayTransportElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ListenBacklogGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.ListenBacklogSetInt32">
            <summary>Sets the shim of TcpRelayTransportElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.PropertiesGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of TcpRelayTransportElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of TcpRelayTransportElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.#ctor(Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances.ApplyConfigurationTcpRelayTransportSecurity">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.ApplyConfiguration(TcpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances.InitializeFromTcpRelayTransportSecurity">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.InitializeFrom(TcpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances.ProtectionLevelGet">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.AllInstances.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.ApplyConfigurationTcpRelayTransportSecurity">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.ApplyConfiguration(TcpRelayTransportSecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.Constructor">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.TcpRelayTransportSecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.InitializeFromTcpRelayTransportSecurity">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.InitializeFrom(TcpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.PropertiesGet">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.ProtectionLevelGet">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTcpRelayTransportSecurityElement.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of TcpRelayTransportSecurityElement.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.TokenProviderElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.#ctor(Microsoft.ServiceBus.Configuration.TokenProviderElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TokenProviderElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.CreateTokenProvider">
            <summary>Sets the shim of TokenProviderElement.CreateTokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.IsValidGet">
            <summary>Sets the shim of TokenProviderElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.NameGet">
            <summary>Sets the shim of TokenProviderElement.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.NameSetString">
            <summary>Sets the shim of TokenProviderElement.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of TokenProviderElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.SharedAccessSignatureGet">
            <summary>Sets the shim of TokenProviderElement.get_SharedAccessSignature()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.SharedSecretGet">
            <summary>Sets the shim of TokenProviderElement.get_SharedSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.AllInstances.WindowsAuthenticationGet">
            <summary>Sets the shim of TokenProviderElement.get_WindowsAuthentication()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.Constructor">
            <summary>Sets the shim of TokenProviderElement.TokenProviderElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TokenProviderElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.CreateTokenProvider">
            <summary>Sets the shim of TokenProviderElement.CreateTokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.IsValidGet">
            <summary>Sets the shim of TokenProviderElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.NameGet">
            <summary>Sets the shim of TokenProviderElement.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.NameSetString">
            <summary>Sets the shim of TokenProviderElement.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.PropertiesGet">
            <summary>Sets the shim of TokenProviderElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.SharedAccessSignatureGet">
            <summary>Sets the shim of TokenProviderElement.get_SharedAccessSignature()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.SharedSecretGet">
            <summary>Sets the shim of TokenProviderElement.get_SharedSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElement.WindowsAuthenticationGet">
            <summary>Sets the shim of TokenProviderElement.get_WindowsAuthentication()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.TokenProviderElementCollection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.#ctor(Microsoft.ServiceBus.Configuration.TokenProviderElementCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.AllInstances.CreateNewElement">
            <summary>Sets the shim of TokenProviderElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.AllInstances.GetElementKeyConfigurationElement">
            <summary>Sets the shim of TokenProviderElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of TokenProviderElementCollection.get_Item(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.Constructor">
            <summary>Sets the shim of TokenProviderElementCollection.TokenProviderElementCollection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.CreateNewElement">
            <summary>Sets the shim of TokenProviderElementCollection.CreateNewElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.GetElementKeyConfigurationElement">
            <summary>Sets the shim of TokenProviderElementCollection.GetElementKey(ConfigurationElement element)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTokenProviderElementCollection.ItemGetString">
            <summary>Sets the shim of TokenProviderElementCollection.get_Item(String name)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.#ctor(Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances.BehaviorTypeGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances.CreateBehavior">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.CreateBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.AllInstances.TokenProviderGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_TokenProvider()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.BehaviorTypeGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.Constructor">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.TransportClientEndpointBehaviorElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.CreateBehavior">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.CreateBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.PropertiesGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimTransportClientEndpointBehaviorElement.TokenProviderGet">
            <summary>Sets the shim of TransportClientEndpointBehaviorElement.get_TokenProvider()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of WS2007HttpRelayBindingCollectionElement.WS2007HttpRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of WS2007HttpRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of WS2007HttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of WS2007HttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.Constructor">
            <summary>Sets the shim of WS2007HttpRelayBindingElement.WS2007HttpRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWS2007HttpRelayBindingElement.ConstructorString">
            <summary>Sets the shim of WS2007HttpRelayBindingElement.WS2007HttpRelayBindingElement(String name)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.#ctor(Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MessageEncodingGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.ReliableSessionGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.Constructor">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.ConstructorString">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.WSHttpRelayBindingBaseElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.InitializeFromBinding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.IsDynamicGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.IsDynamicSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MessageEncodingGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.ProxyAddressGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.ProxyAddressSetUri">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.ReaderQuotasGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.ReliableSessionGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.UseDefaultWebProxyGet">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingBaseElement.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBaseElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of WSHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of WSHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllowCookiesGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.AllowCookiesSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.ConstructorString">
            <summary>Sets the shim of WSHttpRelayBindingElement.WSHttpRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of WSHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of WSHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayBindingElement.SecurityGet">
            <summary>Sets the shim of WSHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.#ctor(Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.ApplyConfigurationWSHttpRelaySecurity">
            <summary>Sets the shim of WSHttpRelaySecurityElement.ApplyConfiguration(WSHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.InitializeFromWSHttpRelaySecurity">
            <summary>Sets the shim of WSHttpRelaySecurityElement.InitializeFrom(WSHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.MessageGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.ModeGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of WSHttpRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WSHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.AllInstances.TransportGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.ApplyConfigurationWSHttpRelaySecurity">
            <summary>Sets the shim of WSHttpRelaySecurityElement.ApplyConfiguration(WSHttpRelaySecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.Constructor">
            <summary>Sets the shim of WSHttpRelaySecurityElement.WSHttpRelaySecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.InitializeFromWSHttpRelaySecurity">
            <summary>Sets the shim of WSHttpRelaySecurityElement.InitializeFrom(WSHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.MessageGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.ModeGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of WSHttpRelaySecurityElement.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.PropertiesGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WSHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelaySecurityElement.TransportGet">
            <summary>Sets the shim of WSHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.#ctor(Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances.ApplyConfigurationHttpRelayTransportSecurity">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.ApplyConfiguration(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances.InitializeFromHttpRelayTransportSecurity">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.InitializeFrom(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances.ProxyCredentialTypeGet">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.AllInstances.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.ApplyConfigurationHttpRelayTransportSecurity">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.ApplyConfiguration(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.Constructor">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.WSHttpRelayTransportSecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.InitializeFromHttpRelayTransportSecurity">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.InitializeFrom(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.PropertiesGet">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.ProxyCredentialTypeGet">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWSHttpRelayTransportSecurityElement.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of WSHttpRelayTransportSecurityElement.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.#ctor(Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.AllInstances.GetDefault">
            <summary>Sets the shim of WebHttpRelayBindingCollectionElement.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.Constructor">
            <summary>Sets the shim of WebHttpRelayBindingCollectionElement.WebHttpRelayBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of WebHttpRelayBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingCollectionElement.GetDefault">
            <summary>Sets the shim of WebHttpRelayBindingCollectionElement.GetDefault()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.#ctor(Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.ApplyReaderQuotasConfigurationXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBindingElement.ApplyReaderQuotasConfiguration(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of WebHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.InitializeReaderQuotasXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBindingElement.InitializeReaderQuotas(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of WebHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.SecurityGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllowCookiesGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.AllowCookiesSetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.ApplyReaderQuotasConfigurationXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBindingElement.ApplyReaderQuotasConfiguration(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.Constructor">
            <summary>Sets the shim of WebHttpRelayBindingElement.WebHttpRelayBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.ConstructorString">
            <summary>Sets the shim of WebHttpRelayBindingElement.WebHttpRelayBindingElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the shim of WebHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.InitializeReaderQuotasXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBindingElement.InitializeReaderQuotas(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.IsDynamicGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.IsDynamicSetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of WebHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.PropertiesGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.ProxyAddressGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.ProxyAddressSetUri">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.ReaderQuotasGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.SecurityGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.TransferModeGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.TransferModeSetTransferMode">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.UseDefaultWebProxyGet">
            <summary>Sets the shim of WebHttpRelayBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelayBindingElement.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WebHttpRelayBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.#ctor(Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.ApplyConfigurationWebHttpRelaySecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.ApplyConfiguration(WebHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.InitializeFromWebHttpRelaySecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.InitializeFrom(WebHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.InitializeTransportSecurityHttpRelayTransportSecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.InitializeTransportSecurity(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.ModeGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.ModeSetEndToEndWebHttpSecurityMode">
            <summary>Sets the shim of WebHttpRelaySecurityElement.set_Mode(EndToEndWebHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WebHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.AllInstances.TransportGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.ApplyConfigurationWebHttpRelaySecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.ApplyConfiguration(WebHttpRelaySecurity security)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.Constructor">
            <summary>Sets the shim of WebHttpRelaySecurityElement.WebHttpRelaySecurityElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.InitializeFromWebHttpRelaySecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.InitializeFrom(WebHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.InitializeTransportSecurityHttpRelayTransportSecurity">
            <summary>Sets the shim of WebHttpRelaySecurityElement.InitializeTransportSecurity(HttpRelayTransportSecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.ModeGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.ModeSetEndToEndWebHttpSecurityMode">
            <summary>Sets the shim of WebHttpRelaySecurityElement.set_Mode(EndToEndWebHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.PropertiesGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WebHttpRelaySecurityElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWebHttpRelaySecurityElement.TransportGet">
            <summary>Sets the shim of WebHttpRelaySecurityElement.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.WindowsElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.#ctor(Microsoft.ServiceBus.Configuration.WindowsElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.CopyFromWindowsElement">
            <summary>Sets the shim of WindowsElement.CopyFrom(WindowsElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.DomainGet">
            <summary>Sets the shim of WindowsElement.get_Domain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.DomainSetString">
            <summary>Sets the shim of WindowsElement.set_Domain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.IsValidGet">
            <summary>Sets the shim of WindowsElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.PasswordGet">
            <summary>Sets the shim of WindowsElement.get_Password()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.PasswordSetString">
            <summary>Sets the shim of WindowsElement.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of WindowsElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.StsUrisGet">
            <summary>Sets the shim of WindowsElement.get_StsUris()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.UseDefaultCredentialsGet">
            <summary>Sets the shim of WindowsElement.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.UseDefaultCredentialsSetBoolean">
            <summary>Sets the shim of WindowsElement.set_UseDefaultCredentials(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.UserNameGet">
            <summary>Sets the shim of WindowsElement.get_UserName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.AllInstances.UserNameSetString">
            <summary>Sets the shim of WindowsElement.set_UserName(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.Constructor">
            <summary>Sets the shim of WindowsElement.WindowsElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.CopyFromWindowsElement">
            <summary>Sets the shim of WindowsElement.CopyFrom(WindowsElement source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.DomainGet">
            <summary>Sets the shim of WindowsElement.get_Domain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.DomainSetString">
            <summary>Sets the shim of WindowsElement.set_Domain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.IsValidGet">
            <summary>Sets the shim of WindowsElement.get_IsValid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.PasswordGet">
            <summary>Sets the shim of WindowsElement.get_Password()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.PasswordSetString">
            <summary>Sets the shim of WindowsElement.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.PropertiesGet">
            <summary>Sets the shim of WindowsElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.StsUrisGet">
            <summary>Sets the shim of WindowsElement.get_StsUris()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.UseDefaultCredentialsGet">
            <summary>Sets the shim of WindowsElement.get_UseDefaultCredentials()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.UseDefaultCredentialsSetBoolean">
            <summary>Sets the shim of WindowsElement.set_UseDefaultCredentials(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.UserNameGet">
            <summary>Sets the shim of WindowsElement.get_UserName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimWindowsElement.UserNameSetString">
            <summary>Sets the shim of WindowsElement.set_UserName(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement">
            <summary>Shim type of Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.#ctor(Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.ApplyConfigurationXmlDictionaryReaderQuotas">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.ApplyConfiguration(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.InitializeFromXmlDictionaryReaderQuotas">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.InitializeFrom(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxArrayLengthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxArrayLength()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxArrayLengthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxArrayLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxBytesPerReadGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxBytesPerRead()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxBytesPerReadSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxBytesPerRead(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxDepthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxDepth()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxDepthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxNameTableCharCountGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxNameTableCharCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxNameTableCharCountSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxNameTableCharCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxStringContentLengthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxStringContentLength()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.MaxStringContentLengthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxStringContentLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.ApplyConfigurationXmlDictionaryReaderQuotas">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.ApplyConfiguration(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.Constructor">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.XmlDictionaryReaderQuotasElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.InitializeFromXmlDictionaryReaderQuotas">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.InitializeFrom(XmlDictionaryReaderQuotas readerQuotas)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxArrayLengthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxArrayLength()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxArrayLengthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxArrayLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxBytesPerReadGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxBytesPerRead()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxBytesPerReadSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxBytesPerRead(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxDepthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxDepth()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxDepthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxDepth(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxNameTableCharCountGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxNameTableCharCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxNameTableCharCountSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxNameTableCharCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxStringContentLengthGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_MaxStringContentLength()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.MaxStringContentLengthSetInt32">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.set_MaxStringContentLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.ShimXmlDictionaryReaderQuotasElement.PropertiesGet">
            <summary>Sets the shim of XmlDictionaryReaderQuotasElement.get_Properties()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubBasicHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.BindingElementType">
            <summary>Sets the stub of BasicHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of BasicHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of BasicHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of BasicHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubBasicHttpRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of BasicHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of BasicHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Properties">
            <summary>Sets the stub of BasicHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of BasicHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubBasicHttpRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.ConnectionStatusElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.BehaviorType">
            <summary>Sets the stub of ConnectionStatusElement.get_BehaviorType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.BehaviorTypeGet">
            <summary>Sets the stub of ConnectionStatusElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the stub of ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.CreateBehavior">
            <summary>Sets the stub of ConnectionStatusElement.CreateBehavior()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.CreateBehavior01">
            <summary>Sets the stub of ConnectionStatusElement.CreateBehavior()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionStatusElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.IsModified">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.IsModified01">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ResetConfigurationElement">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubConnectionStatusElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.HttpRelayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Sets the stub of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the stub of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.BindingElementType">
            <summary>Sets the stub of HttpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.BindingElementTypeGet">
            <summary>Sets the stub of HttpRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Sets the stub of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the stub of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CreateBindingElement">
            <summary>Sets the stub of TransportElement.CreateBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CreateBindingElement01">
            <summary>Sets the stub of TransportElement.CreateBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the stub of HttpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.CreateDefaultBindingElement01">
            <summary>Sets the stub of HttpRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary>Sets the stub of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InitializeFromBindingElement">
            <summary>Sets the stub of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRelayTransportElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.IsModified">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.IsModified01">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Properties">
            <summary>Sets the stub of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.PropertiesGet">
            <summary>Sets the stub of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ResetConfigurationElement">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpRelayTransportElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>Sets the stub of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ApplyConfigurationBindingElement">
            <summary>Sets the stub of HttpRelayTransportElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.BindingElementType">
            <summary>Sets the stub of HttpsRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.BindingElementTypeGet">
            <summary>Sets the stub of HttpsRelayTransportElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Sets the stub of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the stub of HttpRelayTransportElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CreateBindingElement">
            <summary>Sets the stub of TransportElement.CreateBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CreateBindingElement01">
            <summary>Sets the stub of TransportElement.CreateBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CreateDefaultBindingElement">
            <summary>Sets the stub of HttpsRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.CreateDefaultBindingElement01">
            <summary>Sets the stub of HttpsRelayTransportElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
            <summary>Sets the stub of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InitializeFromBindingElement">
            <summary>Sets the stub of HttpRelayTransportElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InitializeStub">
            <summary>Initializes a new instance of type StubHttpsRelayTransportElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.IsModified">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.IsModified01">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Properties">
            <summary>Sets the stub of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.PropertiesGet">
            <summary>Sets the stub of HttpRelayTransportElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ResetConfigurationElement">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubHttpsRelayTransportElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetEventRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.BindingElementType">
            <summary>Sets the stub of NetEventRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of NetEventRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetEventRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of NetEventRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetEventRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetEventRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of NetEventRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Properties">
            <summary>Sets the stub of NetEventRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of NetEventRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetEventRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetOnewayRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.BindingElementType">
            <summary>Sets the stub of NetOnewayRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of NetOnewayRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetOnewayRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of NetOnewayRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetOnewayRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetOnewayRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of NetOnewayRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Properties">
            <summary>Sets the stub of NetOnewayRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of NetOnewayRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetOnewayRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetTcpRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.BindingElementType">
            <summary>Sets the stub of NetTcpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of NetTcpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetTcpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of NetTcpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubNetTcpRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of NetTcpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of NetTcpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Properties">
            <summary>Sets the stub of NetTcpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of NetTcpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubNetTcpRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.BehaviorType">
            <summary>Sets the stub of ServiceRegistrySettingsElement.get_BehaviorType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.BehaviorTypeGet">
            <summary>Sets the stub of ServiceRegistrySettingsElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the stub of ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.CreateBehavior">
            <summary>Sets the stub of ServiceRegistrySettingsElement.CreateBehavior()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.CreateBehavior01">
            <summary>Sets the stub of ServiceRegistrySettingsElement.CreateBehavior()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.InitializeStub">
            <summary>Initializes a new instance of type StubServiceRegistrySettingsElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.IsModified">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.IsModified01">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ResetConfigurationElement">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubServiceRegistrySettingsElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.BehaviorType">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.get_BehaviorType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.BehaviorTypeGet">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.get_BehaviorType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.CreateBehavior">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.CreateBehavior()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.CreateBehavior01">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.CreateBehavior()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.InitializeStub">
            <summary>Initializes a new instance of type StubTransportClientEndpointBehaviorElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.IsModified">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.IsModified01">
            <summary>Sets the stub of ServiceModelExtensionElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Properties">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.PropertiesGet">
            <summary>Sets the stub of TransportClientEndpointBehaviorElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ResetConfigurationElement">
            <summary>Sets the stub of ServiceModelExtensionElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ServiceModelExtensionElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubTransportClientEndpointBehaviorElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of StandardBindingCollectionElement`2.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubWS2007HttpRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.BindingElementType">
            <summary>Sets the stub of WS2007HttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of WS2007HttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WSHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of WSHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubWS2007HttpRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WSHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of WSHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Properties">
            <summary>Sets the stub of WSHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of WSHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWS2007HttpRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.BindingElementType">
            <summary>Sets the stub of StandardBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.BindingElementTypeGet">
            <summary>Sets the stub of StandardBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InitializeFromBinding">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InitializeStub">
            <summary>Initializes a new instance of type StubWSHttpRelayBindingBaseElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Properties">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.PropertiesGet">
            <summary>Sets the stub of WSHttpRelayBindingBaseElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWSHttpRelayBindingBaseElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.BindingType">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.BindingTypeGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_BindingType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ConfiguredBindings">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ConfiguredBindingsGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_ConfiguredBindings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ContainsKey(System.String)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ContainsKeyString">
            <summary>Sets the stub of StandardBindingCollectionElement`2.ContainsKey(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetDefault">
            <summary>Sets the stub of WebHttpRelayBindingCollectionElement.GetDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetDefault01">
            <summary>Sets the stub of WebHttpRelayBindingCollectionElement.GetDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.InitializeStub">
            <summary>Initializes a new instance of type StubWebHttpRelayBindingCollectionElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Properties">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.PropertiesGet">
            <summary>Sets the stub of StandardBindingCollectionElement`2.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.TryAdd(System.String,System.ServiceModel.Channels.Binding,System.Configuration.Configuration)">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.TryAddStringBindingConfiguration">
            <summary>Sets the stub of StandardBindingCollectionElement`2.TryAdd(String name, Binding binding, Configuration config)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingCollectionElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.BindingElementType">
            <summary>Sets the stub of WebHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.BindingElementTypeGet">
            <summary>Sets the stub of WebHttpRelayBindingElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WebHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InitializeFromBinding">
            <summary>Sets the stub of WebHttpRelayBindingElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubWebHttpRelayBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>Sets the stub of WebHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnApplyConfigurationBinding">
            <summary>Sets the stub of WebHttpRelayBindingElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Properties">
            <summary>Sets the stub of WebHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.PropertiesGet">
            <summary>Sets the stub of WebHttpRelayBindingElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ResetConfigurationElement">
            <summary>Sets the stub of StandardBindingElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Configuration.Fakes.StubWebHttpRelayBindingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter">
            <summary>Shim type of Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.#ctor(Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IPolicyImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IWsdlImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.Constructor">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.HttpRelayTransportBindingElementImporter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimHttpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter">
            <summary>Shim type of Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.#ctor(Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IPolicyImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IWsdlImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.Constructor">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.OnewayRelayTransportBindingElementImporter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimOnewayRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of OnewayRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter">
            <summary>Shim type of Microsoft.ServiceBus.Description.StandardRelayBindingImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.#ctor(Microsoft.ServiceBus.Description.StandardRelayBindingImporter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.AllInstances.BeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of StandardRelayBindingImporter.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.AllInstances.ImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of StandardRelayBindingImporter.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.AllInstances.ImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of StandardRelayBindingImporter.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext endpointContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.BeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of StandardRelayBindingImporter.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.Bind(System.ServiceModel.Description.IWsdlImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.Constructor">
            <summary>Sets the shim of StandardRelayBindingImporter.StandardRelayBindingImporter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.ImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of StandardRelayBindingImporter.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.ImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of StandardRelayBindingImporter.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext endpointContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimStandardRelayBindingImporter.SetBindingServiceEndpointBinding">
            <summary>Sets the shim of StandardRelayBindingImporter.SetBinding(ServiceEndpoint endpoint, Binding binding)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter">
            <summary>Shim type of Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.#ctor(Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.AllInstances.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IPolicyImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.Bind(System.ServiceModel.Description.IWsdlImportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.Constructor">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.TcpRelayTransportBindingElementImporter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIPolicyImportExtensionImportPolicyMetadataImporterPolicyConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter importer, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionBeforeImportServiceDescriptionCollectionXmlSchemaSetICollectionOfXmlElement">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(ServiceDescriptionCollection wsdlDocuments, XmlSchemaSet xmlSchemas, ICollection`1&lt;XmlElement&gt; policy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportContractWsdlImporterWsdlContractConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportContract(WsdlImporter importer, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.ShimTcpRelayTransportBindingElementImporter.SystemServiceModelDescriptionIWsdlImportExtensionImportEndpointWsdlImporterWsdlEndpointConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElementImporter.System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(WsdlImporter importer, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter">
            <summary>Stub type of Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubHttpRelayTransportBindingElementImporter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter">
            <summary>Stub type of Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter.InitializeStub">
            <summary>Initializes a new instance of type StubOnewayRelayTransportBindingElementImporter</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubOnewayRelayTransportBindingElementImporter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter">
            <summary>Stub type of Microsoft.ServiceBus.Description.StandardRelayBindingImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter.InitializeStub">
            <summary>Initializes a new instance of type StubStandardRelayBindingImporter</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubStandardRelayBindingImporter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter">
            <summary>Stub type of Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter.InitializeStub">
            <summary>Initializes a new instance of type StubTcpRelayTransportBindingElementImporter</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Description.Fakes.StubTcpRelayTransportBindingElementImporter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException">
            <summary>Shim type of Microsoft.ServiceBus.AuthorizationFailedException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.#ctor(Microsoft.ServiceBus.AuthorizationFailedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of AuthorizationFailedException.get_ErrorCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.AllInstances.ErrorCodeSetAuthorizationFailedExceptionFailureCode">
            <summary>Sets the shim of AuthorizationFailedException.set_ErrorCode(FailureCode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AuthorizationFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.Constructor">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorAuthorizationFailedExceptionFailureCode">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(FailureCode failureCode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorAuthorizationFailedExceptionFailureCodeString">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(FailureCode failureCode, String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorAuthorizationFailedExceptionFailureCodeStringException">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(FailureCode failureCode, String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorString">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ConstructorStringException">
            <summary>Sets the shim of AuthorizationFailedException.AuthorizationFailedException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ErrorCodeGet">
            <summary>Sets the shim of AuthorizationFailedException.get_ErrorCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.ErrorCodeSetAuthorizationFailedExceptionFailureCode">
            <summary>Sets the shim of AuthorizationFailedException.set_ErrorCode(FailureCode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.FormatExceptionMessageAuthorizationFailedExceptionFailureCodeString">
            <summary>Sets the shim of AuthorizationFailedException.FormatExceptionMessage(FailureCode code, String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimAuthorizationFailedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AuthorizationFailedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.BasicHttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.BasicHttpRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of BasicHttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of BasicHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.EnvelopeVersionGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.GetTransport">
            <summary>Sets the shim of BasicHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of BasicHttpRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.Initialize">
            <summary>Sets the shim of BasicHttpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.InitializeFromHttpRelayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of BasicHttpRelayBinding.InitializeFrom(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.IsBindingElementsMatchHttpRelayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of BasicHttpRelayBinding.IsBindingElementsMatch(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.IsDynamicGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MessageEncodingGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of BasicHttpRelayBinding.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of BasicHttpRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of BasicHttpRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.SchemeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.SecurityGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.TransferModeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of BasicHttpRelayBinding.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllowCookiesGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.AllowCookiesSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of BasicHttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.Constructor">
            <summary>Sets the shim of BasicHttpRelayBinding.BasicHttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ConstructorBasicHttpRelaySecurity">
            <summary>Sets the shim of BasicHttpRelayBinding.BasicHttpRelayBinding(BasicHttpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ConstructorEndToEndBasicHttpSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of BasicHttpRelayBinding.BasicHttpRelayBinding(EndToEndBasicHttpSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ConstructorString">
            <summary>Sets the shim of BasicHttpRelayBinding.BasicHttpRelayBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.CreateBindingElements">
            <summary>Sets the shim of BasicHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.CreateMessageSecurity">
            <summary>Sets the shim of BasicHttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.EnvelopeVersionGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.GetTransport">
            <summary>Sets the shim of BasicHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.HostNameComparisonModeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of BasicHttpRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.Initialize">
            <summary>Sets the shim of BasicHttpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.InitializeFromHttpRelayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of BasicHttpRelayBinding.InitializeFrom(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.IsBindingElementsMatchHttpRelayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of BasicHttpRelayBinding.IsBindingElementsMatch(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.IsDynamicGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.IsDynamicSetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxBufferPoolSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxBufferSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxBufferSizeSetInt32">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MessageEncodingGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of BasicHttpRelayBinding.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ProxyAddressGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ProxyAddressSetUri">
            <summary>Sets the shim of BasicHttpRelayBinding.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ReaderQuotasGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of BasicHttpRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of BasicHttpRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.SchemeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.SecurityGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.TransferModeGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.TransferModeSetTransferMode">
            <summary>Sets the shim of BasicHttpRelayBinding.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.TryCreateBindingElementCollectionBindingOut">
            <summary>Sets the shim of BasicHttpRelayBinding.TryCreate(BindingElementCollection elements, Binding&amp; binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.UseDefaultWebProxyGet">
            <summary>Sets the shim of BasicHttpRelayBinding.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayBinding.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of BasicHttpRelayBinding.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity">
            <summary>Shim type of Microsoft.ServiceBus.BasicHttpRelayMessageSecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.#ctor(Microsoft.ServiceBus.BasicHttpRelayMessageSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AlgorithmSuiteGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances.ClientCredentialTypeSetBasicHttpMessageCredentialType">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.set_ClientCredentialType(BasicHttpMessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.AllInstances.CreateMessageSecurityBoolean">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.CreateMessageSecurity(Boolean isSecureTransportMode)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.ClientCredentialTypeGet">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.ClientCredentialTypeSetBasicHttpMessageCredentialType">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.set_ClientCredentialType(BasicHttpMessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.Constructor">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.BasicHttpRelayMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.CreateMessageSecurityBoolean">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.CreateMessageSecurity(Boolean isSecureTransportMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelayMessageSecurity.TryCreateSecurityBindingElementBasicHttpRelayMessageSecurityOutBooleanOut">
            <summary>Sets the shim of BasicHttpRelayMessageSecurity.TryCreate(SecurityBindingElement sbe, BasicHttpRelayMessageSecurity&amp; security, Boolean&amp; isSecureTransportMode)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity">
            <summary>Shim type of Microsoft.ServiceBus.BasicHttpRelaySecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.#ctor(Microsoft.ServiceBus.BasicHttpRelaySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of BasicHttpRelaySecurity.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.EnableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.EnableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.EnableTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.EnableTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.MessageGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.ModeGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.ModeSetEndToEndBasicHttpSecurityMode">
            <summary>Sets the shim of BasicHttpRelaySecurity.set_Mode(EndToEndBasicHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of BasicHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.AllInstances.TransportGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.Constructor">
            <summary>Sets the shim of BasicHttpRelaySecurity.BasicHttpRelaySecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.ConstructorEndToEndBasicHttpSecurityModeRelayClientAuthenticationTypeHttpRelayTransportSecurityBasicHttpRelayMessageSecurity">
            <summary>Sets the shim of BasicHttpRelaySecurity.BasicHttpRelaySecurity(EndToEndBasicHttpSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, HttpRelayTransportSecurity transportSecurity, BasicHttpRelayMessageSecurity messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.CreateMessageSecurity">
            <summary>Sets the shim of BasicHttpRelaySecurity.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.EnableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.EnableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.EnableTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of BasicHttpRelaySecurity.EnableTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.EnableTransportSecurityHttpsRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of BasicHttpRelaySecurity.EnableTransportSecurity(HttpsRelayTransportBindingElement https, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.IsEnabledTransportAuthenticationHttpRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of BasicHttpRelaySecurity.IsEnabledTransportAuthentication(HttpRelayTransportBindingElement http, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.MessageGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.ModeGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.ModeSetEndToEndBasicHttpSecurityMode">
            <summary>Sets the shim of BasicHttpRelaySecurity.set_Mode(EndToEndBasicHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of BasicHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimBasicHttpRelaySecurity.TransportGet">
            <summary>Sets the shim of BasicHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior">
            <summary>Shim type of Microsoft.ServiceBus.ConnectionStatusBehavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.#ctor(Microsoft.ServiceBus.ConnectionStatusBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.ConnectingAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Connecting(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.ConnectingRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Connecting(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.IsOnlineGet">
            <summary>Sets the shim of ConnectionStatusBehavior.get_IsOnline()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.LastErrorGet">
            <summary>Sets the shim of ConnectionStatusBehavior.get_LastError()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OfflineAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Offline(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OfflineRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Offline(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OnConnectingObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnConnecting(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OnOfflineObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnOffline(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OnOnlineObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnOnline(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OnlineAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Online(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.OnlineRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Online(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.Retry">
            <summary>Sets the shim of ConnectionStatusBehavior.Retry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.SetConnectionStatusIConnectionStatus">
            <summary>Sets the shim of ConnectionStatusBehavior.SetConnectionStatus(IConnectionStatus connectionStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint serviceEndpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint serviceEndpoint, ClientRuntime behavior)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint serviceEndpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint serviceEndpoint)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.Bind(Microsoft.ServiceBus.IConnectionStatus)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.Bind(System.ServiceModel.Description.IEndpointBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.ConnectingAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Connecting(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.ConnectingRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Connecting(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.Constructor">
            <summary>Sets the shim of ConnectionStatusBehavior.ConnectionStatusBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.IsOnlineGet">
            <summary>Sets the shim of ConnectionStatusBehavior.get_IsOnline()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.LastErrorGet">
            <summary>Sets the shim of ConnectionStatusBehavior.get_LastError()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OfflineAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Offline(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OfflineRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Offline(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OnConnectingObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnConnecting(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OnOfflineObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnOffline(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OnOnlineObjectEventArgs">
            <summary>Sets the shim of ConnectionStatusBehavior.OnOnline(Object source, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OnlineAddEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.add_Online(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.OnlineRemoveEventHandler">
            <summary>Sets the shim of ConnectionStatusBehavior.remove_Online(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.Retry">
            <summary>Sets the shim of ConnectionStatusBehavior.Retry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.SetConnectionStatusIConnectionStatus">
            <summary>Sets the shim of ConnectionStatusBehavior.SetConnectionStatus(IConnectionStatus connectionStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint serviceEndpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint serviceEndpoint, ClientRuntime behavior)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint serviceEndpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectionStatusBehavior.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of ConnectionStatusBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint serviceEndpoint)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings">
            <summary>Shim type of Microsoft.ServiceBus.ConnectivitySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.#ctor(Microsoft.ServiceBus.ConnectivitySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ConnectivitySettings.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.AllInstances.ModeGet">
            <summary>Sets the shim of ConnectivitySettings.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.AllInstances.ModeSetConnectivityMode">
            <summary>Sets the shim of ConnectivitySettings.set_Mode(ConnectivityMode value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.Constructor">
            <summary>Sets the shim of ConnectivitySettings.ConnectivitySettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.IsReadOnlyGet">
            <summary>Sets the shim of ConnectivitySettings.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.ModeGet">
            <summary>Sets the shim of ConnectivitySettings.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimConnectivitySettings.ModeSetConnectivityMode">
            <summary>Sets the shim of ConnectivitySettings.set_Mode(ConnectivityMode value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.HttpRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.Clone">
            <summary>Sets the shim of HttpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CreateInnerChannelBindingContextBindingContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerChannelBindingContext(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CreateInnerChannelBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CreateInnerListenerBindingContextBindingContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerListenerBindingContext(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.CreateMetadataTemplateBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateMetadataTemplateBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.GetTransportTokenAssertion">
            <summary>Sets the shim of HttpRelayTransportBindingElement.GetTransportTokenAssertion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.KeepAliveEnabledGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_KeepAliveEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.KeepAliveEnabledSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_KeepAliveEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.ProxyAuthenticationSchemeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_ProxyAuthenticationScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.ProxyAuthenticationSchemeSetAuthenticationSchemes">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_ProxyAuthenticationScheme(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.SchemeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.SystemServiceModelDescriptionIWsdlExportExtensionExportContractWsdlExporterWsdlContractConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter exporter, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.SystemServiceModelDescriptionIWsdlExportExtensionExportEndpointWsdlExporterWsdlEndpointConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.TransferModeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllowCookiesGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.AllowCookiesSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.Bind(System.ServiceModel.Description.IPolicyExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.Bind(System.ServiceModel.Description.IWsdlExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.Clone">
            <summary>Sets the shim of HttpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.Constructor">
            <summary>Sets the shim of HttpRelayTransportBindingElement.HttpRelayTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ConstructorHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(HttpRelayTransportBindingElement elementToBeCloned)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ConstructorRelayClientAuthenticationType">
            <summary>Sets the shim of HttpRelayTransportBindingElement.HttpRelayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CreateInnerChannelBindingContextBindingContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerChannelBindingContext(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CreateInnerListenerBindingContextBindingContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateInnerListenerBindingContext(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.CreateMetadataTemplateBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.CreateMetadataTemplateBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of HttpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.GetTransportTokenAssertion">
            <summary>Sets the shim of HttpRelayTransportBindingElement.GetTransportTokenAssertion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.HostNameComparisonModeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.IsDynamicGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.IsDynamicSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.KeepAliveEnabledGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_KeepAliveEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.KeepAliveEnabledSetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_KeepAliveEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ProxyAddressGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ProxyAddressSetUri">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ProxyAuthenticationSchemeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_ProxyAuthenticationScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.ProxyAuthenticationSchemeSetAuthenticationSchemes">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_ProxyAuthenticationScheme(AuthenticationSchemes value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.SchemeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.SystemServiceModelDescriptionIWsdlExportExtensionExportContractWsdlExporterWsdlContractConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter exporter, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.SystemServiceModelDescriptionIWsdlExportExtensionExportEndpointWsdlExporterWsdlEndpointConversionContext">
            <summary>Sets the shim of HttpRelayTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.TransferModeGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.TransferModeSetTransferMode">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.UseDefaultWebProxyGet">
            <summary>Sets the shim of HttpRelayTransportBindingElement.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportBindingElement.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of HttpRelayTransportBindingElement.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity">
            <summary>Shim type of Microsoft.ServiceBus.HttpRelayTransportSecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.#ctor(Microsoft.ServiceBus.HttpRelayTransportSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ConfigureAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ConfigureTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ConfigureTransportProtectionAndAuthenticationHttpsRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportProtectionAndAuthentication(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ConfigureTransportProtectionOnlyHttpsRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportProtectionOnly(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ProxyCredentialTypeGet">
            <summary>Sets the shim of HttpRelayTransportSecurity.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.AllInstances.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of HttpRelayTransportSecurity.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureAuthenticationHttpRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureAuthentication(HttpRelayTransportBindingElement http, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureTransportProtectionAndAuthenticationHttpsRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportProtectionAndAuthentication(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureTransportProtectionAndAuthenticationHttpsRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportProtectionAndAuthentication(HttpsRelayTransportBindingElement https, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ConfigureTransportProtectionOnlyHttpsRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.ConfigureTransportProtectionOnly(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.Constructor">
            <summary>Sets the shim of HttpRelayTransportSecurity.HttpRelayTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.DisableAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.DisableAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.IsConfiguredTransportAuthenticationHttpRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of HttpRelayTransportSecurity.IsConfiguredTransportAuthentication(HttpRelayTransportBindingElement http, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.IsDisabledAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.IsDisabledAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.IsDisabledTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of HttpRelayTransportSecurity.IsDisabledTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ProxyCredentialTypeGet">
            <summary>Sets the shim of HttpRelayTransportSecurity.get_ProxyCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpRelayTransportSecurity.ProxyCredentialTypeSetHttpProxyCredentialType">
            <summary>Sets the shim of HttpRelayTransportSecurity.set_ProxyCredentialType(HttpProxyCredentialType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.HttpsRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.Clone">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.CreateInnerChannelBindingElement">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.HttpsRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.MessageSecurityVersionGet">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.MessageSecurityVersionSetMessageSecurityVersion">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.set_MessageSecurityVersion(MessageSecurityVersion value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.AllInstances.SchemeGet">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.Bind(System.ServiceModel.Description.IPolicyExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.Bind(System.ServiceModel.Description.IWsdlExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.Clone">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.Constructor">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.HttpsRelayTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.ConstructorHttpsRelayTransportBindingElement">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.HttpsRelayTransportBindingElement(HttpsRelayTransportBindingElement elementToBeCloned)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.ConstructorRelayClientAuthenticationType">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.HttpsRelayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.MessageSecurityVersionGet">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.MessageSecurityVersionSetMessageSecurityVersion">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.set_MessageSecurityVersion(MessageSecurityVersion value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHttpsRelayTransportBindingElement.SchemeGet">
            <summary>Sets the shim of HttpsRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs">
            <summary>Shim type of Microsoft.ServiceBus.HybridConnectionStateChangedArgs</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionStateChangedArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.AllInstances.ConnectionStateGet">
            <summary>Sets the shim of HybridConnectionStateChangedArgs.get_ConnectionState()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.ConnectionStateGet">
            <summary>Sets the shim of HybridConnectionStateChangedArgs.get_ConnectionState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimHybridConnectionStateChangedArgs.ConstructorHybridConnectionState">
            <summary>Sets the shim of HybridConnectionStateChangedArgs.HybridConnectionStateChangedArgs(HybridConnectionState state)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException">
            <summary>Shim type of Microsoft.ServiceBus.InvalidRequestException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.#ctor(Microsoft.ServiceBus.InvalidRequestException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.Constructor">
            <summary>Sets the shim of InvalidRequestException.InvalidRequestException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidRequestException.InvalidRequestException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.ConstructorString">
            <summary>Sets the shim of InvalidRequestException.InvalidRequestException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimInvalidRequestException.ConstructorStringException">
            <summary>Sets the shim of InvalidRequestException.InvalidRequestException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.IoTTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.#ctor(Microsoft.ServiceBus.IoTTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.AllInstances.BuildSignatureString">
            <summary>Sets the shim of IoTTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.BuildSignatureString">
            <summary>Sets the shim of IoTTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimIoTTokenProvider.ConstructorStringStringTimeSpan">
            <summary>Sets the shim of IoTTokenProvider.IoTTokenProvider(String keyName, String sharedAccessKey, TimeSpan tokenTimeToLive)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection">
            <summary>Shim type of Microsoft.ServiceBus.MessageSecurityOverRelayConnection</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.#ctor(Microsoft.ServiceBus.MessageSecurityOverRelayConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.CreateSecurityBindingElementBooleanBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.CreateSecurityBindingElement(Boolean isSecureTransportMode, Boolean isReliableSession)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.AllInstances.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.MessageSecurityOverRelayConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.CreateSecurityBindingElementBooleanBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.CreateSecurityBindingElement(Boolean isSecureTransportMode, Boolean isReliableSession)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.TryCreateSecurityBindingElementBooleanMessageSecurityOverRelayConnectionOut">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.TryCreate(SecurityBindingElement sbe, Boolean isReliableSession, MessageSecurityOverRelayConnection&amp; messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayConnection.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayConnection.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp">
            <summary>Shim type of Microsoft.ServiceBus.MessageSecurityOverRelayHttp</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.#ctor(Microsoft.ServiceBus.MessageSecurityOverRelayHttp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.CreateInfoCardParametersBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.CreateInfoCardParameters(Boolean emitBspAttributes)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.CreateSecurityBindingElementBooleanBooleanMessageSecurityVersion">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.CreateSecurityBindingElement(Boolean isSecureTransportMode, Boolean isReliableSession, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.IsSecureConversationEnabled">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.IsSecureConversationEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.NegotiateServiceCredentialGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_NegotiateServiceCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.NegotiateServiceCredentialSetBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_NegotiateServiceCredential(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.AllInstances.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.MessageSecurityOverRelayHttp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.CreateInfoCardParametersBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.CreateInfoCardParameters(Boolean emitBspAttributes)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.CreateSecurityBindingElementBooleanBooleanMessageSecurityVersion">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.CreateSecurityBindingElement(Boolean isSecureTransportMode, Boolean isReliableSession, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.IsSecureConversationEnabled">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.IsSecureConversationEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.NegotiateServiceCredentialGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_NegotiateServiceCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.NegotiateServiceCredentialSetBoolean">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.set_NegotiateServiceCredential(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.TryCreateOf1SecurityBindingElementBooleanBooleanM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.ServiceModel.Channels.SecurityBindingElement,System.Boolean,System.Boolean,``0,System.Boolean})">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.TryCreate(SecurityBindingElement sbe, Boolean isSecureTransportMode, Boolean isReliableSession, !!0&amp; messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayHttp.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayHttp.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway">
            <summary>Shim type of Microsoft.ServiceBus.MessageSecurityOverRelayOneway</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.#ctor(Microsoft.ServiceBus.MessageSecurityOverRelayOneway)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.AlgorithmSuiteGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_AlgorithmSuite()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.AlgorithmSuiteSetSecurityAlgorithmSuite">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.set_AlgorithmSuite(SecurityAlgorithmSuite value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.CreateSecurityBindingElement">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.CreateSecurityBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.AllInstances.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.ClientCredentialTypeGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_ClientCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.ClientCredentialTypeSetMessageCredentialType">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.set_ClientCredentialType(MessageCredentialType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.Constructor">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.MessageSecurityOverRelayOneway()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.CreateSecurityBindingElement">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.CreateSecurityBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.TryCreateSecurityBindingElementMessageSecurityOverRelayOnewayOut">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.TryCreate(SecurityBindingElement sbe, MessageSecurityOverRelayOneway&amp; messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimMessageSecurityOverRelayOneway.WasAlgorithmSuiteSetGet">
            <summary>Sets the shim of MessageSecurityOverRelayOneway.get_WasAlgorithmSuiteSet()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNamespaceManager">
            <summary>Shim type of Microsoft.ServiceBus.NamespaceManager</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.#ctor(Microsoft.ServiceBus.NamespaceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AddressGet">
            <summary>Sets the shim of NamespaceManager.get_Address()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.AddressGet">
            <summary>Sets the shim of NamespaceManager.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginAddToPublisherRevocationListStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginAddToPublisherRevocationList(String eventHubPath, String publisherName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginCreateRuleStringStringStringRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginCreateRuleStringStringStringRuleDescriptionTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginCreateSubscriptionSubscriptionDescriptionRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateSubscription(SubscriptionDescription description, RuleDescription ruleDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginCreateVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteConsumerGroupStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteConsumerGroup(String eventHubPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteEventHubStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteEventHub(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteQueueStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteQueue(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteRevokedPublisherStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteRevokedPublisher(String path, String publisher, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteRuleStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteRule(String ruleName, String subscriptionName, String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginDeleteVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginEventHubExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginEventHubExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetConsumerGroupStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetConsumerGroup(String eventHubPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetConsumerGroupsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetConsumerGroups(String eventHubPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetEventHubPartitionStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubPartition(String eventHubPath, String consumerGroupName, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetEventHubPartitionsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubPartitions(String eventHubPath, String consumerGroupName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetEventHubStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHub(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetEventHubsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubs(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetQueueStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueue(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetQueuesAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueues(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetQueuesStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueues(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetRevokedPublishersStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRevokedPublishers(String eventHubPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetRuleStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRule(String ruleName, String subscriptionName, String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetRulesStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRules(String topicPath, String subscriptionName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetRulesStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRules(String topicPath, String subscriptionName, String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetSubscriptionStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscription(String topicPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetSubscriptionsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscriptions(String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetSubscriptionsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscriptions(String topicPath, String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetTopicsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopics(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetTopicsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopics(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetVolatileTopicsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopics(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginGetVolatileTopicsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopics(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginQueueExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginQueueExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginSubscriptionExistsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginSubscriptionExists(String topicPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.BeginTopicExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginTopicExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroup(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupIfNotExistsAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExistsAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupIfNotExistsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExistsAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupIfNotExistsConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExists(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupIfNotExistsStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExists(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHub(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubIfNotExistsAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExistsAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubIfNotExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubIfNotExistsEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExists(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubIfNotExistsString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateEventHubString">
            <summary>Sets the shim of NamespaceManager.CreateEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateQueueAsyncQueueDescription">
            <summary>Sets the shim of NamespaceManager.CreateQueueAsync(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateQueueQueueDescription">
            <summary>Sets the shim of NamespaceManager.CreateQueue(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateQueueString">
            <summary>Sets the shim of NamespaceManager.CreateQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateRelayAsyncRelayDescription">
            <summary>Sets the shim of NamespaceManager.CreateRelayAsync(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateRelayAsyncStringRelayType">
            <summary>Sets the shim of NamespaceManager.CreateRelayAsync(String path, RelayType type)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateRelayRelayDescription">
            <summary>Sets the shim of NamespaceManager.CreateRelay(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateRelayStringRelayType">
            <summary>Sets the shim of NamespaceManager.CreateRelay(String path, RelayType type)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateRuleStringStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncStringStringFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncSubscriptionDescriptionFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionAsyncSubscriptionDescriptionRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionStringStringFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionSubscriptionDescriptionFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateSubscriptionSubscriptionDescriptionRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateTopicAsyncTopicDescription">
            <summary>Sets the shim of NamespaceManager.CreateTopicAsync(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateTopicString">
            <summary>Sets the shim of NamespaceManager.CreateTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.CreateTopicTopicDescription">
            <summary>Sets the shim of NamespaceManager.CreateTopic(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.DeleteConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.DeleteConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteEventHubString">
            <summary>Sets the shim of NamespaceManager.DeleteEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteQueueString">
            <summary>Sets the shim of NamespaceManager.DeleteQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteRelayAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteRelayAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteRelayString">
            <summary>Sets the shim of NamespaceManager.DeleteRelay(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.DeleteSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.DeleteSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteTopicString">
            <summary>Sets the shim of NamespaceManager.DeleteTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteVolatileTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteVolatileTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.DeleteVolatileTopicString">
            <summary>Sets the shim of NamespaceManager.DeleteVolatileTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndAddToPublisherRevocationListIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndAddToPublisherRevocationList(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndCreateRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndCreateRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndCreateSubscriptionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndCreateSubscription(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteConsumerGroupIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteConsumerGroup(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteEventHubIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteEventHub(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteQueueIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteQueue(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteRevokedPublisherIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteRevokedPublisher(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndDeleteVolatileTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteVolatileTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndEventHubExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndEventHubExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetConsumerGroupIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetConsumerGroup(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetConsumerGroupsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetConsumerGroups(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetEventHubIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHub(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetEventHubPartitionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubPartition(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetEventHubPartitionsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubPartitions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetEventHubsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubs(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetQueueIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetQueue(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetQueuesIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetQueues(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetRevokedPublishersIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRevokedPublishers(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetRulesIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRules(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetSubscriptionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetSubscription(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetSubscriptionsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetSubscriptions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndGetTopicsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetTopics(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndQueueExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndQueueExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndSubscriptionExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndSubscriptionExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EndTopicExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndTopicExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EventHubExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.EventHubExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.EventHubExistsString">
            <summary>Sets the shim of NamespaceManager.EventHubExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.FixupRelayDescriptionPathStringTaskOfRelayDescription">
            <summary>Sets the shim of NamespaceManager.FixupRelayDescriptionPath(String originalPath, Task`1&lt;RelayDescription&gt; entityManagementTask)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetConsumerGroupsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroupsAsync(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetConsumerGroupsString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroups(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.GetEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionAsyncStringStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionAsync(String eventHubPath, String consumerGroupName, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartition(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionStringStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartition(String eventHubPath, String consumerGroupName, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionsAsync(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionsAsync(String eventHubPath, String consumerGroupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionsString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitions(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubPartitionsStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitions(String eventHubPath, String consumerGroupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubString">
            <summary>Sets the shim of NamespaceManager.GetEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubs">
            <summary>Sets the shim of NamespaceManager.GetEventHubs()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetEventHubsAsync">
            <summary>Sets the shim of NamespaceManager.GetEventHubsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.GetQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueueString">
            <summary>Sets the shim of NamespaceManager.GetQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueues">
            <summary>Sets the shim of NamespaceManager.GetQueues()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueuesAsync">
            <summary>Sets the shim of NamespaceManager.GetQueuesAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueuesAsyncString">
            <summary>Sets the shim of NamespaceManager.GetQueuesAsync(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetQueuesString">
            <summary>Sets the shim of NamespaceManager.GetQueues(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRelayAsyncString">
            <summary>Sets the shim of NamespaceManager.GetRelayAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRelayString">
            <summary>Sets the shim of NamespaceManager.GetRelay(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRelays">
            <summary>Sets the shim of NamespaceManager.GetRelays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRelaysAsync">
            <summary>Sets the shim of NamespaceManager.GetRelaysAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRevokedPublishersAsyncString">
            <summary>Sets the shim of NamespaceManager.GetRevokedPublishersAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRevokedPublishersString">
            <summary>Sets the shim of NamespaceManager.GetRevokedPublishers(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRulesAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetRulesAsync(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRulesAsyncStringStringString">
            <summary>Sets the shim of NamespaceManager.GetRulesAsync(String topicPath, String subscriptionName, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRulesStringString">
            <summary>Sets the shim of NamespaceManager.GetRules(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetRulesStringStringString">
            <summary>Sets the shim of NamespaceManager.GetRules(String topicPath, String subscriptionName, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionsAsync(String topicPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionsAsync(String topicPath, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionsString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptions(String topicPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetSubscriptionsStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptions(String topicPath, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.GetTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopicString">
            <summary>Sets the shim of NamespaceManager.GetTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopics">
            <summary>Sets the shim of NamespaceManager.GetTopics()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopicsAsync">
            <summary>Sets the shim of NamespaceManager.GetTopicsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopicsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetTopicsAsync(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetTopicsString">
            <summary>Sets the shim of NamespaceManager.GetTopics(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetVersionInfo">
            <summary>Sets the shim of NamespaceManager.GetVersionInfo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.GetVersionInfoAsync">
            <summary>Sets the shim of NamespaceManager.GetVersionInfoAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.QueueExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.QueueExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.QueueExistsString">
            <summary>Sets the shim of NamespaceManager.QueueExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RelayExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.RelayExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RelayExistsString">
            <summary>Sets the shim of NamespaceManager.RelayExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RenameQueueAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RenameQueueAsync(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RenameQueueStringString">
            <summary>Sets the shim of NamespaceManager.RenameQueue(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RenameTopicAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RenameTopicAsync(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RenameTopicStringString">
            <summary>Sets the shim of NamespaceManager.RenameTopic(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RestorePublisherAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RestorePublisherAsync(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RestorePublisherStringString">
            <summary>Sets the shim of NamespaceManager.RestorePublisher(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RevokePublisherAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RevokePublisherAsync(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.RevokePublisherStringString">
            <summary>Sets the shim of NamespaceManager.RevokePublisher(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.SettingsGet">
            <summary>Sets the shim of NamespaceManager.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.SubscriptionExistsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.SubscriptionExistsAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.SubscriptionExistsStringString">
            <summary>Sets the shim of NamespaceManager.SubscriptionExists(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.TopicExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.TopicExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.TopicExistsString">
            <summary>Sets the shim of NamespaceManager.TopicExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateConsumerGroupAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.UpdateConsumerGroupAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateConsumerGroupConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.UpdateConsumerGroup(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateEventHubAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.UpdateEventHubAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateEventHubEventHubDescription">
            <summary>Sets the shim of NamespaceManager.UpdateEventHub(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateQueueAsyncQueueDescription">
            <summary>Sets the shim of NamespaceManager.UpdateQueueAsync(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateQueueQueueDescription">
            <summary>Sets the shim of NamespaceManager.UpdateQueue(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateRelayAsyncRelayDescription">
            <summary>Sets the shim of NamespaceManager.UpdateRelayAsync(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateRelayRelayDescription">
            <summary>Sets the shim of NamespaceManager.UpdateRelay(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateSubscriptionAsyncSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.UpdateSubscriptionAsync(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateSubscriptionSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.UpdateSubscription(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateTopicAsyncTopicDescription">
            <summary>Sets the shim of NamespaceManager.UpdateTopicAsync(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.UpdateTopicTopicDescription">
            <summary>Sets the shim of NamespaceManager.UpdateTopic(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances.ValidateAndNormalizeForwardToAddressStringString">
            <summary>Sets the shim of NamespaceManager.ValidateAndNormalizeForwardToAddress(String entityName, String forwardTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.AllInstances._GetVersionInfoAsyncb__4AsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.&lt;GetVersionInfoAsync&gt;b__4(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginAddToPublisherRevocationListStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginAddToPublisherRevocationList(String eventHubPath, String publisherName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginCreateRuleStringStringStringRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginCreateRuleStringStringStringRuleDescriptionTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginCreateSubscriptionSubscriptionDescriptionRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateSubscription(SubscriptionDescription description, RuleDescription ruleDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginCreateVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginCreateVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteConsumerGroupStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteConsumerGroup(String eventHubPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteEventHubStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteEventHub(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteQueueStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteQueue(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteRevokedPublisherStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteRevokedPublisher(String path, String publisher, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteRuleStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteRule(String ruleName, String subscriptionName, String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginDeleteVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginDeleteVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginEventHubExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginEventHubExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetConsumerGroupStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetConsumerGroup(String eventHubPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetConsumerGroupsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetConsumerGroups(String eventHubPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetEventHubPartitionStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubPartition(String eventHubPath, String consumerGroupName, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetEventHubPartitionsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubPartitions(String eventHubPath, String consumerGroupName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetEventHubStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHub(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetEventHubsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetEventHubs(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetQueueStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueue(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetQueuesAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueues(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetQueuesStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetQueues(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetRevokedPublishersStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRevokedPublishers(String eventHubPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetRuleStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRule(String ruleName, String subscriptionName, String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetRulesStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRules(String topicPath, String subscriptionName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetRulesStringStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetRules(String topicPath, String subscriptionName, String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetSubscriptionStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscription(String topicPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetSubscriptionsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscriptions(String topicPath, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetSubscriptionsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetSubscriptions(String topicPath, String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetTopicsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopics(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetTopicsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetTopics(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetVolatileTopicStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopic(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetVolatileTopicsAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopics(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginGetVolatileTopicsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginGetVolatileTopics(String filter, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginQueueExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginQueueExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginSubscriptionExistsStringStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginSubscriptionExists(String topicPath, String name, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BeginTopicExistsStringAsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.BeginTopicExists(String path, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CheckValidEntityNameStringInt32BooleanString">
            <summary>Sets the shim of NamespaceManager.CheckValidEntityName(String entityName, Int32 maxEntityNameLength, Boolean allowSeparator, String paramName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CheckValidEntityNameStringInt32String">
            <summary>Sets the shim of NamespaceManager.CheckValidEntityName(String entityName, Int32 maxEntityNameLength, String paramName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfString">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;String&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfStringNamespaceManagerSettings">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;String&gt; addresses, NamespaceManagerSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfStringTokenProvider">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;String&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfUri">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;Uri&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfUriNamespaceManagerSettings">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;Uri&gt; addresses, NamespaceManagerSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorIEnumerableOfUriTokenProvider">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(IEnumerable`1&lt;Uri&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorString">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(String address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorStringNamespaceManagerSettings">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(String address, NamespaceManagerSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorStringTokenProvider">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(String address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorUri">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(Uri address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorUriNamespaceManagerSettings">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(Uri address, NamespaceManagerSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ConstructorUriTokenProvider">
            <summary>Sets the shim of NamespaceManager.NamespaceManager(Uri address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.Create">
            <summary>Sets the shim of NamespaceManager.Create()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroup(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupIfNotExistsAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExistsAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupIfNotExistsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExistsAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupIfNotExistsConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExists(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupIfNotExistsStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroupIfNotExists(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.CreateConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHub(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubIfNotExistsAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExistsAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubIfNotExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubIfNotExistsEventHubDescription">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExists(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubIfNotExistsString">
            <summary>Sets the shim of NamespaceManager.CreateEventHubIfNotExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateEventHubString">
            <summary>Sets the shim of NamespaceManager.CreateEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateFromConnectionStringString">
            <summary>Sets the shim of NamespaceManager.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateQueueAsyncQueueDescription">
            <summary>Sets the shim of NamespaceManager.CreateQueueAsync(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateQueueQueueDescription">
            <summary>Sets the shim of NamespaceManager.CreateQueue(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateQueueString">
            <summary>Sets the shim of NamespaceManager.CreateQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateRelayAsyncRelayDescription">
            <summary>Sets the shim of NamespaceManager.CreateRelayAsync(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateRelayAsyncStringRelayType">
            <summary>Sets the shim of NamespaceManager.CreateRelayAsync(String path, RelayType type)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateRelayRelayDescription">
            <summary>Sets the shim of NamespaceManager.CreateRelay(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateRelayStringRelayType">
            <summary>Sets the shim of NamespaceManager.CreateRelay(String path, RelayType type)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateRuleStringStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateRule(String ruleName, String subscriptionName, String topicPath, RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncStringStringFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(String topicPath, String name, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncSubscriptionDescriptionFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionAsyncSubscriptionDescriptionRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscriptionAsync(SubscriptionDescription description, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionStringStringFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionStringStringRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(String topicPath, String name, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionSubscriptionDescriptionFilter">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateSubscriptionSubscriptionDescriptionRuleDescription">
            <summary>Sets the shim of NamespaceManager.CreateSubscription(SubscriptionDescription description, RuleDescription ruleDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.CreateTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateTopicAsyncTopicDescription">
            <summary>Sets the shim of NamespaceManager.CreateTopicAsync(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateTopicString">
            <summary>Sets the shim of NamespaceManager.CreateTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.CreateTopicTopicDescription">
            <summary>Sets the shim of NamespaceManager.CreateTopic(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.DeleteConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.DeleteConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteEventHubString">
            <summary>Sets the shim of NamespaceManager.DeleteEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteQueueString">
            <summary>Sets the shim of NamespaceManager.DeleteQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteRelayAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteRelayAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteRelayString">
            <summary>Sets the shim of NamespaceManager.DeleteRelay(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.DeleteSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.DeleteSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteTopicString">
            <summary>Sets the shim of NamespaceManager.DeleteTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteVolatileTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.DeleteVolatileTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.DeleteVolatileTopicString">
            <summary>Sets the shim of NamespaceManager.DeleteVolatileTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndAddToPublisherRevocationListIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndAddToPublisherRevocationList(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndCreateRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndCreateRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndCreateSubscriptionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndCreateSubscription(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteConsumerGroupIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteConsumerGroup(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteEventHubIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteEventHub(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteQueueIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteQueue(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteRevokedPublisherIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteRevokedPublisher(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndDeleteVolatileTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndDeleteVolatileTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndEventHubExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndEventHubExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetConsumerGroupIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetConsumerGroup(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetConsumerGroupsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetConsumerGroups(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetEventHubIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHub(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetEventHubPartitionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubPartition(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetEventHubPartitionsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubPartitions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetEventHubsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetEventHubs(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetQueueIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetQueue(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetQueuesIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetQueues(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetRevokedPublishersIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRevokedPublishers(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetRuleIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetRulesIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetRules(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetSubscriptionIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetSubscription(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetSubscriptionsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetSubscriptions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetTopicIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetTopic(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndGetTopicsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndGetTopics(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndQueueExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndQueueExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndSubscriptionExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndSubscriptionExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EndTopicExistsIAsyncResult">
            <summary>Sets the shim of NamespaceManager.EndTopicExists(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EventHubExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.EventHubExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.EventHubExistsString">
            <summary>Sets the shim of NamespaceManager.EventHubExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.FixupRelayDescriptionPathStringTaskOfRelayDescription">
            <summary>Sets the shim of NamespaceManager.FixupRelayDescriptionPath(String originalPath, Task`1&lt;RelayDescription&gt; entityManagementTask)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetConsumerGroupAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroupAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetConsumerGroupStringString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroup(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetConsumerGroupsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroupsAsync(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetConsumerGroupsString">
            <summary>Sets the shim of NamespaceManager.GetConsumerGroups(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubAsyncString">
            <summary>Sets the shim of NamespaceManager.GetEventHubAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionAsync(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionAsyncStringStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionAsync(String eventHubPath, String consumerGroupName, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartition(String eventHubPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionStringStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartition(String eventHubPath, String consumerGroupName, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionsAsync(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitionsAsync(String eventHubPath, String consumerGroupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionsString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitions(String eventHubPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubPartitionsStringString">
            <summary>Sets the shim of NamespaceManager.GetEventHubPartitions(String eventHubPath, String consumerGroupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubString">
            <summary>Sets the shim of NamespaceManager.GetEventHub(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubs">
            <summary>Sets the shim of NamespaceManager.GetEventHubs()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetEventHubsAsync">
            <summary>Sets the shim of NamespaceManager.GetEventHubsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueueAsyncString">
            <summary>Sets the shim of NamespaceManager.GetQueueAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueueString">
            <summary>Sets the shim of NamespaceManager.GetQueue(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueues">
            <summary>Sets the shim of NamespaceManager.GetQueues()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueuesAsync">
            <summary>Sets the shim of NamespaceManager.GetQueuesAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueuesAsyncString">
            <summary>Sets the shim of NamespaceManager.GetQueuesAsync(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetQueuesString">
            <summary>Sets the shim of NamespaceManager.GetQueues(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRelayAsyncString">
            <summary>Sets the shim of NamespaceManager.GetRelayAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRelayString">
            <summary>Sets the shim of NamespaceManager.GetRelay(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRelays">
            <summary>Sets the shim of NamespaceManager.GetRelays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRelaysAsync">
            <summary>Sets the shim of NamespaceManager.GetRelaysAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRevokedPublishersAsyncString">
            <summary>Sets the shim of NamespaceManager.GetRevokedPublishersAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRevokedPublishersString">
            <summary>Sets the shim of NamespaceManager.GetRevokedPublishers(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRulesAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetRulesAsync(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRulesAsyncStringStringString">
            <summary>Sets the shim of NamespaceManager.GetRulesAsync(String topicPath, String subscriptionName, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRulesStringString">
            <summary>Sets the shim of NamespaceManager.GetRules(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetRulesStringStringString">
            <summary>Sets the shim of NamespaceManager.GetRules(String topicPath, String subscriptionName, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscription(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionsAsync(String topicPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptionsAsync(String topicPath, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionsString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptions(String topicPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetSubscriptionsStringString">
            <summary>Sets the shim of NamespaceManager.GetSubscriptions(String topicPath, String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopicAsyncString">
            <summary>Sets the shim of NamespaceManager.GetTopicAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopicString">
            <summary>Sets the shim of NamespaceManager.GetTopic(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopics">
            <summary>Sets the shim of NamespaceManager.GetTopics()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopicsAsync">
            <summary>Sets the shim of NamespaceManager.GetTopicsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopicsAsyncString">
            <summary>Sets the shim of NamespaceManager.GetTopicsAsync(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetTopicsString">
            <summary>Sets the shim of NamespaceManager.GetTopics(String filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetVersionInfo">
            <summary>Sets the shim of NamespaceManager.GetVersionInfo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.GetVersionInfoAsync">
            <summary>Sets the shim of NamespaceManager.GetVersionInfoAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.QueueExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.QueueExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.QueueExistsString">
            <summary>Sets the shim of NamespaceManager.QueueExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RelayExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.RelayExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RelayExistsString">
            <summary>Sets the shim of NamespaceManager.RelayExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RenameQueueAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RenameQueueAsync(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RenameQueueStringString">
            <summary>Sets the shim of NamespaceManager.RenameQueue(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RenameTopicAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RenameTopicAsync(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RenameTopicStringString">
            <summary>Sets the shim of NamespaceManager.RenameTopic(String path, String newPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RestorePublisherAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RestorePublisherAsync(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RestorePublisherStringString">
            <summary>Sets the shim of NamespaceManager.RestorePublisher(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RevokePublisherAsyncStringString">
            <summary>Sets the shim of NamespaceManager.RevokePublisherAsync(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.RevokePublisherStringString">
            <summary>Sets the shim of NamespaceManager.RevokePublisher(String entityPath, String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.SettingsGet">
            <summary>Sets the shim of NamespaceManager.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.StaticConstructor">
            <summary>Sets the shim of NamespaceManager.NamespaceManager()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.SubscriptionExistsAsyncStringString">
            <summary>Sets the shim of NamespaceManager.SubscriptionExistsAsync(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.SubscriptionExistsStringString">
            <summary>Sets the shim of NamespaceManager.SubscriptionExists(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.TopicExistsAsyncString">
            <summary>Sets the shim of NamespaceManager.TopicExistsAsync(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.TopicExistsString">
            <summary>Sets the shim of NamespaceManager.TopicExists(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateConsumerGroupAsyncConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.UpdateConsumerGroupAsync(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateConsumerGroupConsumerGroupDescription">
            <summary>Sets the shim of NamespaceManager.UpdateConsumerGroup(ConsumerGroupDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateEventHubAsyncEventHubDescription">
            <summary>Sets the shim of NamespaceManager.UpdateEventHubAsync(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateEventHubEventHubDescription">
            <summary>Sets the shim of NamespaceManager.UpdateEventHub(EventHubDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateQueueAsyncQueueDescription">
            <summary>Sets the shim of NamespaceManager.UpdateQueueAsync(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateQueueQueueDescription">
            <summary>Sets the shim of NamespaceManager.UpdateQueue(QueueDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateRelayAsyncRelayDescription">
            <summary>Sets the shim of NamespaceManager.UpdateRelayAsync(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateRelayRelayDescription">
            <summary>Sets the shim of NamespaceManager.UpdateRelay(RelayDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateSubscriptionAsyncSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.UpdateSubscriptionAsync(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateSubscriptionSubscriptionDescription">
            <summary>Sets the shim of NamespaceManager.UpdateSubscription(SubscriptionDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateTopicAsyncTopicDescription">
            <summary>Sets the shim of NamespaceManager.UpdateTopicAsync(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.UpdateTopicTopicDescription">
            <summary>Sets the shim of NamespaceManager.UpdateTopic(TopicDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager.ValidateAndNormalizeForwardToAddressStringString">
            <summary>Sets the shim of NamespaceManager.ValidateAndNormalizeForwardToAddress(String entityName, String forwardTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateConsumerGroupAsyncb__90IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateConsumerGroupAsync&gt;b__90(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateConsumerGroupAsyncb__95IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateConsumerGroupAsync&gt;b__95(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateConsumerGroupIfNotExistsAsyncb__9aIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateConsumerGroupIfNotExistsAsync&gt;b__9a(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateConsumerGroupIfNotExistsAsyncb__9fIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateConsumerGroupIfNotExistsAsync&gt;b__9f(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateEventHubAsyncb__1dIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateEventHubAsync&gt;b__1d(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateEventHubAsyncb__22IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateEventHubAsync&gt;b__22(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateEventHubIfNotExistsAsyncb__27IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateEventHubIfNotExistsAsync&gt;b__27(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateEventHubIfNotExistsAsyncb__2cIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateEventHubIfNotExistsAsync&gt;b__2c(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateQueueAsyncb__8IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateQueueAsync&gt;b__8(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateQueueAsyncb__dIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateQueueAsync&gt;b__d(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateTopicAsyncb__6dIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateTopicAsync&gt;b__6d(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._CreateTopicAsyncb__72IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;CreateTopicAsync&gt;b__72(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._GetVersionInfoAsyncb__4AsyncCallbackObject">
            <summary>Sets the shim of NamespaceManager.&lt;GetVersionInfoAsync&gt;b__4(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._GetVersionInfoAsyncb__5IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;GetVersionInfoAsync&gt;b__5(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._RenameQueueAsyncb__53IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;RenameQueueAsync&gt;b__53(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._RenameTopicAsyncb__7cIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;RenameTopicAsync&gt;b__7c(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._UpdateConsumerGroupAsyncb__adIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;UpdateConsumerGroupAsync&gt;b__ad(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._UpdateEventHubAsyncb__31IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;UpdateEventHubAsync&gt;b__31(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._UpdateQueueAsyncb__4eIAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;UpdateQueueAsync&gt;b__4e(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._UpdateSubscriptionAsyncb__c8IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;UpdateSubscriptionAsync&gt;b__c8(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManager._UpdateTopicAsyncb__77IAsyncResult">
            <summary>Sets the shim of NamespaceManager.&lt;UpdateTopicAsync&gt;b__77(IAsyncResult r)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings">
            <summary>Shim type of Microsoft.ServiceBus.NamespaceManagerSettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.#ctor(Microsoft.ServiceBus.NamespaceManagerSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.GetEntitiesPageSizeGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_GetEntitiesPageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.GetEntitiesPageSizeSetInt32">
            <summary>Sets the shim of NamespaceManagerSettings.set_GetEntitiesPageSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.InternalOperationTimeoutGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_InternalOperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of NamespaceManagerSettings.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.RetryPolicyGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_RetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.RetryPolicySetRetryPolicy">
            <summary>Sets the shim of NamespaceManagerSettings.set_RetryPolicy(RetryPolicy value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.TokenProviderGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.AllInstances.TokenProviderSetTokenProvider">
            <summary>Sets the shim of NamespaceManagerSettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.Constructor">
            <summary>Sets the shim of NamespaceManagerSettings.NamespaceManagerSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.GetEntitiesPageSizeGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_GetEntitiesPageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.GetEntitiesPageSizeSetInt32">
            <summary>Sets the shim of NamespaceManagerSettings.set_GetEntitiesPageSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.InternalOperationTimeoutGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_InternalOperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.OperationTimeoutGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of NamespaceManagerSettings.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.RetryPolicyGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_RetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.RetryPolicySetRetryPolicy">
            <summary>Sets the shim of NamespaceManagerSettings.set_RetryPolicy(RetryPolicy value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.TokenProviderGet">
            <summary>Sets the shim of NamespaceManagerSettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNamespaceManagerSettings.TokenProviderSetTokenProvider">
            <summary>Sets the shim of NamespaceManagerSettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.NetEventRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.#ctor(Microsoft.ServiceBus.NetEventRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of NetEventRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.AllInstances.IsBindingElementsMatchRelayedOnewayTransportBindingElementBinaryMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of NetEventRelayBinding.IsBindingElementsMatch(RelayedOnewayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of NetEventRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.Constructor">
            <summary>Sets the shim of NetEventRelayBinding.NetEventRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.ConstructorEndToEndSecurityModeRelayEventSubscriberAuthenticationType">
            <summary>Sets the shim of NetEventRelayBinding.NetEventRelayBinding(EndToEndSecurityMode securityMode, RelayEventSubscriberAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.ConstructorRelayedOnewayTransportBindingElementBinaryMessageEncodingBindingElementNetOnewayRelaySecurity">
            <summary>Sets the shim of NetEventRelayBinding.NetEventRelayBinding(RelayedOnewayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.ConstructorString">
            <summary>Sets the shim of NetEventRelayBinding.NetEventRelayBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetEventRelayBinding.IsBindingElementsMatchRelayedOnewayTransportBindingElementBinaryMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of NetEventRelayBinding.IsBindingElementsMatch(RelayedOnewayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.NetOnewayRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of NetOnewayRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of NetOnewayRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.EnvelopeVersionGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.GetTransport">
            <summary>Sets the shim of NetOnewayRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of NetOnewayRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.Initialize">
            <summary>Sets the shim of NetOnewayRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.IsBindingElementsMatchRelayedOnewayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of NetOnewayRelayBinding.IsBindingElementsMatch(RelayedOnewayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.MessageSecurityVersionGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of NetOnewayRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of NetOnewayRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.SchemeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.AllInstances.SecurityGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of NetOnewayRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.Constructor">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ConstructorNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding(NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ConstructorRelayedOnewayConnectionModeEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding(RelayedOnewayConnectionMode connectionMode, EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ConstructorRelayedOnewayTransportBindingElementBinaryMessageEncodingBindingElementNetOnewayRelaySecurity">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding(RelayedOnewayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, NetOnewayRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ConstructorString">
            <summary>Sets the shim of NetOnewayRelayBinding.NetOnewayRelayBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.CreateBindingElements">
            <summary>Sets the shim of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.CreateMessageSecurity">
            <summary>Sets the shim of NetOnewayRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.EnvelopeVersionGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.GetTransport">
            <summary>Sets the shim of NetOnewayRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.HostNameComparisonModeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of NetOnewayRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.Initialize">
            <summary>Sets the shim of NetOnewayRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.InitializeFromRelayedOnewayTransportBindingElementBinaryMessageEncodingBindingElement">
            <summary>Sets the shim of NetOnewayRelayBinding.InitializeFrom(RelayedOnewayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.IsBindingElementsMatchRelayedOnewayTransportBindingElementMessageEncodingBindingElement">
            <summary>Sets the shim of NetOnewayRelayBinding.IsBindingElementsMatch(RelayedOnewayTransportBindingElement transport, MessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ListenBacklogGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ListenBacklogSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxBufferSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxConnectionsGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetOnewayRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.MessageSecurityVersionGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ReaderQuotasGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of NetOnewayRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of NetOnewayRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.SchemeGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.SecurityGet">
            <summary>Sets the shim of NetOnewayRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelayBinding.TryCreateBindingElementCollectionBindingOut">
            <summary>Sets the shim of NetOnewayRelayBinding.TryCreate(BindingElementCollection elements, Binding&amp; binding)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity">
            <summary>Shim type of Microsoft.ServiceBus.NetOnewayRelaySecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.ConfigureTransportSecurityRelayedOnewayTransportBindingElement">
            <summary>Sets the shim of NetOnewayRelaySecurity.ConfigureTransportSecurity(RelayedOnewayTransportBindingElement oneway)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of NetOnewayRelaySecurity.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.MessageGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.ModeGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetOnewayRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.AllInstances.TransportGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Transport()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.ConfigureTransportSecurityRelayedOnewayTransportBindingElement">
            <summary>Sets the shim of NetOnewayRelaySecurity.ConfigureTransportSecurity(RelayedOnewayTransportBindingElement oneway)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.Constructor">
            <summary>Sets the shim of NetOnewayRelaySecurity.NetOnewayRelaySecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.ConstructorEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelaySecurity.NetOnewayRelaySecurity(EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeRelayedOnewayTransportSecurityMessageSecurityOverRelayOneway">
            <summary>Sets the shim of NetOnewayRelaySecurity.NetOnewayRelaySecurity(EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, RelayedOnewayTransportSecurity transportSecurity, MessageSecurityOverRelayOneway messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.CreateMessageSecurity">
            <summary>Sets the shim of NetOnewayRelaySecurity.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.MessageGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.ModeGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetOnewayRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetOnewayRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.TransportGet">
            <summary>Sets the shim of NetOnewayRelaySecurity.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetOnewayRelaySecurity.TryCreateSecurityBindingElementEndToEndSecurityModeRelayClientAuthenticationTypeNetOnewayRelaySecurityOut">
            <summary>Sets the shim of NetOnewayRelaySecurity.TryCreate(SecurityBindingElement sbe, EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, NetOnewayRelaySecurity&amp; security)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.NetTcpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.#ctor(Microsoft.ServiceBus.NetTcpRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of NetTcpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of NetTcpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of NetTcpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.Initialize">
            <summary>Sets the shim of NetTcpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.InitializeFromReliableSessionBindingElement">
            <summary>Sets the shim of NetTcpRelayBinding.InitializeFrom(ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.IsBindingElementsMatchTcpRelayTransportBindingElementBinaryMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of NetTcpRelayBinding.IsBindingElementsMatch(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.AllInstances.ReliableSessionGet">
            <summary>Sets the shim of NetTcpRelayBinding.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of NetTcpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.Constructor">
            <summary>Sets the shim of NetTcpRelayBinding.NetTcpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelayBinding.NetTcpRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeBoolean">
            <summary>Sets the shim of NetTcpRelayBinding.NetTcpRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType, Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ConstructorString">
            <summary>Sets the shim of NetTcpRelayBinding.NetTcpRelayBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ConstructorTcpRelayTransportBindingElementBinaryMessageEncodingBindingElementReliableSessionBindingElementNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelayBinding.NetTcpRelayBinding(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, ReliableSessionBindingElement session, NetTcpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.CreateBindingElements">
            <summary>Sets the shim of NetTcpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.CreateMessageSecurity">
            <summary>Sets the shim of NetTcpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.Initialize">
            <summary>Sets the shim of NetTcpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.InitializeFromReliableSessionBindingElement">
            <summary>Sets the shim of NetTcpRelayBinding.InitializeFrom(ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.IsBindingElementsMatchTcpRelayTransportBindingElementBinaryMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of NetTcpRelayBinding.IsBindingElementsMatch(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.ReliableSessionGet">
            <summary>Sets the shim of NetTcpRelayBinding.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBinding.TryCreateBindingElementCollectionBindingOut">
            <summary>Sets the shim of NetTcpRelayBinding.TryCreate(BindingElementCollection elements, Binding&amp; binding)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase">
            <summary>Shim type of Microsoft.ServiceBus.NetTcpRelayBindingBase</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.NetTcpRelayBindingBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of NetTcpRelayBindingBase.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.CreateBindingElements">
            <summary>Sets the shim of NetTcpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.EnvelopeVersionGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.Initialize">
            <summary>Sets the shim of NetTcpRelayBindingBase.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.InitializeFromTcpRelayTransportBindingElementBinaryMessageEncodingBindingElement">
            <summary>Sets the shim of NetTcpRelayBindingBase.InitializeFrom(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.IsBindingElementsMatchTcpRelayTransportBindingElementBinaryMessageEncodingBindingElement">
            <summary>Sets the shim of NetTcpRelayBindingBase.IsBindingElementsMatch(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.IsDynamicGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.MessageSecurityVersionGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of NetTcpRelayBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.SchemeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.SecurityGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.TransferModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ApplyConfigurationString">
            <summary>Sets the shim of NetTcpRelayBindingBase.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ConnectionModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.Constructor">
            <summary>Sets the shim of NetTcpRelayBindingBase.NetTcpRelayBindingBase()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ConstructorEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelayBindingBase.NetTcpRelayBindingBase(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ConstructorString">
            <summary>Sets the shim of NetTcpRelayBindingBase.NetTcpRelayBindingBase(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ConstructorTcpRelayTransportBindingElementBinaryMessageEncodingBindingElementNetTcpRelaySecurity">
            <summary>Sets the shim of NetTcpRelayBindingBase.NetTcpRelayBindingBase(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding, NetTcpRelaySecurity security)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.CreateBindingElements">
            <summary>Sets the shim of NetTcpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.EnvelopeVersionGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.HostNameComparisonModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.Initialize">
            <summary>Sets the shim of NetTcpRelayBindingBase.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.InitializeFromTcpRelayTransportBindingElementBinaryMessageEncodingBindingElement">
            <summary>Sets the shim of NetTcpRelayBindingBase.InitializeFrom(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.IsBindingElementsMatchTcpRelayTransportBindingElementBinaryMessageEncodingBindingElement">
            <summary>Sets the shim of NetTcpRelayBindingBase.IsBindingElementsMatch(TcpRelayTransportBindingElement transport, BinaryMessageEncodingBindingElement encoding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.IsDynamicGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.IsDynamicSetBoolean">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ListenBacklogGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ListenBacklogSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxBufferSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxBufferSizeSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxConnectionsGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxConnectionsSetInt32">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.MessageSecurityVersionGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_MessageSecurityVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ReaderQuotasGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of NetTcpRelayBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.SchemeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.SecurityGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.TransferModeGet">
            <summary>Sets the shim of NetTcpRelayBindingBase.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelayBindingBase.TransferModeSetTransferMode">
            <summary>Sets the shim of NetTcpRelayBindingBase.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity">
            <summary>Shim type of Microsoft.ServiceBus.NetTcpRelaySecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.#ctor(Microsoft.ServiceBus.NetTcpRelaySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.CreateMessageSecurityBooleanMessageSecurityVersion">
            <summary>Sets the shim of NetTcpRelaySecurity.CreateMessageSecurity(Boolean isReliableSessionEnabled, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.MessageGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.ModeGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetTcpRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.AllInstances.TransportGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.Constructor">
            <summary>Sets the shim of NetTcpRelaySecurity.NetTcpRelaySecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeTcpRelayTransportSecurityMessageSecurityOverRelayConnection">
            <summary>Sets the shim of NetTcpRelaySecurity.NetTcpRelaySecurity(EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, TcpRelayTransportSecurity transportSecurity, MessageSecurityOverRelayConnection messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.CreateMessageSecurityBooleanMessageSecurityVersion">
            <summary>Sets the shim of NetTcpRelaySecurity.CreateMessageSecurity(Boolean isReliableSessionEnabled, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.MessageGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.ModeGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of NetTcpRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of NetTcpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.TransportGet">
            <summary>Sets the shim of NetTcpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNetTcpRelaySecurity.TryCreateSecurityBindingElementEndToEndSecurityModeRelayClientAuthenticationTypeBooleanTcpRelayTransportSecurityNetTcpRelaySecurityOut">
            <summary>Sets the shim of NetTcpRelaySecurity.TryCreate(SecurityBindingElement wsSecurity, EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, Boolean isReliableSessionEnabled, TcpRelayTransportSecurity tcpTransportSecurity, NetTcpRelaySecurity&amp; security)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNoRetry">
            <summary>Shim type of Microsoft.ServiceBus.NoRetry</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNoRetry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNoRetry.#ctor(Microsoft.ServiceBus.NoRetry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances.Clone">
            <summary>Sets the shim of NoRetry.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances.IsRetryableExceptionException">
            <summary>Sets the shim of NoRetry.IsRetryableException(Exception lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances.OnShouldRetryTimeSpanInt32TimeSpanOut">
            <summary>Sets the shim of NoRetry.OnShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances.ResetServerBusyInternal">
            <summary>Sets the shim of NoRetry.ResetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.AllInstances.SetServerBusyInternal">
            <summary>Sets the shim of NoRetry.SetServerBusyInternal()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNoRetry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNoRetry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.Clone">
            <summary>Sets the shim of NoRetry.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.Constructor">
            <summary>Sets the shim of NoRetry.NoRetry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.IsRetryableExceptionException">
            <summary>Sets the shim of NoRetry.IsRetryableException(Exception lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.OnShouldRetryTimeSpanInt32TimeSpanOut">
            <summary>Sets the shim of NoRetry.OnShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.ResetServerBusyInternal">
            <summary>Sets the shim of NoRetry.ResetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNoRetry.SetServerBusyInternal">
            <summary>Sets the shim of NoRetry.SetServerBusyInternal()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp">
            <summary>Shim type of Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.#ctor(Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.AllInstances.EstablishSecurityContextGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.get_EstablishSecurityContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.AllInstances.EstablishSecurityContextSetBoolean">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.set_EstablishSecurityContext(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.AllInstances.IsSecureConversationEnabled">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.IsSecureConversationEnabled()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.Constructor">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.NonDualMessageSecurityOverRelayHttp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.EstablishSecurityContextGet">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.get_EstablishSecurityContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.EstablishSecurityContextSetBoolean">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.set_EstablishSecurityContext(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimNonDualMessageSecurityOverRelayHttp.IsSecureConversationEnabled">
            <summary>Sets the shim of NonDualMessageSecurityOverRelayHttp.IsSecureConversationEnabled()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.OAuthTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.#ctor(Microsoft.ServiceBus.OAuthTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.BuildRequestTokenString">
            <summary>Sets the shim of OAuthTokenProvider.BuildRequestToken(String scope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.NormalizeAppliesToString">
            <summary>Sets the shim of OAuthTokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of OAuthTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of OAuthTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of OAuthTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of OAuthTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.BuildRequestTokenString">
            <summary>Sets the shim of OAuthTokenProvider.BuildRequestToken(String scope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.BuildStsUriUri">
            <summary>Sets the shim of OAuthTokenProvider.BuildStsUri(Uri baseAddress)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.ConstructorIEnumerableOfUriNetworkCredential">
            <summary>Sets the shim of OAuthTokenProvider.OAuthTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris, NetworkCredential credential)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.NormalizeAppliesToString">
            <summary>Sets the shim of OAuthTokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of OAuthTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of OAuthTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of OAuthTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimOAuthTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of OAuthTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException">
            <summary>Shim type of Microsoft.ServiceBus.RelayNotFoundException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.#ctor(Microsoft.ServiceBus.RelayNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.Constructor">
            <summary>Sets the shim of RelayNotFoundException.RelayNotFoundException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RelayNotFoundException.RelayNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.ConstructorString">
            <summary>Sets the shim of RelayNotFoundException.RelayNotFoundException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayNotFoundException.ConstructorStringException">
            <summary>Sets the shim of RelayNotFoundException.RelayNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.RelayedOnewayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.Clone">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ConnectionBufferSizeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ConnectionModeSetRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ConnectionMode(RelayedOnewayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ConnectionPoolSettingsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxOutputDelayGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxPendingAcceptsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxPendingConnectionsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.SchemeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.TransportProtectionEnabledGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_TransportProtectionEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.AllInstances.TransportProtectionEnabledSetBoolean">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_TransportProtectionEnabled(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.Bind(System.ServiceModel.Description.IPolicyExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ChannelInitializationTimeoutGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ChannelInitializationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ChannelInitializationTimeoutSetTimeSpan">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ChannelInitializationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.Clone">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConnectionBufferSizeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConnectionBufferSizeSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ConnectionBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConnectionModeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConnectionModeSetRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ConnectionMode(RelayedOnewayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConnectionPoolSettingsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.Constructor">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.RelayedOnewayTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConstructorRelayClientAuthenticationType">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.RelayedOnewayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConstructorRelayClientAuthenticationTypeRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.RelayedOnewayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType, RelayedOnewayConnectionMode connectionMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ConstructorRelayedOnewayTransportBindingElement">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.RelayedOnewayTransportBindingElement(RelayedOnewayTransportBindingElement elementToClone)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.CreateOnewayTransportBindingElementBindingContextRelayClientAuthenticationTypeRelayedOnewayConnectionMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.CreateOnewayTransportBindingElement(BindingContext context, RelayClientAuthenticationType relayClientAuthenticationType, RelayedOnewayConnectionMode connectionMode)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.GetProtectionRequirementsAddressingVersion">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.GetProtectionRequirements(AddressingVersion addressingVersion)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.GetProtectionRequirementsBindingContext">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.GetProtectionRequirements(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.HostNameComparisonModeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ListenBacklogGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.ListenBacklogSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxBufferSizeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxBufferSizeSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxOutputDelayGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxOutputDelay()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxOutputDelaySetTimeSpan">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxOutputDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxPendingAcceptsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxPendingAccepts()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxPendingAcceptsSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxPendingAccepts(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxPendingConnectionsGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_MaxPendingConnections()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.MaxPendingConnectionsSetInt32">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_MaxPendingConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.SchemeGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.TransportProtectionEnabledGet">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.get_TransportProtectionEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportBindingElement.TransportProtectionEnabledSetBoolean">
            <summary>Sets the shim of RelayedOnewayTransportBindingElement.set_TransportProtectionEnabled(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity">
            <summary>Shim type of Microsoft.ServiceBus.RelayedOnewayTransportSecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.AllInstances.ProtectionLevelGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurity.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.AllInstances.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of RelayedOnewayTransportSecurity.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.Constructor">
            <summary>Sets the shim of RelayedOnewayTransportSecurity.RelayedOnewayTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.ProtectionLevelGet">
            <summary>Sets the shim of RelayedOnewayTransportSecurity.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRelayedOnewayTransportSecurity.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of RelayedOnewayTransportSecurity.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRetryExponential">
            <summary>Shim type of Microsoft.ServiceBus.RetryExponential</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryExponential.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryExponential.#ctor(Microsoft.ServiceBus.RetryExponential)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.Clone">
            <summary>Sets the shim of RetryExponential.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.DeltaBackoffGet">
            <summary>Sets the shim of RetryExponential.get_DeltaBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.DeltaBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_DeltaBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.IsRetryableExceptionException">
            <summary>Sets the shim of RetryExponential.IsRetryableException(Exception lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.IsRetryableExceptionMessagingException">
            <summary>Sets the shim of RetryExponential.IsRetryableException(MessagingException lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MaxRetryCountGet">
            <summary>Sets the shim of RetryExponential.get_MaxRetryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MaxRetryCountSetInt32">
            <summary>Sets the shim of RetryExponential.set_MaxRetryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MaximumBackoffGet">
            <summary>Sets the shim of RetryExponential.get_MaximumBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MaximumBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_MaximumBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MinimalBackoffGet">
            <summary>Sets the shim of RetryExponential.get_MinimalBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.MinimalBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_MinimalBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.OnShouldRetryTimeSpanInt32TimeSpanOut">
            <summary>Sets the shim of RetryExponential.OnShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.TerminationTimeBufferGet">
            <summary>Sets the shim of RetryExponential.get_TerminationTimeBuffer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.AllInstances.TerminationTimeBufferSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_TerminationTimeBuffer(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryExponential.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryExponential.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.Clone">
            <summary>Sets the shim of RetryExponential.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.ConstructorTimeSpanTimeSpanInt32">
            <summary>Sets the shim of RetryExponential.RetryExponential(TimeSpan minBackoff, TimeSpan maxBackoff, Int32 maxRetryCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.ConstructorTimeSpanTimeSpanTimeSpanTimeSpanInt32">
            <summary>Sets the shim of RetryExponential.RetryExponential(TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff, TimeSpan terminationTimeBuffer, Int32 maxRetryCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.ConstructorTimeSpanTimeSpanTimeSpanTimeSpanInt32Boolean">
            <summary>Sets the shim of RetryExponential.RetryExponential(TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff, TimeSpan terminationTimeBuffer, Int32 maxRetryCount, Boolean throwOnClientChecks)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.DeltaBackoffGet">
            <summary>Sets the shim of RetryExponential.get_DeltaBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.DeltaBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_DeltaBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.IsRetryableExceptionException">
            <summary>Sets the shim of RetryExponential.IsRetryableException(Exception lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.IsRetryableExceptionMessagingException">
            <summary>Sets the shim of RetryExponential.IsRetryableException(MessagingException lastException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MaxRetryCountGet">
            <summary>Sets the shim of RetryExponential.get_MaxRetryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MaxRetryCountSetInt32">
            <summary>Sets the shim of RetryExponential.set_MaxRetryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MaximumBackoffGet">
            <summary>Sets the shim of RetryExponential.get_MaximumBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MaximumBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_MaximumBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MinimalBackoffGet">
            <summary>Sets the shim of RetryExponential.get_MinimalBackoff()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.MinimalBackoffSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_MinimalBackoff(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.OnShouldRetryTimeSpanInt32TimeSpanOut">
            <summary>Sets the shim of RetryExponential.OnShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.TerminationTimeBufferGet">
            <summary>Sets the shim of RetryExponential.get_TerminationTimeBuffer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryExponential.TerminationTimeBufferSetTimeSpan">
            <summary>Sets the shim of RetryExponential.set_TerminationTimeBuffer(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRetryPolicy">
            <summary>Shim type of Microsoft.ServiceBus.RetryPolicy</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.#ctor(Microsoft.ServiceBus.RetryPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.IsServerBusyGet">
            <summary>Sets the shim of RetryPolicy.get_IsServerBusy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.ResetServerBusy">
            <summary>Sets the shim of RetryPolicy.ResetServerBusy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.ResetServerBusyInternal">
            <summary>Sets the shim of RetryPolicy.ResetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.ServerBusyEncounteredGet">
            <summary>Sets the shim of RetryPolicy.get_ServerBusyEncountered()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.ServerBusyExceptionMessageGet">
            <summary>Sets the shim of RetryPolicy.get_ServerBusyExceptionMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.SetServerBusyInternal">
            <summary>Sets the shim of RetryPolicy.SetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.SetServerBusyString">
            <summary>Sets the shim of RetryPolicy.SetServerBusy(String exceptionMessage)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.AllInstances.ShouldRetryTimeSpanInt32ExceptionTimeSpanOut">
            <summary>Sets the shim of RetryPolicy.ShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, Exception lastException, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.Constructor">
            <summary>Sets the shim of RetryPolicy.RetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.DefaultGet">
            <summary>Sets the shim of RetryPolicy.get_Default()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.IsServerBusyGet">
            <summary>Sets the shim of RetryPolicy.get_IsServerBusy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.NoRetryGet">
            <summary>Sets the shim of RetryPolicy.get_NoRetry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.OnTimerCallbackObject">
            <summary>Sets the shim of RetryPolicy.OnTimerCallback(Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.ResetServerBusy">
            <summary>Sets the shim of RetryPolicy.ResetServerBusy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.ResetServerBusyInternal">
            <summary>Sets the shim of RetryPolicy.ResetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.ServerBusyEncounteredGet">
            <summary>Sets the shim of RetryPolicy.get_ServerBusyEncountered()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.ServerBusyExceptionMessageGet">
            <summary>Sets the shim of RetryPolicy.get_ServerBusyExceptionMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.SetServerBusyInternal">
            <summary>Sets the shim of RetryPolicy.SetServerBusyInternal()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.SetServerBusyString">
            <summary>Sets the shim of RetryPolicy.SetServerBusy(String exceptionMessage)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.ShouldRetryTimeSpanInt32ExceptionTimeSpanOut">
            <summary>Sets the shim of RetryPolicy.ShouldRetry(TimeSpan remainingTime, Int32 currentRetryCount, Exception lastException, TimeSpan&amp; retryInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimRetryPolicy.StaticConstructor">
            <summary>Sets the shim of RetryPolicy.RetryPolicy()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.SamlTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.#ctor(Microsoft.ServiceBus.SamlTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SamlTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SamlTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SamlTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SamlTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.AllInstances.SamlTokenGet">
            <summary>Sets the shim of SamlTokenProvider.get_SamlToken()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.ConstructorString">
            <summary>Sets the shim of SamlTokenProvider.SamlTokenProvider(String samlToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.ConstructorStringTokenScope">
            <summary>Sets the shim of SamlTokenProvider.SamlTokenProvider(String samlToken, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.ConstructorStringUri">
            <summary>Sets the shim of SamlTokenProvider.SamlTokenProvider(String samlToken, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.ConstructorStringUriTokenScope">
            <summary>Sets the shim of SamlTokenProvider.SamlTokenProvider(String samlToken, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SamlTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SamlTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SamlTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SamlTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSamlTokenProvider.SamlTokenGet">
            <summary>Sets the shim of SamlTokenProvider.get_SamlToken()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServerErrorException">
            <summary>Shim type of Microsoft.ServiceBus.ServerErrorException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServerErrorException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServerErrorException.#ctor(Microsoft.ServiceBus.ServerErrorException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServerErrorException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServerErrorException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServerErrorException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServerErrorException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServerErrorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServerErrorException.Constructor">
            <summary>Sets the shim of ServerErrorException.ServerErrorException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServerErrorException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ServerErrorException.ServerErrorException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServerErrorException.ConstructorString">
            <summary>Sets the shim of ServerErrorException.ServerErrorException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServerErrorException.ConstructorStringException">
            <summary>Sets the shim of ServerErrorException.ServerErrorException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder">
            <summary>Shim type of Microsoft.ServiceBus.ServiceBusConnectionStringBuilder</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.#ctor(Microsoft.ServiceBus.ServiceBusConnectionStringBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.AmqpSecurityCredentialTypeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_AmqpSecurityCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.AmqpSecurityCredentialTypeSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_AmqpSecurityCredentialType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.AmqpSecuritySchemeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_AmqpSecurityScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.AmqpSecuritySchemeSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_AmqpSecurityScheme(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EnableAmqpLinkRedirectGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_EnableAmqpLinkRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EnableAmqpLinkRedirectSetBoolean">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_EnableAmqpLinkRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EndpointsGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_Endpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EndpointsSetHashSetOfUri">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_Endpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EntityPathGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_EntityPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.EntityPathSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_EntityPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.GetAbsoluteEndpointsInt32String">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteEndpoints(Int32 port, String uriScheme)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.GetAbsoluteManagementEndpoints">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.GetAbsoluteRuntimeEndpoints">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.InitializeFromStringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.InitializeFromString(String connection)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.IsIoTDeviceUriGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_IsIoTDeviceUri()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.IsIoTDeviceUriSetBoolean">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_IsIoTDeviceUri(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.ManagementPortGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_ManagementPort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.ManagementPortSetInt32">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_ManagementPort(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthDomainGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthDomain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthDomainSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthDomain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthPasswordGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthPassword()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthPasswordSetSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthUsernameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthUsername()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OAuthUsernameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthUsername(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.PublisherGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.PublisherSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.RuntimePortGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_RuntimePort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.RuntimePortSetInt32">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_RuntimePort(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessKeyGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessKeyNameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessKeyNameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessKeySetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessSignatureGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessSignature()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedAccessSignatureSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessSignature(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedSecretIssuerNameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedSecretIssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedSecretIssuerNameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedSecretIssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedSecretIssuerSecretGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedSecretIssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.SharedSecretIssuerSecretSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedSecretIssuerSecret(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.StsEndpointsGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_StsEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.StsEndpointsSetHashSetOfUri">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_StsEndpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.ToString01">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.TransportTypeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_TransportType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.TransportTypeSetTransportType">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_TransportType(TransportType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.Validate">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.Validate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialDomainGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialDomain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialDomainSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialDomain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialPasswordGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialPassword()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialPasswordSetSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialUsernameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialUsername()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AllInstances.WindowsCredentialUsernameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialUsername(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AmqpSecurityCredentialTypeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_AmqpSecurityCredentialType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AmqpSecurityCredentialTypeSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_AmqpSecurityCredentialType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AmqpSecuritySchemeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_AmqpSecurityScheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.AmqpSecuritySchemeSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_AmqpSecurityScheme(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.Constructor">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.ServiceBusConnectionStringBuilder()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.ConstructorString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.ServiceBusConnectionStringBuilder(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingOAuthCredentialIEnumerableOfUriIEnumerableOfUriInt32Int32StringStringSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingOAuthCredential(IEnumerable`1&lt;Uri&gt; endpoints, IEnumerable`1&lt;Uri&gt; stsEndpoints, Int32 runtimePort, Int32 managementPort, String domain, String user, SecureString password)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingSharedAccessKeyIEnumerableOfUriInt32Int32StringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(IEnumerable`1&lt;Uri&gt; endpoints, Int32 runtimePort, Int32 managementPort, String keyName, String key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingSharedAccessKeyUriStringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(Uri endpoint, String keyName, String key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingSharedAccessSignatureUriStringStringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingSharedAccessSignature(Uri endpoint, String entityPath, String publisher, String sharedAccessSignature)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingSharedSecretIEnumerableOfUriIEnumerableOfUriInt32Int32StringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(IEnumerable`1&lt;Uri&gt; endpoints, IEnumerable`1&lt;Uri&gt; stsEndpoints, Int32 runtimePort, Int32 managementPort, String issuer, String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingSharedSecretUriStringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(Uri endpoint, String issuer, String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.CreateUsingWindowsCredentialIEnumerableOfUriIEnumerableOfUriInt32Int32StringStringSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.CreateUsingWindowsCredential(IEnumerable`1&lt;Uri&gt; endpoints, IEnumerable`1&lt;Uri&gt; stsEndpoints, Int32 runtimePort, Int32 managementPort, String domain, String user, SecureString password)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EnableAmqpLinkRedirectGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_EnableAmqpLinkRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EnableAmqpLinkRedirectSetBoolean">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_EnableAmqpLinkRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EndpointsGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_Endpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EndpointsSetHashSetOfUri">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_Endpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EntityPathGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_EntityPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.EntityPathSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_EntityPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.GetAbsoluteEndpointsInt32String">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteEndpoints(Int32 port, String uriScheme)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.InitializeFromStringString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.InitializeFromString(String connection)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.IsIoTDeviceUriGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_IsIoTDeviceUri()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.IsIoTDeviceUriSetBoolean">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_IsIoTDeviceUri(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.ManagementPortGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_ManagementPort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.ManagementPortSetInt32">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_ManagementPort(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthDomainGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthDomain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthDomainSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthDomain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthPasswordGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthPassword()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthPasswordSetSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthUsernameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OAuthUsername()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OAuthUsernameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OAuthUsername(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OperationTimeoutGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.PublisherGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.PublisherSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.RuntimePortGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_RuntimePort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.RuntimePortSetInt32">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_RuntimePort(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessKeyGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessKeyNameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessKeyNameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessKeySetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessSignatureGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedAccessSignature()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedAccessSignatureSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedAccessSignature(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedSecretIssuerNameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedSecretIssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedSecretIssuerNameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedSecretIssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedSecretIssuerSecretGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_SharedSecretIssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.SharedSecretIssuerSecretSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_SharedSecretIssuerSecret(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.StsEndpointsGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_StsEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.StsEndpointsSetHashSetOfUri">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_StsEndpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.ToString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.TransportTypeGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_TransportType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.TransportTypeSetTransportType">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_TransportType(TransportType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.Validate">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.Validate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialDomainGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialDomain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialDomainSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialDomain(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialPasswordGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialPassword()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialPasswordSetSecureString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialUsernameGet">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.get_WindowsCredentialUsername()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusConnectionStringBuilder.WindowsCredentialUsernameSetString">
            <summary>Sets the shim of ServiceBusConnectionStringBuilder.set_WindowsCredentialUsername(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment">
            <summary>Shim type of Microsoft.ServiceBus.ServiceBusEnvironment</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.CreateAccessControlIssuerString">
            <summary>Sets the shim of ServiceBusEnvironment.CreateAccessControlIssuer(String serviceNamespace)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.CreateAccessControlUriString">
            <summary>Sets the shim of ServiceBusEnvironment.CreateAccessControlUri(String serviceNamespace)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.CreateServiceUriStringStringString">
            <summary>Sets the shim of ServiceBusEnvironment.CreateServiceUri(String scheme, String serviceNamespace, String servicePath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.CreateServiceUriStringStringStringBoolean">
            <summary>Sets the shim of ServiceBusEnvironment.CreateServiceUri(String scheme, String serviceNamespace, String servicePath, Boolean suppressRelayPathPrefix)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.CreateServiceUriStringStringStringBooleanString">
            <summary>Sets the shim of ServiceBusEnvironment.CreateServiceUri(String scheme, String serviceNamespace, String servicePath, Boolean suppressRelayPathPrefix, String hostName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.DefaultIdentityHostNameGet">
            <summary>Sets the shim of ServiceBusEnvironment.get_DefaultIdentityHostName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.StaticConstructor">
            <summary>Sets the shim of ServiceBusEnvironment.ServiceBusEnvironment()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.SystemConnectivityGet">
            <summary>Sets the shim of ServiceBusEnvironment.get_SystemConnectivity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.UseNoRendezvousGet">
            <summary>Sets the shim of ServiceBusEnvironment.get_UseNoRendezvous()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.UseNoRendezvousSetNullableOfBoolean">
            <summary>Sets the shim of ServiceBusEnvironment.set_UseNoRendezvous(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.ValidateSchemeAndNamespaceStringString">
            <summary>Sets the shim of ServiceBusEnvironment.ValidateSchemeAndNamespace(String scheme, String serviceNamespace)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.ValidateSchemeString">
            <summary>Sets the shim of ServiceBusEnvironment.ValidateScheme(String scheme)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusEnvironment.ValidateServiceNamespaceString">
            <summary>Sets the shim of ServiceBusEnvironment.ValidateServiceNamespace(String serviceNamespace)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData">
            <summary>Shim type of Microsoft.ServiceBus.ServiceBusErrorData</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.#ctor(Microsoft.ServiceBus.ServiceBusErrorData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.CodeGet">
            <summary>Sets the shim of ServiceBusErrorData.get_Code()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.CodeSetInt32">
            <summary>Sets the shim of ServiceBusErrorData.set_Code(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.DetailGet">
            <summary>Sets the shim of ServiceBusErrorData.get_Detail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.DetailSetString">
            <summary>Sets the shim of ServiceBusErrorData.set_Detail(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of ServiceBusErrorData.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.AllInstances.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of ServiceBusErrorData.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.CodeGet">
            <summary>Sets the shim of ServiceBusErrorData.get_Code()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.CodeSetInt32">
            <summary>Sets the shim of ServiceBusErrorData.set_Code(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.Constructor">
            <summary>Sets the shim of ServiceBusErrorData.ServiceBusErrorData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.DetailGet">
            <summary>Sets the shim of ServiceBusErrorData.get_Detail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.DetailSetString">
            <summary>Sets the shim of ServiceBusErrorData.set_Detail(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.ExtensionDataGet">
            <summary>Sets the shim of ServiceBusErrorData.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of ServiceBusErrorData.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceBusErrorData.GetServiceBusErrorDataHttpWebResponse">
            <summary>Sets the shim of ServiceBusErrorData.GetServiceBusErrorData(HttpWebResponse webResponse)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings">
            <summary>Shim type of Microsoft.ServiceBus.ServiceRegistrySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.#ctor(Microsoft.ServiceBus.ServiceRegistrySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.DiscoveryModeGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_DiscoveryMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.DiscoveryModeSetDiscoveryType">
            <summary>Sets the shim of ServiceRegistrySettings.set_DiscoveryMode(DiscoveryType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.DisplayNameGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of ServiceRegistrySettings.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.PreserveRawHttpGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_PreserveRawHttp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.PreserveRawHttpSetNullableOfBoolean">
            <summary>Sets the shim of ServiceRegistrySettings.set_PreserveRawHttp(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint endpoint)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.Bind(System.ServiceModel.Description.IEndpointBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.Constructor">
            <summary>Sets the shim of ServiceRegistrySettings.ServiceRegistrySettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.ConstructorDiscoveryType">
            <summary>Sets the shim of ServiceRegistrySettings.ServiceRegistrySettings(DiscoveryType discoveryType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.DiscoveryModeGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_DiscoveryMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.DiscoveryModeSetDiscoveryType">
            <summary>Sets the shim of ServiceRegistrySettings.set_DiscoveryMode(DiscoveryType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.DisplayNameGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.DisplayNameSetString">
            <summary>Sets the shim of ServiceRegistrySettings.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.PreserveRawHttpGet">
            <summary>Sets the shim of ServiceRegistrySettings.get_PreserveRawHttp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.PreserveRawHttpSetNullableOfBoolean">
            <summary>Sets the shim of ServiceRegistrySettings.set_PreserveRawHttp(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimServiceRegistrySettings.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of ServiceRegistrySettings.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint endpoint)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken">
            <summary>Shim type of Microsoft.ServiceBus.SharedAccessSignatureToken</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.#ctor(Microsoft.ServiceBus.SharedAccessSignatureToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AllInstances.AudienceFieldNameGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_AudienceFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AllInstances.ExpiresOnFieldNameGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AllInstances.KeyValueSeparatorGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AllInstances.PairSeparatorGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_PairSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.AudienceFieldNameGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_AudienceFieldName()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ConstructorString">
            <summary>Sets the shim of SharedAccessSignatureToken.SharedAccessSignatureToken(String tokenString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ConstructorStringDateTime">
            <summary>Sets the shim of SharedAccessSignatureToken.SharedAccessSignatureToken(String tokenString, DateTime expiry)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ConstructorStringDateTimeString">
            <summary>Sets the shim of SharedAccessSignatureToken.SharedAccessSignatureToken(String tokenString, DateTime expiry, String audience)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ConstructorStringString">
            <summary>Sets the shim of SharedAccessSignatureToken.SharedAccessSignatureToken(String id, String tokenString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ExpiresOnFieldNameGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ExtractFieldValuesString">
            <summary>Sets the shim of SharedAccessSignatureToken.ExtractFieldValues(String sharedAccessSignature)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.KeyValueSeparatorGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.PairSeparatorGet">
            <summary>Sets the shim of SharedAccessSignatureToken.get_PairSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureToken.ValidateString">
            <summary>Sets the shim of SharedAccessSignatureToken.Validate(String sharedAccessSignature)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.SharedAccessSignatureTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.#ctor(Microsoft.ServiceBus.SharedAccessSignatureTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.BuildSignatureString">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.SignatureEqualsSharedAccessSignatureTokenProviderBoolean">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SignatureEquals(SharedAccessSignatureTokenProvider comparand, Boolean parseAndCompare)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.AllInstances.StripQueryParametersGet">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.BuildSignatureString">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.ConstructorString">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String sharedAccessSignature)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.ConstructorStringStringFuncOfStringByteArrayTimeSpanTokenScope">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, Func`2&lt;String,Byte[]&gt; customKeyEncoder, TimeSpan tokenTimeToLive, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.ConstructorStringStringTimeSpan">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, TimeSpan tokenTimeToLive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.ConstructorStringStringTimeSpanTokenScope">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, TimeSpan tokenTimeToLive, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.GetPublisherSharedAccessSignatureUriStringStringStringStringTimeSpan">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.GetPublisherSharedAccessSignature(Uri endpoint, String entityPath, String publisher, String keyName, String key, TimeSpan tokenTimeToLive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.GetSharedAccessSignatureStringStringStringTimeSpan">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.GetSharedAccessSignature(String keyName, String sharedAccessKey, String resource, TimeSpan tokenTimeToLive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.SignatureEqualsSharedAccessSignatureTokenProviderBoolean">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SignatureEquals(SharedAccessSignatureTokenProvider comparand, Boolean parseAndCompare)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.StaticConstructor">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.SharedAccessSignatureTokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedAccessSignatureTokenProvider.StripQueryParametersGet">
            <summary>Sets the shim of SharedAccessSignatureTokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.SharedSecretTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.#ctor(Microsoft.ServiceBus.SharedSecretTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.IssuerNameGet">
            <summary>Sets the shim of SharedSecretTokenProvider.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.IssuerSecretGet">
            <summary>Sets the shim of SharedSecretTokenProvider.get_IssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedSecretTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedSecretTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedSecretTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedSecretTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ComputeSimpleWebTokenStringStringByteArray">
            <summary>Sets the shim of SharedSecretTokenProvider.ComputeSimpleWebTokenString(String issuerName, Byte[] issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ComputeSimpleWebTokenStringStringString">
            <summary>Sets the shim of SharedSecretTokenProvider.ComputeSimpleWebTokenString(String issuerName, String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringByteArray">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, Byte[] issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringByteArrayTokenScope">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringByteArrayUri">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringByteArrayUriTokenScope">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringString">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringStringTokenScope">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, String issuerSecret, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringStringUri">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, String issuerSecret, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.ConstructorStringStringUriTokenScope">
            <summary>Sets the shim of SharedSecretTokenProvider.SharedSecretTokenProvider(String issuerName, String issuerSecret, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.DecodeSecretString">
            <summary>Sets the shim of SharedSecretTokenProvider.DecodeSecret(String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.IssuerNameGet">
            <summary>Sets the shim of SharedSecretTokenProvider.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.IssuerSecretGet">
            <summary>Sets the shim of SharedSecretTokenProvider.get_IssuerSecret()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedSecretTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SharedSecretTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedSecretTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSharedSecretTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SharedSecretTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken">
            <summary>Shim type of Microsoft.ServiceBus.SimpleWebSecurityToken</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.#ctor(Microsoft.ServiceBus.SimpleWebSecurityToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.AudienceFieldNameGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_AudienceFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.AudienceGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Audience()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.ExpiresOnFieldNameGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.ExpiresOnGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ExpiresOn()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.GetAudienceFromTokenString">
            <summary>Sets the shim of SimpleWebSecurityToken.GetAudienceFromToken(String token)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.GetExpirationDateAndAudienceFromTokenStringDateTimeOutStringOut">
            <summary>Sets the shim of SimpleWebSecurityToken.GetExpirationDateAndAudienceFromToken(String token, DateTime&amp; expiresOn, String&amp; audience)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.IdGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.KeyValueSeparatorGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.PairSeparatorGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_PairSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.SecurityKeysGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.TokenGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Token()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.ValidFromGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AllInstances.ValidToGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AudienceFieldNameGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_AudienceFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.AudienceGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Audience()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ConstructorString">
            <summary>Sets the shim of SimpleWebSecurityToken.SimpleWebSecurityToken(String tokenString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ConstructorStringDateTime">
            <summary>Sets the shim of SimpleWebSecurityToken.SimpleWebSecurityToken(String tokenString, DateTime expiry)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ConstructorStringDateTimeString">
            <summary>Sets the shim of SimpleWebSecurityToken.SimpleWebSecurityToken(String tokenString, DateTime expiry, String audience)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ConstructorStringString">
            <summary>Sets the shim of SimpleWebSecurityToken.SimpleWebSecurityToken(String id, String tokenString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.DecodeStringFuncOfStringStringFuncOfStringStringStringString">
            <summary>Sets the shim of SimpleWebSecurityToken.Decode(String encodedString, Func`2&lt;String,String&gt; keyDecoder, Func`2&lt;String,String&gt; valueDecoder, String keyValueSeparator, String pairSeparator)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ExpiresOnFieldNameGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ExpiresOnGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ExpiresOn()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.GetAudienceFromTokenString">
            <summary>Sets the shim of SimpleWebSecurityToken.GetAudienceFromToken(String token)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.GetExpirationDateAndAudienceFromTokenStringDateTimeOutStringOut">
            <summary>Sets the shim of SimpleWebSecurityToken.GetExpirationDateAndAudienceFromToken(String token, DateTime&amp; expiresOn, String&amp; audience)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.IdGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.KeyValueSeparatorGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.PairSeparatorGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_PairSeparator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.SecurityKeysGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.StaticConstructor">
            <summary>Sets the shim of SimpleWebSecurityToken.SimpleWebSecurityToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.TokenGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_Token()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ValidFromGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityToken.ValidToGet">
            <summary>Sets the shim of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer">
            <summary>Shim type of Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.#ctor(Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanReadKeyIdentifierCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanReadTokenCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanWriteKeyIdentifierClauseCoreSecurityKeyIdentifierClause">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanWriteKeyIdentifierCoreSecurityKeyIdentifier">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.CanWriteTokenCoreSecurityToken">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken token)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.ReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.ReadKeyIdentifierCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.ReadTokenCoreXmlReaderSecurityTokenResolver">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.WriteKeyIdentifierClauseCoreXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.WriteKeyIdentifierCoreXmlWriterSecurityKeyIdentifier">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.AllInstances.WriteTokenCoreXmlWriterSecurityToken">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanReadTokenCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCoreSecurityKeyIdentifierClause">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCoreSecurityKeyIdentifier">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.CanWriteTokenCoreSecurityToken">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken token)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.Constructor">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.ConstructorSecurityTokenSerializer">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer(SecurityTokenSerializer innerSerializer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.IsSimpleWebSecurityTokenXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.IsSimpleWebSecurityToken(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.ReadBinaryCoreStringByteArray">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadBinaryCore(String id, Byte[] rawData)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.ReadKeyIdentifierCoreXmlReader">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.ReadTokenCoreXmlReaderSecurityTokenResolver">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.StaticConstructor">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.SimpleWebSecurityTokenSerializer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.WriteBinaryCoreSecurityTokenStringOutByteArrayOut">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteBinaryCore(SecurityToken token, String&amp; id, Byte[]&amp; rawData)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCoreXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.WriteKeyIdentifierCoreXmlWriterSecurityKeyIdentifier">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebSecurityTokenSerializer.WriteTokenCoreXmlWriterSecurityToken">
            <summary>Sets the shim of SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.SimpleWebTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.#ctor(Microsoft.ServiceBus.SimpleWebTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SimpleWebTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SimpleWebTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SimpleWebTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SimpleWebTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.AllInstances.SimpleWebTokenGet">
            <summary>Sets the shim of SimpleWebTokenProvider.get_SimpleWebToken()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.ConstructorString">
            <summary>Sets the shim of SimpleWebTokenProvider.SimpleWebTokenProvider(String simpleWebToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.ConstructorStringTokenScope">
            <summary>Sets the shim of SimpleWebTokenProvider.SimpleWebTokenProvider(String simpleWebToken, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.ConstructorStringUri">
            <summary>Sets the shim of SimpleWebTokenProvider.SimpleWebTokenProvider(String simpleWebToken, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.ConstructorStringUriTokenScope">
            <summary>Sets the shim of SimpleWebTokenProvider.SimpleWebTokenProvider(String simpleWebToken, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SimpleWebTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SimpleWebTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SimpleWebTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of SimpleWebTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSimpleWebTokenProvider.SimpleWebTokenGet">
            <summary>Sets the shim of SimpleWebTokenProvider.get_SimpleWebToken()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings">
            <summary>Shim type of Microsoft.ServiceBus.SocketConnectionPoolSettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.#ctor(Microsoft.ServiceBus.SocketConnectionPoolSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.Clone">
            <summary>Sets the shim of SocketConnectionPoolSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.GroupNameGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.GroupNameSetString">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.IdleTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_IdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.IdleTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_IdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.IsMatchSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettings.IsMatch(SocketConnectionPoolSettings tcp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.LeaseTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.MaxOutboundConnectionsPerEndpointGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_MaxOutboundConnectionsPerEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.AllInstances.MaxOutboundConnectionsPerEndpointSetInt32">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_MaxOutboundConnectionsPerEndpoint(Int32 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.Clone">
            <summary>Sets the shim of SocketConnectionPoolSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.Constructor">
            <summary>Sets the shim of SocketConnectionPoolSettings.SocketConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.ConstructorSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettings.SocketConnectionPoolSettings(SocketConnectionPoolSettings tcp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.GroupNameGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.GroupNameSetString">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.IdleTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_IdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.IdleTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_IdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.IsMatchSocketConnectionPoolSettings">
            <summary>Sets the shim of SocketConnectionPoolSettings.IsMatch(SocketConnectionPoolSettings tcp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.LeaseTimeoutGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpointGet">
            <summary>Sets the shim of SocketConnectionPoolSettings.get_MaxOutboundConnectionsPerEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimSocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpointSetInt32">
            <summary>Sets the shim of SocketConnectionPoolSettings.set_MaxOutboundConnectionsPerEndpoint(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.#ctor(Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.AllInstances.Clone">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.AllInstances.GetTransportTokenAssertion">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.Clone">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.Constructor">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.TcpClientTransportTokenAssertionProviderBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion">
            <summary>Sets the shim of TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.TcpRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.BuildInnerBindingElementBindingContext">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildInnerBindingElement(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.Clone">
            <summary>Sets the shim of TcpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.ConnectionModeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.ConnectionPoolSettingsGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.EnsureValid">
            <summary>Sets the shim of TcpRelayTransportBindingElement.EnsureValid()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.IsDynamicGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.IsMatchBindingElement">
            <summary>Sets the shim of TcpRelayTransportBindingElement.IsMatch(BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.ListenBacklogGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.ListenBacklogSetInt32">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.SchemeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.TransportProtectionEnabledGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_TransportProtectionEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.AllInstances.TransportProtectionEnabledSetBoolean">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_TransportProtectionEnabled(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.Bind(System.ServiceModel.Description.IPolicyExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.BuildInnerBindingElementBindingContext">
            <summary>Sets the shim of TcpRelayTransportBindingElement.BuildInnerBindingElement(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.Clone">
            <summary>Sets the shim of TcpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ConnectionModeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ConnectionMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ConnectionModeSetTcpRelayConnectionMode">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_ConnectionMode(TcpRelayConnectionMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ConnectionPoolSettingsGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ConnectionPoolSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.Constructor">
            <summary>Sets the shim of TcpRelayTransportBindingElement.TcpRelayTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ConstructorRelayClientAuthenticationType">
            <summary>Sets the shim of TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ConstructorTcpRelayTransportBindingElement">
            <summary>Sets the shim of TcpRelayTransportBindingElement.TcpRelayTransportBindingElement(TcpRelayTransportBindingElement elementToBeCloned)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.EnsureValid">
            <summary>Sets the shim of TcpRelayTransportBindingElement.EnsureValid()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of TcpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.IsDynamicGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.IsDynamicSetBoolean">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.IsMatchBindingElement">
            <summary>Sets the shim of TcpRelayTransportBindingElement.IsMatch(BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ListenBacklogGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_ListenBacklog()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.ListenBacklogSetInt32">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_ListenBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.SchemeGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of TcpRelayTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.TransportProtectionEnabledGet">
            <summary>Sets the shim of TcpRelayTransportBindingElement.get_TransportProtectionEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportBindingElement.TransportProtectionEnabledSetBoolean">
            <summary>Sets the shim of TcpRelayTransportBindingElement.set_TransportProtectionEnabled(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity">
            <summary>Shim type of Microsoft.ServiceBus.TcpRelayTransportSecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.#ctor(Microsoft.ServiceBus.TcpRelayTransportSecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.AllInstances.ProtectionLevelGet">
            <summary>Sets the shim of TcpRelayTransportSecurity.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.AllInstances.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of TcpRelayTransportSecurity.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.Constructor">
            <summary>Sets the shim of TcpRelayTransportSecurity.TcpRelayTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.ProtectionLevelGet">
            <summary>Sets the shim of TcpRelayTransportSecurity.get_ProtectionLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTcpRelayTransportSecurity.ProtectionLevelSetProtectionLevel">
            <summary>Sets the shim of TcpRelayTransportSecurity.set_ProtectionLevel(ProtectionLevel value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTokenConstants">
            <summary>Shim type of Microsoft.ServiceBus.TokenConstants</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenConstants.StaticConstructor">
            <summary>Sets the shim of TokenConstants.TokenConstants()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.TokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProvider.#ctor(Microsoft.ServiceBus.TokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.BeginGetTokenStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetToken(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.BeginGetTokenUriStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetToken(Uri namespaceAddress, String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.BeginGetWebTokenStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetWebToken(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.BeginGetWebTokenUriStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetWebToken(Uri namespaceAddress, String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.CacheSizeGet">
            <summary>Sets the shim of TokenProvider.get_CacheSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.CacheSizeSetInt32">
            <summary>Sets the shim of TokenProvider.set_CacheSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.CacheTokensGet">
            <summary>Sets the shim of TokenProvider.get_CacheTokens()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.CacheTokensSetBoolean">
            <summary>Sets the shim of TokenProvider.set_CacheTokens(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.Clear">
            <summary>Sets the shim of TokenProvider.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.EndGetTokenIAsyncResult">
            <summary>Sets the shim of TokenProvider.EndGetToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.EndGetWebTokenIAsyncResult">
            <summary>Sets the shim of TokenProvider.EndGetWebToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.GetTokenAsyncStringStringBooleanTimeSpan">
            <summary>Sets the shim of TokenProvider.GetTokenAsync(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.GetWebTokenAsyncStringStringBooleanTimeSpan">
            <summary>Sets the shim of TokenProvider.GetWebTokenAsync(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.IsWebTokenSupportedGet">
            <summary>Sets the shim of TokenProvider.get_IsWebTokenSupported()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.NormalizeAppliesToString">
            <summary>Sets the shim of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.NormalizeAppliesToUriString">
            <summary>Sets the shim of TokenProvider.NormalizeAppliesTo(Uri namespaceAddress, String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.StripQueryParametersGet">
            <summary>Sets the shim of TokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.TokenScopeGet">
            <summary>Sets the shim of TokenProvider.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.TokenScopeSetTokenScope">
            <summary>Sets the shim of TokenProvider.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.AllInstances.ValidateActionString">
            <summary>Sets the shim of TokenProvider.ValidateAction(String action)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BeginGetTokenStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetToken(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BeginGetTokenUriStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetToken(Uri namespaceAddress, String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BeginGetWebTokenStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetWebToken(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BeginGetWebTokenUriStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TokenProvider.BeginGetWebToken(Uri namespaceAddress, String appliesTo, String action, Boolean bypassCache, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CacheSizeGet">
            <summary>Sets the shim of TokenProvider.get_CacheSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CacheSizeSetInt32">
            <summary>Sets the shim of TokenProvider.set_CacheSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CacheTokensGet">
            <summary>Sets the shim of TokenProvider.get_CacheTokens()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CacheTokensSetBoolean">
            <summary>Sets the shim of TokenProvider.set_CacheTokens(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.Clear">
            <summary>Sets the shim of TokenProvider.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.ConstructorBooleanBoolean">
            <summary>Sets the shim of TokenProvider.TokenProvider(Boolean cacheTokens, Boolean supportHttpAuthToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.ConstructorBooleanBooleanInt32TokenScope">
            <summary>Sets the shim of TokenProvider.TokenProvider(Boolean cacheTokens, Boolean supportHttpAuthToken, Int32 cacheSize, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.ConstructorBooleanBooleanTokenScope">
            <summary>Sets the shim of TokenProvider.TokenProvider(Boolean cacheTokens, Boolean supportHttpAuthToken, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateIoTTokenProviderStringString">
            <summary>Sets the shim of TokenProvider.CreateIoTTokenProvider(String keyName, String sharedAccessKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateOAuthTokenProviderIEnumerableOfUriNetworkCredential">
            <summary>Sets the shim of TokenProvider.CreateOAuthTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris, NetworkCredential credential)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderString">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderStringTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderStringUri">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderStringUriInt32">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken, Uri stsUri, Int32 cacheSize)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderStringUriInt32TokenScope">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken, Uri stsUri, Int32 cacheSize, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSamlTokenProviderStringUriTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSamlTokenProvider(String samlToken, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedAccessSignatureTokenProviderString">
            <summary>Sets the shim of TokenProvider.CreateSharedAccessSignatureTokenProvider(String sharedAccessSignature)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedAccessSignatureTokenProviderStringString">
            <summary>Sets the shim of TokenProvider.CreateSharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedAccessSignatureTokenProviderStringStringTimeSpan">
            <summary>Sets the shim of TokenProvider.CreateSharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, TimeSpan tokenTimeToLive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedAccessSignatureTokenProviderStringStringTimeSpanTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, TimeSpan tokenTimeToLive, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedAccessSignatureTokenProviderStringStringTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedAccessSignatureTokenProvider(String keyName, String sharedAccessKey, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringByteArray">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, Byte[] issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringByteArrayTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringByteArrayUri">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringByteArrayUriTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, Byte[] issuerSecret, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringString">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, String issuerSecret)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringStringTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, String issuerSecret, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringStringUri">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, String issuerSecret, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSharedSecretTokenProviderStringStringUriTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSharedSecretTokenProvider(String issuerName, String issuerSecret, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSimpleWebTokenProviderString">
            <summary>Sets the shim of TokenProvider.CreateSimpleWebTokenProvider(String token)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSimpleWebTokenProviderStringTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSimpleWebTokenProvider(String token, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSimpleWebTokenProviderStringUri">
            <summary>Sets the shim of TokenProvider.CreateSimpleWebTokenProvider(String token, Uri stsUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateSimpleWebTokenProviderStringUriTokenScope">
            <summary>Sets the shim of TokenProvider.CreateSimpleWebTokenProvider(String token, Uri stsUri, TokenScope tokenScope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateWindowsTokenProviderIEnumerableOfUri">
            <summary>Sets the shim of TokenProvider.CreateWindowsTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.CreateWindowsTokenProviderIEnumerableOfUriNetworkCredential">
            <summary>Sets the shim of TokenProvider.CreateWindowsTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris, NetworkCredential credential)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.EndGetTokenIAsyncResult">
            <summary>Sets the shim of TokenProvider.EndGetToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.EndGetWebTokenIAsyncResult">
            <summary>Sets the shim of TokenProvider.EndGetWebToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.GetTokenAsyncStringStringBooleanTimeSpan">
            <summary>Sets the shim of TokenProvider.GetTokenAsync(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.GetWebTokenAsyncStringStringBooleanTimeSpan">
            <summary>Sets the shim of TokenProvider.GetWebTokenAsync(String appliesTo, String action, Boolean bypassCache, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.IsWebTokenSupportedGet">
            <summary>Sets the shim of TokenProvider.get_IsWebTokenSupported()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.NormalizeAppliesToString">
            <summary>Sets the shim of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.NormalizeAppliesToUriString">
            <summary>Sets the shim of TokenProvider.NormalizeAppliesTo(Uri namespaceAddress, String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.StaticConstructor">
            <summary>Sets the shim of TokenProvider.TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.StripQueryParametersGet">
            <summary>Sets the shim of TokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.TokenScopeGet">
            <summary>Sets the shim of TokenProvider.get_TokenScope()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.TokenScopeSetTokenScope">
            <summary>Sets the shim of TokenProvider.set_TokenScope(TokenScope value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.ValidateActionString">
            <summary>Sets the shim of TokenProvider.ValidateAction(String action)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProvider.ValidateTimeoutTimeSpan">
            <summary>Sets the shim of TokenProvider.ValidateTimeout(TimeSpan timeout)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTokenProviderException">
            <summary>Shim type of Microsoft.ServiceBus.TokenProviderException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.#ctor(Microsoft.ServiceBus.TokenProviderException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTokenProviderException.ConstructorStringException">
            <summary>Sets the shim of TokenProviderException.TokenProviderException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior">
            <summary>Shim type of Microsoft.ServiceBus.TransportClientEndpointBehavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.#ctor(Microsoft.ServiceBus.TransportClientEndpointBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint endpoint)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.TokenProviderGet">
            <summary>Sets the shim of TransportClientEndpointBehavior.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.TokenProviderSetTokenProvider">
            <summary>Sets the shim of TransportClientEndpointBehavior.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.AllInstances.UpdateCredentialsTokenProvider">
            <summary>Sets the shim of TransportClientEndpointBehavior.UpdateCredentials(TokenProvider newTokenProvider)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.Bind(System.ServiceModel.Description.IEndpointBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.Constructor">
            <summary>Sets the shim of TransportClientEndpointBehavior.TransportClientEndpointBehavior()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.ConstructorTokenProvider">
            <summary>Sets the shim of TransportClientEndpointBehavior.TransportClientEndpointBehavior(TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.SystemServiceModelDescriptionIEndpointBehaviorAddBindingParametersServiceEndpointBindingParameterCollection">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.SystemServiceModelDescriptionIEndpointBehaviorApplyClientBehaviorServiceEndpointClientRuntime">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.SystemServiceModelDescriptionIEndpointBehaviorApplyDispatchBehaviorServiceEndpointEndpointDispatcher">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.SystemServiceModelDescriptionIEndpointBehaviorValidateServiceEndpoint">
            <summary>Sets the shim of TransportClientEndpointBehavior.System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint endpoint)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.TokenProviderGet">
            <summary>Sets the shim of TransportClientEndpointBehavior.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.TokenProviderSetTokenProvider">
            <summary>Sets the shim of TransportClientEndpointBehavior.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimTransportClientEndpointBehavior.UpdateCredentialsTokenProvider">
            <summary>Sets the shim of TransportClientEndpointBehavior.UpdateCredentials(TokenProvider newTokenProvider)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.WS2007HttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.WS2007HttpRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of WS2007HttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of WS2007HttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of WS2007HttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.AreBindingsMatchingSecurityBindingElementSecurityBindingElement">
            <summary>Sets the shim of WS2007HttpRelayBinding.AreBindingsMatching(SecurityBindingElement sbe1, SecurityBindingElement sbe2)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.Constructor">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeBoolean">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType, Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.ConstructorString">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding(String configName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.ConstructorWSHttpRelaySecurityBoolean">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding(WSHttpRelaySecurity security, Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.CreateMessageSecurity">
            <summary>Sets the shim of WS2007HttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.StaticConstructor">
            <summary>Sets the shim of WS2007HttpRelayBinding.WS2007HttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWS2007HttpRelayBinding.TryCreateSecurityBindingElementRelayClientAuthenticationTypeTransportBindingElementReliableSessionBindingElementBindingOut">
            <summary>Sets the shim of WS2007HttpRelayBinding.TryCreate(SecurityBindingElement sbe, RelayClientAuthenticationType relayClientAuthenticationType, TransportBindingElement transport, ReliableSessionBindingElement rsbe, Binding&amp; binding)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.WSHttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.#ctor(Microsoft.ServiceBus.WSHttpRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of WSHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.CreateMessageSecurity">
            <summary>Sets the shim of WSHttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.GetTransport">
            <summary>Sets the shim of WSHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllInstances.SecurityGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllowCookiesGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.AllowCookiesSetBoolean">
            <summary>Sets the shim of WSHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.Constructor">
            <summary>Sets the shim of WSHttpRelayBinding.WSHttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeBoolean">
            <summary>Sets the shim of WSHttpRelayBinding.WSHttpRelayBinding(EndToEndSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType, Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.ConstructorWSHttpRelaySecurityBoolean">
            <summary>Sets the shim of WSHttpRelayBinding.WSHttpRelayBinding(WSHttpRelaySecurity security, Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.CreateMessageSecurity">
            <summary>Sets the shim of WSHttpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.GetTransport">
            <summary>Sets the shim of WSHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.SecurityGet">
            <summary>Sets the shim of WSHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.StaticConstructor">
            <summary>Sets the shim of WSHttpRelayBinding.WSHttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBinding.TryGetAllowCookiesFromTransportTransportBindingElementBooleanOut">
            <summary>Sets the shim of WSHttpRelayBinding.TryGetAllowCookiesFromTransport(TransportBindingElement transport, Boolean&amp; allowCookies)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase">
            <summary>Shim type of Microsoft.ServiceBus.WSHttpRelayBindingBase</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.#ctor(Microsoft.ServiceBus.WSHttpRelayBindingBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.CreateBindingElements">
            <summary>Sets the shim of WSHttpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.EnvelopeVersionGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.HttpTransportGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HttpTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.HttpsTransportGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HttpsTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.Initialize">
            <summary>Sets the shim of WSHttpRelayBindingBase.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.InitializeFromHttpRelayTransportBindingElementMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of WSHttpRelayBindingBase.InitializeFrom(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.IsBindingElementsMatchHttpRelayTransportBindingElementMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of WSHttpRelayBindingBase.IsBindingElementsMatch(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.IsDynamicGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MessageEncodingGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of WSHttpRelayBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ReliableSessionBindingElementGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReliableSessionBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.ReliableSessionGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.SchemeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.Constructor">
            <summary>Sets the shim of WSHttpRelayBindingBase.WSHttpRelayBindingBase()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ConstructorBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBase.WSHttpRelayBindingBase(Boolean reliableSessionEnabled)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.CreateBindingElements">
            <summary>Sets the shim of WSHttpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.EnvelopeVersionGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.HostNameComparisonModeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.HttpTransportGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HttpTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.HttpsTransportGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_HttpsTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.Initialize">
            <summary>Sets the shim of WSHttpRelayBindingBase.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.InitializeFromHttpRelayTransportBindingElementMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of WSHttpRelayBindingBase.InitializeFrom(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.IsBindingElementMatchBindingElementBindingElement">
            <summary>Sets the shim of WSHttpRelayBindingBase.IsBindingElementMatch(BindingElement elementThis, BindingElement elementThat)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.IsBindingElementsMatchHttpRelayTransportBindingElementMessageEncodingBindingElementReliableSessionBindingElement">
            <summary>Sets the shim of WSHttpRelayBindingBase.IsBindingElementsMatch(HttpRelayTransportBindingElement transport, MessageEncodingBindingElement encoding, ReliableSessionBindingElement session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.IsDynamicGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.IsDynamicSetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MessageEncodingGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_MessageEncoding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.MessageEncodingSetWSMessageEncoding">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_MessageEncoding(WSMessageEncoding value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ProxyAddressGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ProxyAddressSetUri">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ReaderQuotasGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of WSHttpRelayBindingBase.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ReliableSessionBindingElementGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReliableSessionBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.ReliableSessionGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_ReliableSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.SchemeGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.TryCreateBindingElementCollectionBindingOut">
            <summary>Sets the shim of WSHttpRelayBindingBase.TryCreate(BindingElementCollection elements, Binding&amp; binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.UseDefaultWebProxyGet">
            <summary>Sets the shim of WSHttpRelayBindingBase.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelayBindingBase.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WSHttpRelayBindingBase.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity">
            <summary>Shim type of Microsoft.ServiceBus.WSHttpRelaySecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.#ctor(Microsoft.ServiceBus.WSHttpRelaySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.ApplyTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of WSHttpRelaySecurity.ApplyTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.CreateMessageSecurityBooleanMessageSecurityVersion">
            <summary>Sets the shim of WSHttpRelaySecurity.CreateMessageSecurity(Boolean isReliableSessionEnabled, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.MessageGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.ModeGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of WSHttpRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WSHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.AllInstances.TransportGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.ApplyTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of WSHttpRelaySecurity.ApplyTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.ApplyTransportSecurityHttpsRelayTransportBindingElementHttpRelayTransportSecurity">
            <summary>Sets the shim of WSHttpRelaySecurity.ApplyTransportSecurity(HttpsRelayTransportBindingElement transport, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.Constructor">
            <summary>Sets the shim of WSHttpRelaySecurity.WSHttpRelaySecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.ConstructorEndToEndSecurityModeRelayClientAuthenticationTypeHttpRelayTransportSecurityNonDualMessageSecurityOverRelayHttp">
            <summary>Sets the shim of WSHttpRelaySecurity.WSHttpRelaySecurity(EndToEndSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, HttpRelayTransportSecurity transportSecurity, NonDualMessageSecurityOverRelayHttp messageSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.CreateMessageSecurityBooleanMessageSecurityVersion">
            <summary>Sets the shim of WSHttpRelaySecurity.CreateMessageSecurity(Boolean isReliableSessionEnabled, MessageSecurityVersion version)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.GetDefaultHttpTransportSecurity">
            <summary>Sets the shim of WSHttpRelaySecurity.GetDefaultHttpTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.MessageGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.ModeGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.ModeSetEndToEndSecurityMode">
            <summary>Sets the shim of WSHttpRelaySecurity.set_Mode(EndToEndSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WSHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWSHttpRelaySecurity.TransportGet">
            <summary>Sets the shim of WSHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding">
            <summary>Shim type of Microsoft.ServiceBus.WebHttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.#ctor(Microsoft.ServiceBus.WebHttpRelayBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.AllowCookiesGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.AllowCookiesSetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of WebHttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ContentTypeMapperGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ContentTypeMapper()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ContentTypeMapperSetWebContentTypeMapper">
            <summary>Sets the shim of WebHttpRelayBinding.set_ContentTypeMapper(WebContentTypeMapper value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of WebHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.EnvelopeVersionGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.GetTransport">
            <summary>Sets the shim of WebHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.HostNameComparisonModeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of WebHttpRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.Initialize">
            <summary>Sets the shim of WebHttpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.IsDynamicGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxBufferSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxBufferSizeSetInt32">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ProxyAddressGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ProxyAddressSetUri">
            <summary>Sets the shim of WebHttpRelayBinding.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ReaderQuotasGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of WebHttpRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.SchemeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.SecurityGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.TransferModeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.TransferModeSetTransferMode">
            <summary>Sets the shim of WebHttpRelayBinding.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.UseDefaultWebProxyGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllInstances.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllowCookiesGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_AllowCookies()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.AllowCookiesSetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_AllowCookies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ApplyConfigurationString">
            <summary>Sets the shim of WebHttpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.Constructor">
            <summary>Sets the shim of WebHttpRelayBinding.WebHttpRelayBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ConstructorEndToEndWebHttpSecurityModeRelayClientAuthenticationType">
            <summary>Sets the shim of WebHttpRelayBinding.WebHttpRelayBinding(EndToEndWebHttpSecurityMode securityMode, RelayClientAuthenticationType relayClientAuthenticationType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ConstructorString">
            <summary>Sets the shim of WebHttpRelayBinding.WebHttpRelayBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ContentTypeMapperGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ContentTypeMapper()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ContentTypeMapperSetWebContentTypeMapper">
            <summary>Sets the shim of WebHttpRelayBinding.set_ContentTypeMapper(WebContentTypeMapper value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.CreateBindingElements">
            <summary>Sets the shim of WebHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.EnvelopeVersionGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_EnvelopeVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.GetTransport">
            <summary>Sets the shim of WebHttpRelayBinding.GetTransport()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.HostNameComparisonModeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_HostNameComparisonMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.HostNameComparisonModeSetHostNameComparisonMode">
            <summary>Sets the shim of WebHttpRelayBinding.set_HostNameComparisonMode(HostNameComparisonMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.Initialize">
            <summary>Sets the shim of WebHttpRelayBinding.Initialize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.IsDynamicGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.IsDynamicSetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxBufferPoolSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxBufferSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxBufferSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxBufferSizeSetInt32">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxReceivedMessageSizeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the shim of WebHttpRelayBinding.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ProxyAddressGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ProxyAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ProxyAddressSetUri">
            <summary>Sets the shim of WebHttpRelayBinding.set_ProxyAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ReaderQuotasGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_ReaderQuotas()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of WebHttpRelayBinding.set_ReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.ReceiveSynchronouslySystemServiceModelChannelsIBindingRuntimePreferencesget">
            <summary>Sets the shim of WebHttpRelayBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.get_ReceiveSynchronously()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.SchemeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.SecurityGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_Security()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.TransferModeGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_TransferMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.TransferModeSetTransferMode">
            <summary>Sets the shim of WebHttpRelayBinding.set_TransferMode(TransferMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.UseDefaultWebProxyGet">
            <summary>Sets the shim of WebHttpRelayBinding.get_UseDefaultWebProxy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelayBinding.UseDefaultWebProxySetBoolean">
            <summary>Sets the shim of WebHttpRelayBinding.set_UseDefaultWebProxy(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity">
            <summary>Shim type of Microsoft.ServiceBus.WebHttpRelaySecurity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.#ctor(Microsoft.ServiceBus.WebHttpRelaySecurity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.EnableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.EnableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.EnableTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.EnableTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.ModeGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.ModeSetEndToEndWebHttpSecurityMode">
            <summary>Sets the shim of WebHttpRelaySecurity.set_Mode(EndToEndWebHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WebHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.AllInstances.TransportGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.Constructor">
            <summary>Sets the shim of WebHttpRelaySecurity.WebHttpRelaySecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.ConstructorEndToEndWebHttpSecurityModeRelayClientAuthenticationTypeHttpRelayTransportSecurity">
            <summary>Sets the shim of WebHttpRelaySecurity.WebHttpRelaySecurity(EndToEndWebHttpSecurityMode mode, RelayClientAuthenticationType relayClientAuthenticationType, HttpRelayTransportSecurity transportSecurity)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.DisableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.DisableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.EnableTransportAuthenticationHttpRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.EnableTransportAuthentication(HttpRelayTransportBindingElement http)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.EnableTransportSecurityHttpsRelayTransportBindingElement">
            <summary>Sets the shim of WebHttpRelaySecurity.EnableTransportSecurity(HttpsRelayTransportBindingElement https)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.ModeGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.ModeSetEndToEndWebHttpSecurityMode">
            <summary>Sets the shim of WebHttpRelaySecurity.set_Mode(EndToEndWebHttpSecurityMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.RelayClientAuthenticationTypeGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_RelayClientAuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.RelayClientAuthenticationTypeSetRelayClientAuthenticationType">
            <summary>Sets the shim of WebHttpRelaySecurity.set_RelayClientAuthenticationType(RelayClientAuthenticationType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWebHttpRelaySecurity.TransportGet">
            <summary>Sets the shim of WebHttpRelaySecurity.get_Transport()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider">
            <summary>Shim type of Microsoft.ServiceBus.WindowsTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.#ctor(Microsoft.ServiceBus.WindowsTokenProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.BuildRequestTokenString">
            <summary>Sets the shim of WindowsTokenProvider.BuildRequestToken(String scope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.NormalizeAppliesToString">
            <summary>Sets the shim of WindowsTokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of WindowsTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of WindowsTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of WindowsTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.AllInstances.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of WindowsTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.BuildRequestTokenString">
            <summary>Sets the shim of WindowsTokenProvider.BuildRequestToken(String scope)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.BuildStsUriUri">
            <summary>Sets the shim of WindowsTokenProvider.BuildStsUri(Uri baseAddress)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.ConstructorIEnumerableOfUri">
            <summary>Sets the shim of WindowsTokenProvider.WindowsTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.ConstructorIEnumerableOfUriNetworkCredential">
            <summary>Sets the shim of WindowsTokenProvider.WindowsTokenProvider(IEnumerable`1&lt;Uri&gt; stsUris, NetworkCredential credential)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.NormalizeAppliesToString">
            <summary>Sets the shim of WindowsTokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of WindowsTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of WindowsTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of WindowsTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.ShimWindowsTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the shim of WindowsTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding">
            <summary>Stub type of Microsoft.ServiceBus.BasicHttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CreateBindingElements">
            <summary>Sets the stub of BasicHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.CreateBindingElements01">
            <summary>Sets the stub of BasicHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.InitializeStub">
            <summary>Initializes a new instance of type StubBasicHttpRelayBinding</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.Scheme">
            <summary>Sets the stub of BasicHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubBasicHttpRelayBinding.SchemeGet">
            <summary>Sets the stub of BasicHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior">
            <summary>Stub type of Microsoft.ServiceBus.ConnectionStatusBehavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionStatusBehavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectionStatusBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubConnectivitySettings">
            <summary>Stub type of Microsoft.ServiceBus.ConnectivitySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.InitializeStub">
            <summary>Initializes a new instance of type StubConnectivitySettings</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.IsReadOnly">
            <summary>Sets the stub of ConnectivitySettings.get_IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubConnectivitySettings.IsReadOnlyGet">
            <summary>Sets the stub of ConnectivitySettings.get_IsReadOnly()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.HttpRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.AttachBackingFieldToManualAddressing">
            <summary>Attaches delegates to emulate StubHttpRelayTransportBindingElement.ManualAddressing as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.AttachBackingFieldToMaxBufferPoolSize">
            <summary>Attaches delegates to emulate StubHttpRelayTransportBindingElement.MaxBufferPoolSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.AttachBackingFieldToMaxReceivedMessageSize">
            <summary>Attaches delegates to emulate StubHttpRelayTransportBindingElement.MaxReceivedMessageSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.Clone">
            <summary>Sets the stub of HttpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.Clone01">
            <summary>Sets the stub of HttpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.CreateInnerChannelBindingElement01">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the stub of HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRelayTransportBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.ManualAddressing">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.ManualAddressingGet">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.ManualAddressingSetBoolean">
            <summary>Sets the stub of TransportBindingElement.set_ManualAddressing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxBufferPoolSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxReceivedMessageSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.Scheme">
            <summary>Sets the stub of HttpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpRelayTransportBindingElement.SchemeGet">
            <summary>Sets the stub of HttpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.HttpsRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.AttachBackingFieldToManualAddressing">
            <summary>Attaches delegates to emulate StubHttpsRelayTransportBindingElement.ManualAddressing as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.AttachBackingFieldToMaxBufferPoolSize">
            <summary>Attaches delegates to emulate StubHttpsRelayTransportBindingElement.MaxBufferPoolSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.AttachBackingFieldToMaxReceivedMessageSize">
            <summary>Attaches delegates to emulate StubHttpsRelayTransportBindingElement.MaxReceivedMessageSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpRelayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.Clone">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.Clone01">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.CreateInnerChannelBindingElement01">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.InitializeInnerChannelBindingElementHttpTransportBindingElement">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(HttpTransportBindingElement httpTransportElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubHttpsRelayTransportBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.ManualAddressing">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.ManualAddressingGet">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.ManualAddressingSetBoolean">
            <summary>Sets the stub of TransportBindingElement.set_ManualAddressing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxBufferPoolSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxReceivedMessageSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.Scheme">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubHttpsRelayTransportBindingElement.SchemeGet">
            <summary>Sets the stub of HttpsRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs">
            <summary>Stub type of Microsoft.ServiceBus.HybridConnectionStateChangedArgs</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs.InitializeStub">
            <summary>Initializes a new instance of type StubHybridConnectionStateChangedArgs</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubHybridConnectionStateChangedArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubIConnectionStatus">
            <summary>Stub type of Microsoft.ServiceBus.IConnectionStatus</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubIConnectionStatus.#ctor">
            <summary>Initializes a new instance of type StubIConnectionStatus</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubIConnectionStatus.Microsoft#ServiceBus#IConnectionStatus#IsOnline">
            <summary>Sets the stub of IConnectionStatus.get_IsOnline()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubIConnectionStatus.IsOnlineGet">
            <summary>Sets the stub of IConnectionStatus.get_IsOnline()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubIConnectionStatus.Microsoft#ServiceBus#IConnectionStatus#LastError">
            <summary>Sets the stub of IConnectionStatus.get_LastError()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubIConnectionStatus.LastErrorGet">
            <summary>Sets the stub of IConnectionStatus.get_LastError()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubIHybridConnectionStatus">
            <summary>Stub type of Microsoft.ServiceBus.IHybridConnectionStatus</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubIHybridConnectionStatus.#ctor">
            <summary>Initializes a new instance of type StubIHybridConnectionStatus</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubIHybridConnectionStatus.Microsoft#ServiceBus#IHybridConnectionStatus#ConnectionState">
            <summary>Sets the stub of IHybridConnectionStatus.get_ConnectionState()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubIHybridConnectionStatus.ConnectionStateGet">
            <summary>Sets the stub of IHybridConnectionStatus.get_ConnectionState()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubInvalidRequestException">
            <summary>Stub type of Microsoft.ServiceBus.InvalidRequestException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidRequestException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidRequestException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidRequestException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubInvalidRequestException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding">
            <summary>Stub type of Microsoft.ServiceBus.NetEventRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.ApplyConfiguration(System.String)">
            <summary>Sets the stub of NetEventRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.ApplyConfigurationString">
            <summary>Sets the stub of NetEventRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CreateBindingElements">
            <summary>Sets the stub of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.CreateBindingElements01">
            <summary>Sets the stub of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.InitializeStub">
            <summary>Initializes a new instance of type StubNetEventRelayBinding</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.Scheme">
            <summary>Sets the stub of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetEventRelayBinding.SchemeGet">
            <summary>Sets the stub of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding">
            <summary>Stub type of Microsoft.ServiceBus.NetOnewayRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayConnectionMode,Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.ApplyConfiguration(System.String)">
            <summary>Sets the stub of NetOnewayRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.ApplyConfigurationString">
            <summary>Sets the stub of NetOnewayRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CreateBindingElements">
            <summary>Sets the stub of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.CreateBindingElements01">
            <summary>Sets the stub of NetOnewayRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.InitializeStub">
            <summary>Initializes a new instance of type StubNetOnewayRelayBinding</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.Scheme">
            <summary>Sets the stub of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetOnewayRelayBinding.SchemeGet">
            <summary>Sets the stub of NetOnewayRelayBinding.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding">
            <summary>Stub type of Microsoft.ServiceBus.NetTcpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.ApplyConfiguration(System.String)">
            <summary>Sets the stub of NetTcpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.ApplyConfigurationString">
            <summary>Sets the stub of NetTcpRelayBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CreateBindingElements">
            <summary>Sets the stub of NetTcpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CreateBindingElements01">
            <summary>Sets the stub of NetTcpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CreateMessageSecurity">
            <summary>Sets the stub of NetTcpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.CreateMessageSecurity01">
            <summary>Sets the stub of NetTcpRelayBinding.CreateMessageSecurity()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.InitializeStub">
            <summary>Initializes a new instance of type StubNetTcpRelayBinding</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.Scheme">
            <summary>Sets the stub of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBinding.SchemeGet">
            <summary>Sets the stub of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase">
            <summary>Stub type of Microsoft.ServiceBus.NetTcpRelayBindingBase</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.ApplyConfiguration(System.String)">
            <summary>Sets the stub of NetTcpRelayBindingBase.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.ApplyConfigurationString">
            <summary>Sets the stub of NetTcpRelayBindingBase.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CreateBindingElements">
            <summary>Sets the stub of NetTcpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CreateBindingElements01">
            <summary>Sets the stub of NetTcpRelayBindingBase.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CreateMessageSecurity">
            <summary>Sets the stub of NetTcpRelayBindingBase.CreateMessageSecurity()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.CreateMessageSecurity01">
            <summary>Sets the stub of NetTcpRelayBindingBase.CreateMessageSecurity()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.InitializeStub">
            <summary>Initializes a new instance of type StubNetTcpRelayBindingBase</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.Scheme">
            <summary>Sets the stub of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubNetTcpRelayBindingBase.SchemeGet">
            <summary>Sets the stub of NetTcpRelayBindingBase.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException">
            <summary>Stub type of Microsoft.ServiceBus.RelayNotFoundException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubRelayNotFoundException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubRelayNotFoundException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type StubRelayNotFoundException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayNotFoundException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.RelayedOnewayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType,Microsoft.ServiceBus.RelayedOnewayConnectionMode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.AttachBackingFieldToManualAddressing">
            <summary>Attaches delegates to emulate StubRelayedOnewayTransportBindingElement.ManualAddressing as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.AttachBackingFieldToMaxBufferPoolSize">
            <summary>Attaches delegates to emulate StubRelayedOnewayTransportBindingElement.MaxBufferPoolSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.AttachBackingFieldToMaxReceivedMessageSize">
            <summary>Attaches delegates to emulate StubRelayedOnewayTransportBindingElement.MaxReceivedMessageSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.Clone">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.Clone01">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubRelayedOnewayTransportBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.ManualAddressing">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.ManualAddressingGet">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.ManualAddressingSetBoolean">
            <summary>Sets the stub of TransportBindingElement.set_ManualAddressing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxBufferPoolSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxReceivedMessageSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.Scheme">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubRelayedOnewayTransportBindingElement.SchemeGet">
            <summary>Sets the stub of RelayedOnewayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubServerErrorException">
            <summary>Stub type of Microsoft.ServiceBus.ServerErrorException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubServerErrorException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubServerErrorException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.InitializeStub">
            <summary>Initializes a new instance of type StubServerErrorException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServerErrorException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServerErrorException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServerErrorException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder">
            <summary>Stub type of Microsoft.ServiceBus.ServiceBusConnectionStringBuilder</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubServiceBusConnectionStringBuilder</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.ToString">
            <summary>Sets the stub of ServiceBusConnectionStringBuilder.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubServiceBusConnectionStringBuilder.ToString01">
            <summary>Sets the stub of ServiceBusConnectionStringBuilder.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData">
            <summary>Stub type of Microsoft.ServiceBus.ServiceBusErrorData</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData.InitializeStub">
            <summary>Initializes a new instance of type StubServiceBusErrorData</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceBusErrorData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings">
            <summary>Stub type of Microsoft.ServiceBus.ServiceRegistrySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.#ctor(Microsoft.ServiceBus.DiscoveryType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.InitializeStub">
            <summary>Initializes a new instance of type StubServiceRegistrySettings</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubServiceRegistrySettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken">
            <summary>Stub type of Microsoft.ServiceBus.SharedAccessSignatureToken</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.#ctor(System.String,System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.#ctor(System.String,System.DateTime,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.AudienceFieldName">
            <summary>Sets the stub of SharedAccessSignatureToken.get_AudienceFieldName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.AudienceFieldNameGet">
            <summary>Sets the stub of SharedAccessSignatureToken.get_AudienceFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ExpiresOnFieldName">
            <summary>Sets the stub of SharedAccessSignatureToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ExpiresOnFieldNameGet">
            <summary>Sets the stub of SharedAccessSignatureToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.Id">
            <summary>Sets the stub of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.IdGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.InitializeStub">
            <summary>Initializes a new instance of type StubSharedAccessSignatureToken</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.KeyValueSeparator">
            <summary>Sets the stub of SharedAccessSignatureToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.KeyValueSeparatorGet">
            <summary>Sets the stub of SharedAccessSignatureToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.PairSeparator">
            <summary>Sets the stub of SharedAccessSignatureToken.get_PairSeparator()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.PairSeparatorGet">
            <summary>Sets the stub of SharedAccessSignatureToken.get_PairSeparator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.SecurityKeys">
            <summary>Sets the stub of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.SecurityKeysGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ValidFrom">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ValidFromGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ValidTo">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureToken.ValidToGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider">
            <summary>Stub type of Microsoft.ServiceBus.SharedAccessSignatureTokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.#ctor(System.String,System.String,System.Func{System.String,System.Byte[]},System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.BuildKey(System.String,System.String)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.BuildKey(String appliesTo, String action)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.BuildKeyStringString">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.BuildKey(String appliesTo, String action)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.BuildSignature(System.String)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.BuildSignatureString">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.BuildSignature(String targetUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.InitializeStub">
            <summary>Initializes a new instance of type StubSharedAccessSignatureTokenProvider</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.NormalizeAppliesTo(System.String)">
            <summary>Sets the stub of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.NormalizeAppliesToString">
            <summary>Sets the stub of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.StripQueryParameters">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSharedAccessSignatureTokenProvider.StripQueryParametersGet">
            <summary>Sets the stub of SharedAccessSignatureTokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken">
            <summary>Stub type of Microsoft.ServiceBus.SimpleWebSecurityToken</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.#ctor(System.String,System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.#ctor(System.String,System.DateTime,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.AudienceFieldName">
            <summary>Sets the stub of SimpleWebSecurityToken.get_AudienceFieldName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.AudienceFieldNameGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_AudienceFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.CanCreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.CanCreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of CanCreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.CreateKeyIdentifierClause``1">
            <summary>Sets the stub of SecurityToken.CreateKeyIdentifierClause()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.CreateKeyIdentifierClauseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of CreateKeyIdentifierClause()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ExpiresOnFieldName">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ExpiresOnFieldNameGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ExpiresOnFieldName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.Id">
            <summary>Sets the stub of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.IdGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_Id()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWebSecurityToken</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.KeyValueSeparator">
            <summary>Sets the stub of SimpleWebSecurityToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.KeyValueSeparatorGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_KeyValueSeparator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.MatchesKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.PairSeparator">
            <summary>Sets the stub of SimpleWebSecurityToken.get_PairSeparator()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.PairSeparatorGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_PairSeparator()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ResolveKeyIdentifierClauseSecurityKeyIdentifierClause">
            <summary>Sets the stub of SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.SecurityKeys">
            <summary>Sets the stub of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.SecurityKeysGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_SecurityKeys()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ValidFrom">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ValidFromGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidFrom()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ValidTo">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityToken.ValidToGet">
            <summary>Sets the stub of SimpleWebSecurityToken.get_ValidTo()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer">
            <summary>Stub type of Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenSerializer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCoreXmlReader">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanReadTokenCoreXmlReader">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanReadTokenCore(XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCoreSecurityKeyIdentifierClause">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCoreSecurityKeyIdentifier">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken token)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.CanWriteTokenCoreSecurityToken">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.CanWriteTokenCore(SecurityToken token)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWebSecurityTokenSerializer</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCoreXmlReader">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadKeyIdentifierCoreXmlReader">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.ReadTokenCoreXmlReaderSecurityTokenResolver">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.ReadTokenCore(XmlReader reader, SecurityTokenResolver tokenResolver)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCoreXmlWriterSecurityKeyIdentifierClause">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(XmlWriter writer, SecurityKeyIdentifierClause keyIdentifierClause)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteKeyIdentifierCoreXmlWriterSecurityKeyIdentifier">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(XmlWriter writer, SecurityKeyIdentifier keyIdentifier)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubSimpleWebSecurityTokenSerializer.WriteTokenCoreXmlWriterSecurityToken">
            <summary>Sets the stub of SimpleWebSecurityTokenSerializer.WriteTokenCore(XmlWriter writer, SecurityToken token)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of BindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of BindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of BindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of BindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.Clone">
            <summary>Sets the stub of TcpClientTransportTokenAssertionProviderBindingElement.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.Clone01">
            <summary>Sets the stub of TcpClientTransportTokenAssertionProviderBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of TcpClientTransportTokenAssertionProviderBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubTcpClientTransportTokenAssertionProviderBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpClientTransportTokenAssertionProviderBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement">
            <summary>Stub type of Microsoft.ServiceBus.TcpRelayTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.AttachBackingFieldToManualAddressing">
            <summary>Attaches delegates to emulate StubTcpRelayTransportBindingElement.ManualAddressing as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.AttachBackingFieldToMaxBufferPoolSize">
            <summary>Attaches delegates to emulate StubTcpRelayTransportBindingElement.MaxBufferPoolSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.AttachBackingFieldToMaxReceivedMessageSize">
            <summary>Attaches delegates to emulate StubTcpRelayTransportBindingElement.MaxReceivedMessageSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of TcpRelayTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of TcpRelayTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of ConnectionOrientedTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.Clone">
            <summary>Sets the stub of TcpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.Clone01">
            <summary>Sets the stub of TcpRelayTransportBindingElement.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>Sets the stub of TcpRelayTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets stubs of GetProperty(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.InitializeStub">
            <summary>Initializes a new instance of type StubTcpRelayTransportBindingElement</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.ManualAddressing">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.ManualAddressingGet">
            <summary>Sets the stub of TransportBindingElement.get_ManualAddressing()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.ManualAddressingSetBoolean">
            <summary>Sets the stub of TransportBindingElement.set_ManualAddressing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxBufferPoolSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxBufferPoolSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxBufferPoolSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxReceivedMessageSize">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxReceivedMessageSizeGet">
            <summary>Sets the stub of TransportBindingElement.get_MaxReceivedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.MaxReceivedMessageSizeSetInt64">
            <summary>Sets the stub of TransportBindingElement.set_MaxReceivedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.Scheme">
            <summary>Sets the stub of TcpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTcpRelayTransportBindingElement.SchemeGet">
            <summary>Sets the stub of TcpRelayTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubTokenProvider">
            <summary>Stub type of Microsoft.ServiceBus.TokenProvider</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.BuildKey(System.String,System.String)">
            <summary>Sets the stub of TokenProvider.BuildKey(String appliesTo, String action)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.BuildKeyStringString">
            <summary>Sets the stub of TokenProvider.BuildKey(String appliesTo, String action)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.InitializeStub">
            <summary>Initializes a new instance of type StubTokenProvider</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.NormalizeAppliesTo(System.String)">
            <summary>Sets the stub of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.NormalizeAppliesToString">
            <summary>Sets the stub of TokenProvider.NormalizeAppliesTo(String appliesTo)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of TokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnBeginGetTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of TokenProvider.OnBeginGetToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of TokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnBeginGetWebTokenStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of TokenProvider.OnBeginGetWebToken(String appliesTo, String action, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
            <summary>Sets the stub of TokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnEndGetTokenIAsyncResultDateTimeOut">
            <summary>Sets the stub of TokenProvider.OnEndGetToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
            <summary>Sets the stub of TokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.OnEndGetWebTokenIAsyncResultDateTimeOut">
            <summary>Sets the stub of TokenProvider.OnEndGetWebToken(IAsyncResult result, DateTime&amp; cacheUntil)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProvider.StripQueryParameters">
            <summary>Sets the stub of TokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProvider.StripQueryParametersGet">
            <summary>Sets the stub of TokenProvider.get_StripQueryParameters()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubTokenProviderException">
            <summary>Stub type of Microsoft.ServiceBus.TokenProviderException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTokenProviderException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTokenProviderException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.InitializeStub">
            <summary>Initializes a new instance of type StubTokenProviderException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubTokenProviderException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubTokenProviderException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubTokenProviderException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding">
            <summary>Stub type of Microsoft.ServiceBus.WebHttpRelayBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndWebHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets stubs of BuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriStringBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeBindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriStringListenUriModeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, ListenUriMode listenUriMode, Object[] parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.BuildChannelListenerOf1UriStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Uri,System.String,System.Object[],System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets stubs of BuildChannelListener(Uri listenUriBaseAddress, String listenUriRelativeAddress, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CanBuildChannelFactoryOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelFactory(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Sets the stub of Binding.CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CanBuildChannelListenerOf1BindingParameterCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingParameterCollection,System.Boolean})">
            <summary>Sets stubs of CanBuildChannelListener(BindingParameterCollection parameters)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CreateBindingElements">
            <summary>Sets the stub of WebHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.CreateBindingElements01">
            <summary>Sets the stub of WebHttpRelayBinding.CreateBindingElements()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.InitializeStub">
            <summary>Initializes a new instance of type StubWebHttpRelayBinding</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.Scheme">
            <summary>Sets the stub of WebHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Fakes.StubWebHttpRelayBinding.SchemeGet">
            <summary>Sets the stub of WebHttpRelayBinding.get_Scheme()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail">
            <summary>Shim type of Microsoft.ServiceBus.Management.ConnectionDetail</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.#ctor(Microsoft.ServiceBus.Management.ConnectionDetail)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.AuthorizationTypeGet">
            <summary>Sets the shim of ConnectionDetail.get_AuthorizationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.AuthorizationTypeSetString">
            <summary>Sets the shim of ConnectionDetail.set_AuthorizationType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of ConnectionDetail.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionDetail.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.KeyNameGet">
            <summary>Sets the shim of ConnectionDetail.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.KeyNameSetString">
            <summary>Sets the shim of ConnectionDetail.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.RightsGet">
            <summary>Sets the shim of ConnectionDetail.get_Rights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.RightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of ConnectionDetail.set_Rights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.SecondaryConnectionStringGet">
            <summary>Sets the shim of ConnectionDetail.get_SecondaryConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AllInstances.SecondaryConnectionStringSetString">
            <summary>Sets the shim of ConnectionDetail.set_SecondaryConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AuthorizationTypeGet">
            <summary>Sets the shim of ConnectionDetail.get_AuthorizationType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.AuthorizationTypeSetString">
            <summary>Sets the shim of ConnectionDetail.set_AuthorizationType(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.ConnectionStringGet">
            <summary>Sets the shim of ConnectionDetail.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionDetail.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.Constructor">
            <summary>Sets the shim of ConnectionDetail.ConnectionDetail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.KeyNameGet">
            <summary>Sets the shim of ConnectionDetail.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.KeyNameSetString">
            <summary>Sets the shim of ConnectionDetail.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.RightsGet">
            <summary>Sets the shim of ConnectionDetail.get_Rights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.RightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of ConnectionDetail.set_Rights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.SecondaryConnectionStringGet">
            <summary>Sets the shim of ConnectionDetail.get_SecondaryConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimConnectionDetail.SecondaryConnectionStringSetString">
            <summary>Sets the shim of ConnectionDetail.set_SecondaryConnectionString(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo">
            <summary>Shim type of Microsoft.ServiceBus.Management.FarmCertificateInfo</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.#ctor(Microsoft.ServiceBus.Management.FarmCertificateInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateKeyNameGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateKeyNameSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateNameGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateNameSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateTypeGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.CertificateTypeSetCertificateType">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateType(CertificateType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.DownloadableGet">
            <summary>Sets the shim of FarmCertificateInfo.get_Downloadable()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.DownloadableSetBoolean">
            <summary>Sets the shim of FarmCertificateInfo.set_Downloadable(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.ExpirationDateGet">
            <summary>Sets the shim of FarmCertificateInfo.get_ExpirationDate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.ExpirationDateSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_ExpirationDate(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.IsAutoGeneratedGet">
            <summary>Sets the shim of FarmCertificateInfo.get_IsAutoGenerated()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.IsAutoGeneratedSetBoolean">
            <summary>Sets the shim of FarmCertificateInfo.set_IsAutoGenerated(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.ThumbprintGet">
            <summary>Sets the shim of FarmCertificateInfo.get_Thumbprint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.AllInstances.ThumbprintSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_Thumbprint(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateKeyNameGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateKeyNameSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateNameGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateNameSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateTypeGet">
            <summary>Sets the shim of FarmCertificateInfo.get_CertificateType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.CertificateTypeSetCertificateType">
            <summary>Sets the shim of FarmCertificateInfo.set_CertificateType(CertificateType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.Constructor">
            <summary>Sets the shim of FarmCertificateInfo.FarmCertificateInfo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.DownloadableGet">
            <summary>Sets the shim of FarmCertificateInfo.get_Downloadable()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.DownloadableSetBoolean">
            <summary>Sets the shim of FarmCertificateInfo.set_Downloadable(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.ExpirationDateGet">
            <summary>Sets the shim of FarmCertificateInfo.get_ExpirationDate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.ExpirationDateSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_ExpirationDate(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.IsAutoGeneratedGet">
            <summary>Sets the shim of FarmCertificateInfo.get_IsAutoGenerated()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.IsAutoGeneratedSetBoolean">
            <summary>Sets the shim of FarmCertificateInfo.set_IsAutoGenerated(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.ThumbprintGet">
            <summary>Sets the shim of FarmCertificateInfo.get_Thumbprint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimFarmCertificateInfo.ThumbprintSetString">
            <summary>Sets the shim of FarmCertificateInfo.set_Thumbprint(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU">
            <summary>Shim type of Microsoft.ServiceBus.Management.MessagingSKU</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.#ctor(Microsoft.ServiceBus.Management.MessagingSKU)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.AllowedMessagingUnitsGet">
            <summary>Sets the shim of MessagingSKU.get_AllowedMessagingUnits()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.AllowedMessagingUnitsSetInt32Array">
            <summary>Sets the shim of MessagingSKU.set_AllowedMessagingUnits(Int32[] value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.MaxAllowedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKU.get_MaxAllowedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.MaxAllowedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKU.set_MaxAllowedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.MinAllowedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKU.get_MinAllowedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.MinAllowedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKU.set_MinAllowedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.SKUDescriptionGet">
            <summary>Sets the shim of MessagingSKU.get_SKUDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.SKUDescriptionSetString">
            <summary>Sets the shim of MessagingSKU.set_SKUDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.SKUGet">
            <summary>Sets the shim of MessagingSKU.get_SKU()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllInstances.SKUSetInt32">
            <summary>Sets the shim of MessagingSKU.set_SKU(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllowedMessagingUnitsGet">
            <summary>Sets the shim of MessagingSKU.get_AllowedMessagingUnits()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.AllowedMessagingUnitsSetInt32Array">
            <summary>Sets the shim of MessagingSKU.set_AllowedMessagingUnits(Int32[] value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.Constructor">
            <summary>Sets the shim of MessagingSKU.MessagingSKU()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.MaxAllowedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKU.get_MaxAllowedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.MaxAllowedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKU.set_MaxAllowedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.MinAllowedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKU.get_MinAllowedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.MinAllowedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKU.set_MinAllowedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.SKUDescriptionGet">
            <summary>Sets the shim of MessagingSKU.get_SKUDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.SKUDescriptionSetString">
            <summary>Sets the shim of MessagingSKU.set_SKUDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.SKUGet">
            <summary>Sets the shim of MessagingSKU.get_SKU()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKU.SKUSetInt32">
            <summary>Sets the shim of MessagingSKU.set_SKU(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan">
            <summary>Shim type of Microsoft.ServiceBus.Management.MessagingSKUPlan</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.#ctor(Microsoft.ServiceBus.Management.MessagingSKUPlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.MessagingUnitsGet">
            <summary>Sets the shim of MessagingSKUPlan.get_MessagingUnits()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.MessagingUnitsSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_MessagingUnits(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.RevisionGet">
            <summary>Sets the shim of MessagingSKUPlan.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.RevisionSetInt64">
            <summary>Sets the shim of MessagingSKUPlan.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.SKUGet">
            <summary>Sets the shim of MessagingSKUPlan.get_SKU()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.SKUSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_SKU(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.SelectedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKUPlan.get_SelectedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.SelectedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_SelectedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of MessagingSKUPlan.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.AllInstances.UpdatedAtSetDateTime">
            <summary>Sets the shim of MessagingSKUPlan.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.Constructor">
            <summary>Sets the shim of MessagingSKUPlan.MessagingSKUPlan()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.MessagingUnitsGet">
            <summary>Sets the shim of MessagingSKUPlan.get_MessagingUnits()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.MessagingUnitsSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_MessagingUnits(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.RevisionGet">
            <summary>Sets the shim of MessagingSKUPlan.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.RevisionSetInt64">
            <summary>Sets the shim of MessagingSKUPlan.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.SKUGet">
            <summary>Sets the shim of MessagingSKUPlan.get_SKU()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.SKUSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_SKU(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.SelectedEventHubUnitGet">
            <summary>Sets the shim of MessagingSKUPlan.get_SelectedEventHubUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.SelectedEventHubUnitSetInt32">
            <summary>Sets the shim of MessagingSKUPlan.set_SelectedEventHubUnit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.UpdatedAtGet">
            <summary>Sets the shim of MessagingSKUPlan.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMessagingSKUPlan.UpdatedAtSetDateTime">
            <summary>Sets the shim of MessagingSKUPlan.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetric">
            <summary>Shim type of Microsoft.ServiceBus.Management.Metric</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetric.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetric.#ctor(Microsoft.ServiceBus.Management.Metric)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Metric.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of Metric.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.MetricKeyNameGet">
            <summary>Sets the shim of Metric.get_MetricKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.MetricKeyNameSetString">
            <summary>Sets the shim of Metric.set_MetricKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.NameGet">
            <summary>Sets the shim of Metric.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.NameSetString">
            <summary>Sets the shim of Metric.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.PrimaryAggregationGet">
            <summary>Sets the shim of Metric.get_PrimaryAggregation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.PrimaryAggregationSetString">
            <summary>Sets the shim of Metric.set_PrimaryAggregation(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.RollupsGet">
            <summary>Sets the shim of Metric.get_Rollups()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.RollupsSetICollectionOfMetricRollup">
            <summary>Sets the shim of Metric.set_Rollups(ICollection`1&lt;MetricRollup&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.UnitGet">
            <summary>Sets the shim of Metric.get_Unit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.AllInstances.UnitSetString">
            <summary>Sets the shim of Metric.set_Unit(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetric.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetric.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.Constructor">
            <summary>Sets the shim of Metric.Metric()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.DisplayNameGet">
            <summary>Sets the shim of Metric.get_DisplayName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.DisplayNameSetString">
            <summary>Sets the shim of Metric.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.MetricKeyNameGet">
            <summary>Sets the shim of Metric.get_MetricKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.MetricKeyNameSetString">
            <summary>Sets the shim of Metric.set_MetricKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.NameGet">
            <summary>Sets the shim of Metric.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.NameSetString">
            <summary>Sets the shim of Metric.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.PrimaryAggregationGet">
            <summary>Sets the shim of Metric.get_PrimaryAggregation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.PrimaryAggregationSetString">
            <summary>Sets the shim of Metric.set_PrimaryAggregation(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.RollupsGet">
            <summary>Sets the shim of Metric.get_Rollups()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.RollupsSetICollectionOfMetricRollup">
            <summary>Sets the shim of Metric.set_Rollups(ICollection`1&lt;MetricRollup&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.UnitGet">
            <summary>Sets the shim of Metric.get_Unit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetric.UnitSetString">
            <summary>Sets the shim of Metric.set_Unit(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup">
            <summary>Shim type of Microsoft.ServiceBus.Management.MetricRollup</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.#ctor(Microsoft.ServiceBus.Management.MetricRollup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.RetentionGet">
            <summary>Sets the shim of MetricRollup.get_Retention()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.RetentionSetTimeSpan">
            <summary>Sets the shim of MetricRollup.set_Retention(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.TimeGrainGet">
            <summary>Sets the shim of MetricRollup.get_TimeGrain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.TimeGrainSetTimeSpan">
            <summary>Sets the shim of MetricRollup.set_TimeGrain(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.ValuesGet">
            <summary>Sets the shim of MetricRollup.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.AllInstances.ValuesSetICollectionOfMetricValue">
            <summary>Sets the shim of MetricRollup.set_Values(ICollection`1&lt;MetricValue&gt; value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.Constructor">
            <summary>Sets the shim of MetricRollup.MetricRollup()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.RetentionGet">
            <summary>Sets the shim of MetricRollup.get_Retention()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.RetentionSetTimeSpan">
            <summary>Sets the shim of MetricRollup.set_Retention(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.TimeGrainGet">
            <summary>Sets the shim of MetricRollup.get_TimeGrain()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.TimeGrainSetTimeSpan">
            <summary>Sets the shim of MetricRollup.set_TimeGrain(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.ValuesGet">
            <summary>Sets the shim of MetricRollup.get_Values()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricRollup.ValuesSetICollectionOfMetricValue">
            <summary>Sets the shim of MetricRollup.set_Values(ICollection`1&lt;MetricValue&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue">
            <summary>Shim type of Microsoft.ServiceBus.Management.MetricValue</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.#ctor(Microsoft.ServiceBus.Management.MetricValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.AverageGet">
            <summary>Sets the shim of MetricValue.get_Average()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.AverageSetSingle">
            <summary>Sets the shim of MetricValue.set_Average(Single value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.MaxGet">
            <summary>Sets the shim of MetricValue.get_Max()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.MaxSetInt64">
            <summary>Sets the shim of MetricValue.set_Max(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.MinGet">
            <summary>Sets the shim of MetricValue.get_Min()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.MinSetInt64">
            <summary>Sets the shim of MetricValue.set_Min(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.TimestampGet">
            <summary>Sets the shim of MetricValue.get_Timestamp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.TimestampSetDateTime">
            <summary>Sets the shim of MetricValue.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.TotalGet">
            <summary>Sets the shim of MetricValue.get_Total()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AllInstances.TotalSetInt64">
            <summary>Sets the shim of MetricValue.set_Total(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AverageGet">
            <summary>Sets the shim of MetricValue.get_Average()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.AverageSetSingle">
            <summary>Sets the shim of MetricValue.set_Average(Single value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.Constructor">
            <summary>Sets the shim of MetricValue.MetricValue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.MaxGet">
            <summary>Sets the shim of MetricValue.get_Max()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.MaxSetInt64">
            <summary>Sets the shim of MetricValue.set_Max(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.MinGet">
            <summary>Sets the shim of MetricValue.get_Min()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.MinSetInt64">
            <summary>Sets the shim of MetricValue.set_Min(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.TimestampGet">
            <summary>Sets the shim of MetricValue.get_Timestamp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.TimestampSetDateTime">
            <summary>Sets the shim of MetricValue.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.TotalGet">
            <summary>Sets the shim of MetricValue.get_Total()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimMetricValue.TotalSetInt64">
            <summary>Sets the shim of MetricValue.set_Total(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability">
            <summary>Shim type of Microsoft.ServiceBus.Management.NamespaceAvailability</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.#ctor(Microsoft.ServiceBus.Management.NamespaceAvailability)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.AvailableGet">
            <summary>Sets the shim of NamespaceAvailability.get_Available()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.AvailableSetBoolean">
            <summary>Sets the shim of NamespaceAvailability.set_Available(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of NamespaceAvailability.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of NamespaceAvailability.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ReasonDetailGet">
            <summary>Sets the shim of NamespaceAvailability.get_ReasonDetail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ReasonDetailSetString">
            <summary>Sets the shim of NamespaceAvailability.set_ReasonDetail(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ReasonGet">
            <summary>Sets the shim of NamespaceAvailability.get_Reason()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AllInstances.ReasonSetUnavailableReason">
            <summary>Sets the shim of NamespaceAvailability.set_Reason(UnavailableReason value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AvailableGet">
            <summary>Sets the shim of NamespaceAvailability.get_Available()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.AvailableSetBoolean">
            <summary>Sets the shim of NamespaceAvailability.set_Available(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.Constructor">
            <summary>Sets the shim of NamespaceAvailability.NamespaceAvailability()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ExtensionDataGet">
            <summary>Sets the shim of NamespaceAvailability.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of NamespaceAvailability.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ReasonDetailGet">
            <summary>Sets the shim of NamespaceAvailability.get_ReasonDetail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ReasonDetailSetString">
            <summary>Sets the shim of NamespaceAvailability.set_ReasonDetail(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ReasonGet">
            <summary>Sets the shim of NamespaceAvailability.get_Reason()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.ReasonSetUnavailableReason">
            <summary>Sets the shim of NamespaceAvailability.set_Reason(UnavailableReason value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceAvailability.StaticConstructor">
            <summary>Sets the shim of NamespaceAvailability.NamespaceAvailability()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription">
            <summary>Shim type of Microsoft.ServiceBus.Management.NamespaceDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.#ctor(Microsoft.ServiceBus.Management.NamespaceDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AcsManagementEndpointGet">
            <summary>Sets the shim of NamespaceDescription.get_AcsManagementEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AcsManagementEndpointSetUri">
            <summary>Sets the shim of NamespaceDescription.set_AcsManagementEndpoint(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.AcsManagementEndpointGet">
            <summary>Sets the shim of NamespaceDescription.get_AcsManagementEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.AcsManagementEndpointSetUri">
            <summary>Sets the shim of NamespaceDescription.set_AcsManagementEndpoint(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of NamespaceDescription.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of NamespaceDescription.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CreateACSNamespaceGet">
            <summary>Sets the shim of NamespaceDescription.get_CreateACSNamespace()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CreateACSNamespaceSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_CreateACSNamespace(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of NamespaceDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CreatedAtSetDateTime">
            <summary>Sets the shim of NamespaceDescription.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CriticalGet">
            <summary>Sets the shim of NamespaceDescription.get_Critical()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CriticalSetNullableOfBoolean">
            <summary>Sets the shim of NamespaceDescription.set_Critical(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CurrentStateGet">
            <summary>Sets the shim of NamespaceDescription.get_CurrentState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.CurrentStateSetString">
            <summary>Sets the shim of NamespaceDescription.set_CurrentState(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.DataCenterGet">
            <summary>Sets the shim of NamespaceDescription.get_DataCenter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.DataCenterSetString">
            <summary>Sets the shim of NamespaceDescription.set_DataCenter(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.DefaultKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_DefaultKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.DefaultKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_DefaultKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.EnabledGet">
            <summary>Sets the shim of NamespaceDescription.get_Enabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.EventHubEnabledGet">
            <summary>Sets the shim of NamespaceDescription.get_EventHubEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.EventHubEnabledSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_EventHubEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.InDeletedSubscriptionGet">
            <summary>Sets the shim of NamespaceDescription.get_InDeletedSubscription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.InDeletedSubscriptionSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_InDeletedSubscription(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.MessagingSkuGet">
            <summary>Sets the shim of NamespaceDescription.get_MessagingSku()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.MessagingSkuPlanGet">
            <summary>Sets the shim of NamespaceDescription.get_MessagingSkuPlan()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.MessagingSkuPlanSetMessagingSKUPlan">
            <summary>Sets the shim of NamespaceDescription.set_MessagingSkuPlan(MessagingSKUPlan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.MessagingSkuSetInt32">
            <summary>Sets the shim of NamespaceDescription.set_MessagingSku(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.NameGet">
            <summary>Sets the shim of NamespaceDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.NameSetString">
            <summary>Sets the shim of NamespaceDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.NamespaceTypeGet">
            <summary>Sets the shim of NamespaceDescription.get_NamespaceType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.NamespaceTypeSetNullableOfNamespaceType">
            <summary>Sets the shim of NamespaceDescription.set_NamespaceType(Nullable`1&lt;NamespaceType&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ProjectKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ProjectKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ProjectKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ProjectKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.RegionGet">
            <summary>Sets the shim of NamespaceDescription.get_Region()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.RegionSetString">
            <summary>Sets the shim of NamespaceDescription.set_Region(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ResourceGroupGet">
            <summary>Sets the shim of NamespaceDescription.get_ResourceGroup()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ResourceGroupSetString">
            <summary>Sets the shim of NamespaceDescription.set_ResourceGroup(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScaleUnitGet">
            <summary>Sets the shim of NamespaceDescription.get_ScaleUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScaleUnitKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ScaleUnitKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScaleUnitKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ScaleUnitKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScaleUnitSetString">
            <summary>Sets the shim of NamespaceDescription.set_ScaleUnit(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScopeKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ScopeKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ScopeKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ScopeKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ServiceBusEndpointGet">
            <summary>Sets the shim of NamespaceDescription.get_ServiceBusEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.ServiceBusEndpointSetUri">
            <summary>Sets the shim of NamespaceDescription.set_ServiceBusEndpoint(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.StateGet">
            <summary>Sets the shim of NamespaceDescription.get_State()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.StateSetNamespaceState">
            <summary>Sets the shim of NamespaceDescription.set_State(NamespaceState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.StatusGet">
            <summary>Sets the shim of NamespaceDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.StatusSetNamespaceState">
            <summary>Sets the shim of NamespaceDescription.set_Status(NamespaceState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.SubscriptionIdGet">
            <summary>Sets the shim of NamespaceDescription.get_SubscriptionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.SubscriptionIdSetString">
            <summary>Sets the shim of NamespaceDescription.set_SubscriptionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.TagsGet">
            <summary>Sets the shim of NamespaceDescription.get_Tags()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.TagsSetString">
            <summary>Sets the shim of NamespaceDescription.set_Tags(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.TargetStateGet">
            <summary>Sets the shim of NamespaceDescription.get_TargetState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.TargetStateSetString">
            <summary>Sets the shim of NamespaceDescription.set_TargetState(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of NamespaceDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.AllInstances.UpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of NamespaceDescription.set_UpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ConnectionStringGet">
            <summary>Sets the shim of NamespaceDescription.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ConnectionStringSetString">
            <summary>Sets the shim of NamespaceDescription.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.Constructor">
            <summary>Sets the shim of NamespaceDescription.NamespaceDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CreateACSNamespaceGet">
            <summary>Sets the shim of NamespaceDescription.get_CreateACSNamespace()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CreateACSNamespaceSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_CreateACSNamespace(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CreatedAtGet">
            <summary>Sets the shim of NamespaceDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CreatedAtSetDateTime">
            <summary>Sets the shim of NamespaceDescription.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CriticalGet">
            <summary>Sets the shim of NamespaceDescription.get_Critical()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CriticalSetNullableOfBoolean">
            <summary>Sets the shim of NamespaceDescription.set_Critical(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CurrentStateGet">
            <summary>Sets the shim of NamespaceDescription.get_CurrentState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.CurrentStateSetString">
            <summary>Sets the shim of NamespaceDescription.set_CurrentState(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.DataCenterGet">
            <summary>Sets the shim of NamespaceDescription.get_DataCenter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.DataCenterSetString">
            <summary>Sets the shim of NamespaceDescription.set_DataCenter(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.DefaultKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_DefaultKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.DefaultKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_DefaultKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.EnabledGet">
            <summary>Sets the shim of NamespaceDescription.get_Enabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.EnabledSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.EventHubEnabledGet">
            <summary>Sets the shim of NamespaceDescription.get_EventHubEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.EventHubEnabledSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_EventHubEnabled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.InDeletedSubscriptionGet">
            <summary>Sets the shim of NamespaceDescription.get_InDeletedSubscription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.InDeletedSubscriptionSetBoolean">
            <summary>Sets the shim of NamespaceDescription.set_InDeletedSubscription(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.MessagingSkuGet">
            <summary>Sets the shim of NamespaceDescription.get_MessagingSku()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.MessagingSkuPlanGet">
            <summary>Sets the shim of NamespaceDescription.get_MessagingSkuPlan()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.MessagingSkuPlanSetMessagingSKUPlan">
            <summary>Sets the shim of NamespaceDescription.set_MessagingSkuPlan(MessagingSKUPlan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.MessagingSkuSetInt32">
            <summary>Sets the shim of NamespaceDescription.set_MessagingSku(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.NameGet">
            <summary>Sets the shim of NamespaceDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.NameSetString">
            <summary>Sets the shim of NamespaceDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.NamespaceTypeGet">
            <summary>Sets the shim of NamespaceDescription.get_NamespaceType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.NamespaceTypeSetNullableOfNamespaceType">
            <summary>Sets the shim of NamespaceDescription.set_NamespaceType(Nullable`1&lt;NamespaceType&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ProjectKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ProjectKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ProjectKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ProjectKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.RegionGet">
            <summary>Sets the shim of NamespaceDescription.get_Region()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.RegionSetString">
            <summary>Sets the shim of NamespaceDescription.set_Region(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ResourceGroupGet">
            <summary>Sets the shim of NamespaceDescription.get_ResourceGroup()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ResourceGroupSetString">
            <summary>Sets the shim of NamespaceDescription.set_ResourceGroup(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScaleUnitGet">
            <summary>Sets the shim of NamespaceDescription.get_ScaleUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScaleUnitKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ScaleUnitKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScaleUnitKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ScaleUnitKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScaleUnitSetString">
            <summary>Sets the shim of NamespaceDescription.set_ScaleUnit(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScopeKeyGet">
            <summary>Sets the shim of NamespaceDescription.get_ScopeKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ScopeKeySetString">
            <summary>Sets the shim of NamespaceDescription.set_ScopeKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ServiceBusEndpointGet">
            <summary>Sets the shim of NamespaceDescription.get_ServiceBusEndpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.ServiceBusEndpointSetUri">
            <summary>Sets the shim of NamespaceDescription.set_ServiceBusEndpoint(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.StateGet">
            <summary>Sets the shim of NamespaceDescription.get_State()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.StateSetNamespaceState">
            <summary>Sets the shim of NamespaceDescription.set_State(NamespaceState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.StaticConstructor">
            <summary>Sets the shim of NamespaceDescription.NamespaceDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.StatusGet">
            <summary>Sets the shim of NamespaceDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.StatusSetNamespaceState">
            <summary>Sets the shim of NamespaceDescription.set_Status(NamespaceState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.SubscriptionIdGet">
            <summary>Sets the shim of NamespaceDescription.get_SubscriptionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.SubscriptionIdSetString">
            <summary>Sets the shim of NamespaceDescription.set_SubscriptionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.TagsGet">
            <summary>Sets the shim of NamespaceDescription.get_Tags()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.TagsSetString">
            <summary>Sets the shim of NamespaceDescription.set_Tags(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.TargetStateGet">
            <summary>Sets the shim of NamespaceDescription.get_TargetState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.TargetStateSetString">
            <summary>Sets the shim of NamespaceDescription.set_TargetState(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.UpdatedAtGet">
            <summary>Sets the shim of NamespaceDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceDescription.UpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of NamespaceDescription.set_UpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats">
            <summary>Shim type of Microsoft.ServiceBus.Management.NamespaceEntityStats</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.#ctor(Microsoft.ServiceBus.Management.NamespaceEntityStats)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.EventHubCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_EventHubCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.EventHubCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_EventHubCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.NotificationHubCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_NotificationHubCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.NotificationHubCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_NotificationHubCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.QueueCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_QueueCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.QueueCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_QueueCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.RelayCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_RelayCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.RelayCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_RelayCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.TopicCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_TopicCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.AllInstances.TopicCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_TopicCount(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.Constructor">
            <summary>Sets the shim of NamespaceEntityStats.NamespaceEntityStats()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.EventHubCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_EventHubCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.EventHubCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_EventHubCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.NotificationHubCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_NotificationHubCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.NotificationHubCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_NotificationHubCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.QueueCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_QueueCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.QueueCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_QueueCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.RelayCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_RelayCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.RelayCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_RelayCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.StaticConstructor">
            <summary>Sets the shim of NamespaceEntityStats.NamespaceEntityStats()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.TopicCountGet">
            <summary>Sets the shim of NamespaceEntityStats.get_TopicCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimNamespaceEntityStats.TopicCountSetInt64">
            <summary>Sets the shim of NamespaceEntityStats.set_TopicCount(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress">
            <summary>Shim type of Microsoft.ServiceBus.Management.PortalManagementAddress</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.#ctor(Microsoft.ServiceBus.Management.PortalManagementAddress)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.AddressGet">
            <summary>Sets the shim of PortalManagementAddress.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.AddressSetUri">
            <summary>Sets the shim of PortalManagementAddress.set_Address(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.AllInstances.AddressGet">
            <summary>Sets the shim of PortalManagementAddress.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.AllInstances.AddressSetUri">
            <summary>Sets the shim of PortalManagementAddress.set_Address(Uri value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimPortalManagementAddress.Constructor">
            <summary>Sets the shim of PortalManagementAddress.PortalManagementAddress()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimProperty">
            <summary>Shim type of Microsoft.ServiceBus.Management.Property</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimProperty.#ctor(Microsoft.ServiceBus.Management.Property)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.Clone">
            <summary>Sets the shim of Property.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.CreatedGet">
            <summary>Sets the shim of Property.get_Created()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.CreatedSetDateTime">
            <summary>Sets the shim of Property.set_Created(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.ModifiedGet">
            <summary>Sets the shim of Property.get_Modified()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.ModifiedSetDateTime">
            <summary>Sets the shim of Property.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.NameGet">
            <summary>Sets the shim of Property.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.NameSetString">
            <summary>Sets the shim of Property.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.RevisionGet">
            <summary>Sets the shim of Property.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.RevisionSetInt64">
            <summary>Sets the shim of Property.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.ValueGet">
            <summary>Sets the shim of Property.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.AllInstances.ValueSetString">
            <summary>Sets the shim of Property.set_Value(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimProperty.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.Clone">
            <summary>Sets the shim of Property.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.Constructor">
            <summary>Sets the shim of Property.Property()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.CreatedGet">
            <summary>Sets the shim of Property.get_Created()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.CreatedSetDateTime">
            <summary>Sets the shim of Property.set_Created(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.ModifiedGet">
            <summary>Sets the shim of Property.get_Modified()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.ModifiedSetDateTime">
            <summary>Sets the shim of Property.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.NameGet">
            <summary>Sets the shim of Property.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.NameSetString">
            <summary>Sets the shim of Property.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.RevisionGet">
            <summary>Sets the shim of Property.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.RevisionSetInt64">
            <summary>Sets the shim of Property.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.StaticConstructor">
            <summary>Sets the shim of Property.Property()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.ValueGet">
            <summary>Sets the shim of Property.get_Value()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimProperty.ValueSetString">
            <summary>Sets the shim of Property.set_Value(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription">
            <summary>Shim type of Microsoft.ServiceBus.Management.RegionCodeDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.#ctor(Microsoft.ServiceBus.Management.RegionCodeDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.AllInstances.CodeGet">
            <summary>Sets the shim of RegionCodeDescription.get_Code()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.AllInstances.CodeSetString">
            <summary>Sets the shim of RegionCodeDescription.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.AllInstances.FullNameGet">
            <summary>Sets the shim of RegionCodeDescription.get_FullName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.AllInstances.FullNameSetString">
            <summary>Sets the shim of RegionCodeDescription.set_FullName(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.CodeGet">
            <summary>Sets the shim of RegionCodeDescription.get_Code()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.CodeSetString">
            <summary>Sets the shim of RegionCodeDescription.set_Code(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.Constructor">
            <summary>Sets the shim of RegionCodeDescription.RegionCodeDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.FullNameGet">
            <summary>Sets the shim of RegionCodeDescription.get_FullName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.FullNameSetString">
            <summary>Sets the shim of RegionCodeDescription.set_FullName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimRegionCodeDescription.StaticConstructor">
            <summary>Sets the shim of RegionCodeDescription.RegionCodeDescription()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit">
            <summary>Shim type of Microsoft.ServiceBus.Management.UsageCredit</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.#ctor(Microsoft.ServiceBus.Management.UsageCredit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.EqualsUsageCredit">
            <summary>Sets the shim of UsageCredit.Equals(UsageCredit other)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of UsageCredit.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of UsageCredit.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.HiddenGet">
            <summary>Sets the shim of UsageCredit.get_Hidden()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.HiddenSetBoolean">
            <summary>Sets the shim of UsageCredit.set_Hidden(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.IdGet">
            <summary>Sets the shim of UsageCredit.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.IdSetInt64">
            <summary>Sets the shim of UsageCredit.set_Id(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.IdentifierGet">
            <summary>Sets the shim of UsageCredit.get_Identifier()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.IdentifierSetString">
            <summary>Sets the shim of UsageCredit.set_Identifier(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.KeyNameGet">
            <summary>Sets the shim of UsageCredit.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.KeyNameSetString">
            <summary>Sets the shim of UsageCredit.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NHBasicUnitGet">
            <summary>Sets the shim of UsageCredit.get_NHBasicUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NHBasicUnitSetNullableOfInt32">
            <summary>Sets the shim of UsageCredit.set_NHBasicUnit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NHStandardUnitGet">
            <summary>Sets the shim of UsageCredit.get_NHStandardUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NHStandardUnitSetNullableOfInt32">
            <summary>Sets the shim of UsageCredit.set_NHStandardUnit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NamespaceNameGet">
            <summary>Sets the shim of UsageCredit.get_NamespaceName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.NamespaceNameSetString">
            <summary>Sets the shim of UsageCredit.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.RequestorServiceGet">
            <summary>Sets the shim of UsageCredit.get_RequestorService()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.RequestorServiceSetString">
            <summary>Sets the shim of UsageCredit.set_RequestorService(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.RevisionGet">
            <summary>Sets the shim of UsageCredit.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.RevisionSetInt64">
            <summary>Sets the shim of UsageCredit.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.SubscriptionIdGet">
            <summary>Sets the shim of UsageCredit.get_SubscriptionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.SubscriptionIdSetString">
            <summary>Sets the shim of UsageCredit.set_SubscriptionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.ToString01">
            <summary>Sets the shim of UsageCredit.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of UsageCredit.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.AllInstances.UpdatedAtSetDateTime">
            <summary>Sets the shim of UsageCredit.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.Bind(System.IEquatable{Microsoft.ServiceBus.Management.UsageCredit})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.Constructor">
            <summary>Sets the shim of UsageCredit.UsageCredit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.EqualsUsageCredit">
            <summary>Sets the shim of UsageCredit.Equals(UsageCredit other)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.ExtensionDataGet">
            <summary>Sets the shim of UsageCredit.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of UsageCredit.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.HiddenGet">
            <summary>Sets the shim of UsageCredit.get_Hidden()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.HiddenSetBoolean">
            <summary>Sets the shim of UsageCredit.set_Hidden(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.IdGet">
            <summary>Sets the shim of UsageCredit.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.IdSetInt64">
            <summary>Sets the shim of UsageCredit.set_Id(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.IdentifierGet">
            <summary>Sets the shim of UsageCredit.get_Identifier()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.IdentifierSetString">
            <summary>Sets the shim of UsageCredit.set_Identifier(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.KeyNameGet">
            <summary>Sets the shim of UsageCredit.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.KeyNameSetString">
            <summary>Sets the shim of UsageCredit.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NHBasicUnitGet">
            <summary>Sets the shim of UsageCredit.get_NHBasicUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NHBasicUnitSetNullableOfInt32">
            <summary>Sets the shim of UsageCredit.set_NHBasicUnit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NHStandardUnitGet">
            <summary>Sets the shim of UsageCredit.get_NHStandardUnit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NHStandardUnitSetNullableOfInt32">
            <summary>Sets the shim of UsageCredit.set_NHStandardUnit(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NamespaceNameGet">
            <summary>Sets the shim of UsageCredit.get_NamespaceName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.NamespaceNameSetString">
            <summary>Sets the shim of UsageCredit.set_NamespaceName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.RequestorServiceGet">
            <summary>Sets the shim of UsageCredit.get_RequestorService()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.RequestorServiceSetString">
            <summary>Sets the shim of UsageCredit.set_RequestorService(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.RevisionGet">
            <summary>Sets the shim of UsageCredit.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.RevisionSetInt64">
            <summary>Sets the shim of UsageCredit.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.StaticConstructor">
            <summary>Sets the shim of UsageCredit.UsageCredit()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.SubscriptionIdGet">
            <summary>Sets the shim of UsageCredit.get_SubscriptionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.SubscriptionIdSetString">
            <summary>Sets the shim of UsageCredit.set_SubscriptionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.ToString">
            <summary>Sets the shim of UsageCredit.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.TryParseKeyStringStringOutStringOut">
            <summary>Sets the shim of UsageCredit.TryParseKey(String key, String&amp; identifier, String&amp; requestorService)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.UpdatedAtGet">
            <summary>Sets the shim of UsageCredit.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUsageCredit.UpdatedAtSetDateTime">
            <summary>Sets the shim of UsageCredit.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult">
            <summary>Shim type of Microsoft.ServiceBus.Management.UserValidationResult</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.#ctor(Microsoft.ServiceBus.Management.UserValidationResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.AllInstances.ReasonGet">
            <summary>Sets the shim of UserValidationResult.get_Reason()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.AllInstances.ReasonSetString">
            <summary>Sets the shim of UserValidationResult.set_Reason(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.AllInstances.ResultGet">
            <summary>Sets the shim of UserValidationResult.get_Result()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.AllInstances.ResultSetBoolean">
            <summary>Sets the shim of UserValidationResult.set_Result(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.Constructor">
            <summary>Sets the shim of UserValidationResult.UserValidationResult()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.ReasonGet">
            <summary>Sets the shim of UserValidationResult.get_Reason()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.ReasonSetString">
            <summary>Sets the shim of UserValidationResult.set_Reason(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.ResultGet">
            <summary>Sets the shim of UserValidationResult.get_Result()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.ShimUserValidationResult.ResultSetBoolean">
            <summary>Sets the shim of UserValidationResult.set_Result(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail">
            <summary>Stub type of Microsoft.ServiceBus.Management.ConnectionDetail</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionDetail</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubConnectionDetail.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo">
            <summary>Stub type of Microsoft.ServiceBus.Management.FarmCertificateInfo</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo.InitializeStub">
            <summary>Initializes a new instance of type StubFarmCertificateInfo</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubFarmCertificateInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU">
            <summary>Stub type of Microsoft.ServiceBus.Management.MessagingSKU</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU.InitializeStub">
            <summary>Initializes a new instance of type StubMessagingSKU</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKU.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan">
            <summary>Stub type of Microsoft.ServiceBus.Management.MessagingSKUPlan</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan.InitializeStub">
            <summary>Initializes a new instance of type StubMessagingSKUPlan</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMessagingSKUPlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubMetric">
            <summary>Stub type of Microsoft.ServiceBus.Management.Metric</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetric.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetric.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetric.InitializeStub">
            <summary>Initializes a new instance of type StubMetric</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetric.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetric.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup">
            <summary>Stub type of Microsoft.ServiceBus.Management.MetricRollup</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup.InitializeStub">
            <summary>Initializes a new instance of type StubMetricRollup</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricRollup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubMetricValue">
            <summary>Stub type of Microsoft.ServiceBus.Management.MetricValue</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetricValue.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricValue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubMetricValue.InitializeStub">
            <summary>Initializes a new instance of type StubMetricValue</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricValue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubMetricValue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability">
            <summary>Stub type of Microsoft.ServiceBus.Management.NamespaceAvailability</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability.InitializeStub">
            <summary>Initializes a new instance of type StubNamespaceAvailability</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceAvailability.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription">
            <summary>Stub type of Microsoft.ServiceBus.Management.NamespaceDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription.InitializeStub">
            <summary>Initializes a new instance of type StubNamespaceDescription</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats">
            <summary>Stub type of Microsoft.ServiceBus.Management.NamespaceEntityStats</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats.InitializeStub">
            <summary>Initializes a new instance of type StubNamespaceEntityStats</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubNamespaceEntityStats.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress">
            <summary>Stub type of Microsoft.ServiceBus.Management.PortalManagementAddress</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress.InitializeStub">
            <summary>Initializes a new instance of type StubPortalManagementAddress</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubPortalManagementAddress.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubProperty">
            <summary>Stub type of Microsoft.ServiceBus.Management.Property</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubProperty.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubProperty.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubProperty.InitializeStub">
            <summary>Initializes a new instance of type StubProperty</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubProperty.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubProperty.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription">
            <summary>Stub type of Microsoft.ServiceBus.Management.RegionCodeDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription.InitializeStub">
            <summary>Initializes a new instance of type StubRegionCodeDescription</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubRegionCodeDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit">
            <summary>Stub type of Microsoft.ServiceBus.Management.UsageCredit</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.InitializeStub">
            <summary>Initializes a new instance of type StubUsageCredit</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.ToString">
            <summary>Sets the stub of UsageCredit.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Management.Fakes.StubUsageCredit.ToString01">
            <summary>Sets the stub of UsageCredit.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult">
            <summary>Stub type of Microsoft.ServiceBus.Management.UserValidationResult</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult.InitializeStub">
            <summary>Initializes a new instance of type StubUserValidationResult</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Management.Fakes.StubUserValidationResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.#ctor(Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.AmqpContainerIdGet">
            <summary>Sets the shim of AmqpTransportSettings.get_AmqpContainerId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.AmqpContainerIdSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_AmqpContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.AmqpVersionGet">
            <summary>Sets the shim of AmqpTransportSettings.get_AmqpVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.AmqpVersionSetVersion">
            <summary>Sets the shim of AmqpTransportSettings.set_AmqpVersion(Version value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.BatchFlushIntervalGet">
            <summary>Sets the shim of AmqpTransportSettings.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of AmqpTransportSettings.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.CertificateValidationCallbackGet">
            <summary>Sets the shim of AmqpTransportSettings.get_CertificateValidationCallback()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.CertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of AmqpTransportSettings.set_CertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.Clone">
            <summary>Sets the shim of AmqpTransportSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.DefaultPortGet">
            <summary>Sets the shim of AmqpTransportSettings.get_DefaultPort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.DirectModeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_DirectMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.DirectModeSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_DirectMode(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.EnableLinkRedirectGet">
            <summary>Sets the shim of AmqpTransportSettings.get_EnableLinkRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.EnableLinkRedirectSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_EnableLinkRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.MaxFrameSizeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.MaxFrameSizeSetInt32">
            <summary>Sets the shim of AmqpTransportSettings.set_MaxFrameSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.MicrosoftServiceBusMessagingITransportSettingsBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; physicalUriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.MicrosoftServiceBusMessagingITransportSettingsEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.NetworkCredentialGet">
            <summary>Sets the shim of AmqpTransportSettings.get_NetworkCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.NetworkCredentialSetNetworkCredential">
            <summary>Sets the shim of AmqpTransportSettings.set_NetworkCredential(NetworkCredential value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.OpenHostNameGet">
            <summary>Sets the shim of AmqpTransportSettings.get_OpenHostName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.OpenHostNameSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_OpenHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.SslHostNameGet">
            <summary>Sets the shim of AmqpTransportSettings.get_SslHostName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.SslHostNameSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_SslHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.SslStreamUpgradeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_SslStreamUpgrade()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.SslStreamUpgradeSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_SslStreamUpgrade(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingsget">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingssetTokenProvider">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.UseSslStreamSecurityGet">
            <summary>Sets the shim of AmqpTransportSettings.get_UseSslStreamSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.UseSslStreamSecuritySetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_UseSslStreamSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.UseWebSocketsGet">
            <summary>Sets the shim of AmqpTransportSettings.get_UseWebSockets()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AllInstances.UseWebSocketsSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_UseWebSockets(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AmqpContainerIdGet">
            <summary>Sets the shim of AmqpTransportSettings.get_AmqpContainerId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AmqpContainerIdSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_AmqpContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AmqpVersionGet">
            <summary>Sets the shim of AmqpTransportSettings.get_AmqpVersion()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.AmqpVersionSetVersion">
            <summary>Sets the shim of AmqpTransportSettings.set_AmqpVersion(Version value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.BatchFlushIntervalGet">
            <summary>Sets the shim of AmqpTransportSettings.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of AmqpTransportSettings.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.CertificateValidationCallbackGet">
            <summary>Sets the shim of AmqpTransportSettings.get_CertificateValidationCallback()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.CertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of AmqpTransportSettings.set_CertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.Clone">
            <summary>Sets the shim of AmqpTransportSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.Constructor">
            <summary>Sets the shim of AmqpTransportSettings.AmqpTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.DefaultPortGet">
            <summary>Sets the shim of AmqpTransportSettings.get_DefaultPort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.DirectModeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_DirectMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.DirectModeSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_DirectMode(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.EnableLinkRedirectGet">
            <summary>Sets the shim of AmqpTransportSettings.get_EnableLinkRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.EnableLinkRedirectSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_EnableLinkRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.MaxFrameSizeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.MaxFrameSizeSetInt32">
            <summary>Sets the shim of AmqpTransportSettings.set_MaxFrameSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.MicrosoftServiceBusMessagingITransportSettingsBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; physicalUriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.MicrosoftServiceBusMessagingITransportSettingsEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.NetworkCredentialGet">
            <summary>Sets the shim of AmqpTransportSettings.get_NetworkCredential()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.NetworkCredentialSetNetworkCredential">
            <summary>Sets the shim of AmqpTransportSettings.set_NetworkCredential(NetworkCredential value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.OpenHostNameGet">
            <summary>Sets the shim of AmqpTransportSettings.get_OpenHostName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.OpenHostNameSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_OpenHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.SslHostNameGet">
            <summary>Sets the shim of AmqpTransportSettings.get_SslHostName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.SslHostNameSetString">
            <summary>Sets the shim of AmqpTransportSettings.set_SslHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.SslStreamUpgradeGet">
            <summary>Sets the shim of AmqpTransportSettings.get_SslStreamUpgrade()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.SslStreamUpgradeSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_SslStreamUpgrade(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingsget">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingssetTokenProvider">
            <summary>Sets the shim of AmqpTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.UseSslStreamSecurityGet">
            <summary>Sets the shim of AmqpTransportSettings.get_UseSslStreamSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.UseSslStreamSecuritySetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_UseSslStreamSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.UseWebSocketsGet">
            <summary>Sets the shim of AmqpTransportSettings.get_UseWebSockets()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Amqp.Fakes.ShimAmqpTransportSettings.UseWebSocketsSetBoolean">
            <summary>Sets the shim of AmqpTransportSettings.set_UseWebSockets(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.#ctor(Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.Constructor">
            <summary>Sets the shim of NetMessagingBindingCollectionElement.NetMessagingBindingCollectionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingCollectionElement.GetBindingCollectionElement">
            <summary>Sets the shim of NetMessagingBindingCollectionElement.GetBindingCollectionElement()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.#ctor(Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.InitializeFromBinding">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.AllInstances.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_TransportSettings()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.Bind(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.BindingElementTypeGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.Constructor">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.NetMessagingBindingExtensionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.ConstructorString">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.NetMessagingBindingExtensionElement(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.InitializeFromBinding">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.InitializeFrom(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.OnApplyConfigurationBinding">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.OnApplyConfiguration(Binding binding)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.PropertiesGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingBindingExtensionElement.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingBindingExtensionElement.get_TransportSettings()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.#ctor(Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.ApplyConfigurationBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.BindingElementTypeGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.CreateDefaultBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.InitializeFromBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.PropertiesGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.AllInstances.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.ApplyConfigurationBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.ApplyConfiguration(BindingElement bindingElement)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.BindingElementTypeGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_BindingElementType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.Constructor">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.NetMessagingTransportExtensionElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.CopyFromServiceModelExtensionElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.CopyFrom(ServiceModelExtensionElement from)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.CreateDefaultBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.CreateDefaultBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.InitializeFromBindingElement">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.InitializeFrom(BindingElement bindingElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.PropertiesGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportExtensionElement.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingTransportExtensionElement.get_TransportSettings()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.#ctor(Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.ApplyToNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.ApplyTo(NetMessagingTransportSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.BatchFlushIntervalGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.CopyFromNetMessagingTransportSettingsElement">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.CopyFrom(NetMessagingTransportSettingsElement settingsElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.EnableRedirectGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_EnableRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.EnableRedirectSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_EnableRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.InitializeFromNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.InitializeFrom(NetMessagingTransportSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.LeaseTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.AllInstances.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.ApplyToNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.ApplyTo(NetMessagingTransportSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.BatchFlushIntervalGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.Constructor">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.NetMessagingTransportSettingsElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.CopyFromNetMessagingTransportSettingsElement">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.CopyFrom(NetMessagingTransportSettingsElement settingsElement)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.EnableRedirectGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_EnableRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.EnableRedirectSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_EnableRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.InitializeFromNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.InitializeFrom(NetMessagingTransportSettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.LeaseTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Configuration.Fakes.ShimNetMessagingTransportSettingsElement.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettingsElement.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.AllowRule</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.#ctor(Microsoft.ServiceBus.Messaging.AllowRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.AllInstances.KeyNameGet">
            <summary>Sets the shim of AllowRule.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.AllInstances.KeyNameSetString">
            <summary>Sets the shim of AllowRule.set_KeyName(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.Constructor">
            <summary>Sets the shim of AllowRule.AllowRule()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.ConstructorStringAllowRuleClaimTypeStringIEnumerableOfAccessRights">
            <summary>Sets the shim of AllowRule.AllowRule(String issuerName, AllowRuleClaimType claimType, String claimValue, IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.ConstructorStringStringStringIEnumerableOfAccessRights">
            <summary>Sets the shim of AllowRule.AllowRule(String issuerName, String claimType, String claimValue, IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.KeyNameGet">
            <summary>Sets the shim of AllowRule.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAllowRule.KeyNameSetString">
            <summary>Sets the shim of AllowRule.set_KeyName(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.AuthorizationRule</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.#ctor(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ClaimTypeGet">
            <summary>Sets the shim of AuthorizationRule.get_ClaimType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ClaimTypeSetString">
            <summary>Sets the shim of AuthorizationRule.set_ClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ClaimValueGet">
            <summary>Sets the shim of AuthorizationRule.get_ClaimValue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ClaimValueSetString">
            <summary>Sets the shim of AuthorizationRule.set_ClaimValue(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.Clone">
            <summary>Sets the shim of AuthorizationRule.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.CreatedTimeGet">
            <summary>Sets the shim of AuthorizationRule.get_CreatedTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.CreatedTimeSetDateTime">
            <summary>Sets the shim of AuthorizationRule.set_CreatedTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.EqualsObject">
            <summary>Sets the shim of AuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.GetHashCode01">
            <summary>Sets the shim of AuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalClaimTypeGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalClaimType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalClaimTypeSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalClaimValueGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalClaimValue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalClaimValueSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalClaimValue(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalIssuerNameGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalIssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalIssuerNameSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalIssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalRightsGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalRights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.InternalRightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.set_InternalRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.IssuerNameGet">
            <summary>Sets the shim of AuthorizationRule.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.IssuerNameSetString">
            <summary>Sets the shim of AuthorizationRule.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.MarkModified">
            <summary>Sets the shim of AuthorizationRule.MarkModified()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ModifiedTimeGet">
            <summary>Sets the shim of AuthorizationRule.get_ModifiedTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ModifiedTimeSetDateTime">
            <summary>Sets the shim of AuthorizationRule.set_ModifiedTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.OnValidate">
            <summary>Sets the shim of AuthorizationRule.OnValidate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.RevisionGet">
            <summary>Sets the shim of AuthorizationRule.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.RevisionSetInt64">
            <summary>Sets the shim of AuthorizationRule.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.RightsGet">
            <summary>Sets the shim of AuthorizationRule.get_Rights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.RightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.set_Rights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.Validate">
            <summary>Sets the shim of AuthorizationRule.Validate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AllInstances.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.AreAccessRightsUniqueIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.AreAccessRightsUnique(IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ClaimTypeGet">
            <summary>Sets the shim of AuthorizationRule.get_ClaimType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ClaimTypeSetString">
            <summary>Sets the shim of AuthorizationRule.set_ClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ClaimValueGet">
            <summary>Sets the shim of AuthorizationRule.get_ClaimValue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ClaimValueSetString">
            <summary>Sets the shim of AuthorizationRule.set_ClaimValue(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.Clone">
            <summary>Sets the shim of AuthorizationRule.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.Constructor">
            <summary>Sets the shim of AuthorizationRule.AuthorizationRule()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.CreatedTimeGet">
            <summary>Sets the shim of AuthorizationRule.get_CreatedTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.CreatedTimeSetDateTime">
            <summary>Sets the shim of AuthorizationRule.set_CreatedTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.EqualsObject">
            <summary>Sets the shim of AuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.GetHashCode">
            <summary>Sets the shim of AuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalClaimTypeGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalClaimType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalClaimTypeSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalClaimType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalClaimValueGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalClaimValue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalClaimValueSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalClaimValue(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalIssuerNameGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalIssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalIssuerNameSetString">
            <summary>Sets the shim of AuthorizationRule.set_InternalIssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalRightsGet">
            <summary>Sets the shim of AuthorizationRule.get_InternalRights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.InternalRightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.set_InternalRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.IssuerNameGet">
            <summary>Sets the shim of AuthorizationRule.get_IssuerName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.IssuerNameSetString">
            <summary>Sets the shim of AuthorizationRule.set_IssuerName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.MarkModified">
            <summary>Sets the shim of AuthorizationRule.MarkModified()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ModifiedTimeGet">
            <summary>Sets the shim of AuthorizationRule.get_ModifiedTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ModifiedTimeSetDateTime">
            <summary>Sets the shim of AuthorizationRule.set_ModifiedTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.OnValidate">
            <summary>Sets the shim of AuthorizationRule.OnValidate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.RevisionGet">
            <summary>Sets the shim of AuthorizationRule.get_Revision()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.RevisionSetInt64">
            <summary>Sets the shim of AuthorizationRule.set_Revision(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.RightsGet">
            <summary>Sets the shim of AuthorizationRule.get_Rights()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.RightsSetIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.set_Rights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.Validate">
            <summary>Sets the shim of AuthorizationRule.Validate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRule.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the shim of AuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.AuthorizationRules</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.#ctor(Microsoft.ServiceBus.Messaging.AuthorizationRules)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AddAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Add(AuthorizationRule item)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.AddAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Add(AuthorizationRule item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.Clear">
            <summary>Sets the shim of AuthorizationRules.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.ContainsAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Contains(AuthorizationRule item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.CopyToAuthorizationRuleArrayInt32">
            <summary>Sets the shim of AuthorizationRules.CopyTo(AuthorizationRule[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.CountGet">
            <summary>Sets the shim of AuthorizationRules.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.GetEnumerator">
            <summary>Sets the shim of AuthorizationRules.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.GetRulesPredicateOfAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.GetRules(Predicate`1&lt;AuthorizationRule&gt; match)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.GetRulesString">
            <summary>Sets the shim of AuthorizationRules.GetRules(String claimValue)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.HasEqualRuntimeBehaviorAuthorizationRules">
            <summary>Sets the shim of AuthorizationRules.HasEqualRuntimeBehavior(AuthorizationRules comparand)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of AuthorizationRules.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.RemoveAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Remove(AuthorizationRule item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of AuthorizationRules.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AuthorizationRules.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.TryGetSharedAccessAuthorizationRuleStringSharedAccessAuthorizationRuleOut">
            <summary>Sets the shim of AuthorizationRules.TryGetSharedAccessAuthorizationRule(String keyName, SharedAccessAuthorizationRule&amp; rule)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.AllInstances.Validate">
            <summary>Sets the shim of AuthorizationRules.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Bind(System.Collections.Generic.ICollection{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Bind(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Clear">
            <summary>Sets the shim of AuthorizationRules.Clear()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Constructor">
            <summary>Sets the shim of AuthorizationRules.AuthorizationRules()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.ConstructorIEnumerableOfAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.AuthorizationRules(IEnumerable`1&lt;AuthorizationRule&gt; enumerable)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.ContainsAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Contains(AuthorizationRule item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.CopyToAuthorizationRuleArrayInt32">
            <summary>Sets the shim of AuthorizationRules.CopyTo(AuthorizationRule[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.CountGet">
            <summary>Sets the shim of AuthorizationRules.get_Count()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.GetEnumerator">
            <summary>Sets the shim of AuthorizationRules.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.GetRulesPredicateOfAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.GetRules(Predicate`1&lt;AuthorizationRule&gt; match)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.GetRulesString">
            <summary>Sets the shim of AuthorizationRules.GetRules(String claimValue)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.HasEqualRuntimeBehaviorAuthorizationRules">
            <summary>Sets the shim of AuthorizationRules.HasEqualRuntimeBehavior(AuthorizationRules comparand)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.IsReadOnlyGet">
            <summary>Sets the shim of AuthorizationRules.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.RemoveAuthorizationRule">
            <summary>Sets the shim of AuthorizationRules.Remove(AuthorizationRule item)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.RequiresEncryptionGet">
            <summary>Sets the shim of AuthorizationRules.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.StaticConstructor">
            <summary>Sets the shim of AuthorizationRules.AuthorizationRules()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AuthorizationRules.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.TryGetSharedAccessAuthorizationRuleStringSharedAccessAuthorizationRuleOut">
            <summary>Sets the shim of AuthorizationRules.TryGetSharedAccessAuthorizationRule(String keyName, SharedAccessAuthorizationRule&amp; rule)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimAuthorizationRules.Validate">
            <summary>Sets the shim of AuthorizationRules.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.BrokeredMessage</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.#ctor(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Abandon">
            <summary>Sets the shim of BrokeredMessage.Abandon()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AbandonAsync">
            <summary>Sets the shim of BrokeredMessage.AbandonAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AbandonAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.AbandonAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AbandonIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.Abandon(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AbandoningAddEventHandler">
            <summary>Sets the shim of BrokeredMessage.add_Abandoning(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AbandoningRemoveEventHandler">
            <summary>Sets the shim of BrokeredMessage.remove_Abandoning(EventHandler value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.Abandon">
            <summary>Sets the shim of BrokeredMessage.Abandon()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AbandonAsync">
            <summary>Sets the shim of BrokeredMessage.AbandonAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AbandonAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.AbandonAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AbandonIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.Abandon(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AbandoningAddEventHandler">
            <summary>Sets the shim of BrokeredMessage.add_Abandoning(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AbandoningRemoveEventHandler">
            <summary>Sets the shim of BrokeredMessage.remove_Abandoning(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AllowOverflowOnPersistGet">
            <summary>Sets the shim of BrokeredMessage.get_AllowOverflowOnPersist()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AllowOverflowOnPersistSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_AllowOverflowOnPersist(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ArePropertiesModifiedByBrokerGet">
            <summary>Sets the shim of BrokeredMessage.get_ArePropertiesModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.AttachDisposablesIEnumerableOfIDisposable">
            <summary>Sets the shim of BrokeredMessage.AttachDisposables(IEnumerable`1&lt;IDisposable&gt; disposables)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginAbandonAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginAbandonIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginAbandonIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginCompleteAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginComplete(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginCompleteTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginComplete(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeadLetterAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeadLetterIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeadLetterIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeadLetterStringStringAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeferAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeferIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginDeferIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginRenewLockAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginRenewLock(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BeginRenewLockTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginRenewLock(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BodyIdGet">
            <summary>Sets the shim of BrokeredMessage.get_BodyId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BodyIdSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_BodyId(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BodySizeGet">
            <summary>Sets the shim of BrokeredMessage.get_BodySize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BodyStreamGet">
            <summary>Sets the shim of BrokeredMessage.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BodyStreamSetStream">
            <summary>Sets the shim of BrokeredMessage.set_BodyStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BrokerRemovePropertyString">
            <summary>Sets the shim of BrokeredMessage.BrokerRemoveProperty(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.BrokerUpdatePropertyStringObject">
            <summary>Sets the shim of BrokeredMessage.BrokerUpdateProperty(String name, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ClearBodyObject">
            <summary>Sets the shim of BrokeredMessage.ClearBodyObject()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ClearPartitionId">
            <summary>Sets the shim of BrokeredMessage.ClearPartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.Clone">
            <summary>Sets the shim of BrokeredMessage.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.Complete">
            <summary>Sets the shim of BrokeredMessage.Complete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CompleteAsync">
            <summary>Sets the shim of BrokeredMessage.CompleteAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CompletingAddEventHandler">
            <summary>Sets the shim of BrokeredMessage.add_Completing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CompletingRemoveEventHandler">
            <summary>Sets the shim of BrokeredMessage.remove_Completing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ContentTypeGet">
            <summary>Sets the shim of BrokeredMessage.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of BrokeredMessage.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CopyMessageHeadersBrokeredMessageBoolean">
            <summary>Sets the shim of BrokeredMessage.CopyMessageHeaders(BrokeredMessage originalMessage, Boolean clientSideCloning)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CopyPartitionKeyString">
            <summary>Sets the shim of BrokeredMessage.CopyPartitionKey(String partitionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CopySessionIdString">
            <summary>Sets the shim of BrokeredMessage.CopySessionId(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of BrokeredMessage.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CreateCopy">
            <summary>Sets the shim of BrokeredMessage.CreateCopy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.CreateCopyForEventHub">
            <summary>Sets the shim of BrokeredMessage.CreateCopyForEventHub()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetter">
            <summary>Sets the shim of BrokeredMessage.DeadLetter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterAsync">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterAsyncStringString">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync(String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterSourceGet">
            <summary>Sets the shim of BrokeredMessage.get_DeadLetterSource()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterSourceSetString">
            <summary>Sets the shim of BrokeredMessage.set_DeadLetterSource(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeadLetterStringString">
            <summary>Sets the shim of BrokeredMessage.DeadLetter(String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.Defer">
            <summary>Sets the shim of BrokeredMessage.Defer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeferAsync">
            <summary>Sets the shim of BrokeredMessage.DeferAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeferAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeferAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeferIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.Defer(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeliveryCountGet">
            <summary>Sets the shim of BrokeredMessage.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DeliveryCountSetInt32">
            <summary>Sets the shim of BrokeredMessage.set_DeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DestinationGet">
            <summary>Sets the shim of BrokeredMessage.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DestinationSetString">
            <summary>Sets the shim of BrokeredMessage.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.Dispose">
            <summary>Sets the shim of BrokeredMessage.Dispose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BrokeredMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.DownGradeToVersion1">
            <summary>Sets the shim of BrokeredMessage.DownGradeToVersion1()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EndAbandonIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EndCompleteIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EndDeferIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EndRenewLockIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndRenewLock(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnqueuedSequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_EnqueuedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnqueuedSequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_EnqueuedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnqueuedTimeUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_EnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnsureHeaderDeserialized">
            <summary>Sets the shim of BrokeredMessage.EnsureHeaderDeserialized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.EnsureReceiverHeaders">
            <summary>Sets the shim of BrokeredMessage.EnsureReceiverHeaders()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ExpiresAtUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ForcePersistenceGet">
            <summary>Sets the shim of BrokeredMessage.get_ForcePersistence()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ForcePersistenceSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_ForcePersistence(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.GetBodyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,``0})">
            <summary>Sets the shim of BrokeredMessage.GetBody()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.GetBodyOf1XmlObjectSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Runtime.Serialization.XmlObjectSerializer,``0})">
            <summary>Sets the shim of BrokeredMessage.GetBody(XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.GetHeaderCount">
            <summary>Sets the shim of BrokeredMessage.GetHeaderCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.GetSystemPropertyString">
            <summary>Sets the shim of BrokeredMessage.GetSystemProperty(String propertyName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.HeaderSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_HeaderSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.HeaderStreamMaxSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_HeaderStreamMaxSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.InternalIdGet">
            <summary>Sets the shim of BrokeredMessage.get_InternalId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.InternalIdSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_InternalId(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.InternalPropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_InternalProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsActivatingScheduledMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsActivatingScheduledMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsActivatingScheduledMessageSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsActivatingScheduledMessage(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsBodyConsumedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsBodyConsumed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsBodyLoadedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsBodyLoaded()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsBodyLoadedSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsBodyLoaded(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsConsumedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsConsumed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsConsumedSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsConsumed(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsFromCacheGet">
            <summary>Sets the shim of BrokeredMessage.get_IsFromCache()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsFromCacheSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsFromCache(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsLockTokenSetGet">
            <summary>Sets the shim of BrokeredMessage.get_IsLockTokenSet()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsPingMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsPingMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.IsTransferMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsTransferMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LabelGet">
            <summary>Sets the shim of BrokeredMessage.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LabelSetString">
            <summary>Sets the shim of BrokeredMessage.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LockTokenGet">
            <summary>Sets the shim of BrokeredMessage.get_LockToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LockTokenSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_LockToken(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LockedUntilUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.LockedUntilUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_LockedUntilUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.MessageIdGet">
            <summary>Sets the shim of BrokeredMessage.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.MessageIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.OffsetGet">
            <summary>Sets the shim of BrokeredMessage.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PartitionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PartitionIdSetInt16">
            <summary>Sets the shim of BrokeredMessage.set_PartitionId(Int16 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PartitionKeyGet">
            <summary>Sets the shim of BrokeredMessage.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PartitionKeySetString">
            <summary>Sets the shim of BrokeredMessage.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PersistedMessageSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_PersistedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PersistedMessageSizeSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_PersistedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PrefilteredHeadersGet">
            <summary>Sets the shim of BrokeredMessage.get_PrefilteredHeaders()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PrefilteredHeadersSetStream">
            <summary>Sets the shim of BrokeredMessage.set_PrefilteredHeaders(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PrefilteredPropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_PrefilteredProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PrefilteredPropertiesSetStream">
            <summary>Sets the shim of BrokeredMessage.set_PrefilteredProperties(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PublisherGet">
            <summary>Sets the shim of BrokeredMessage.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.PublisherSetString">
            <summary>Sets the shim of BrokeredMessage.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RaiseEventEventHandler">
            <summary>Sets the shim of BrokeredMessage.RaiseEvent(EventHandler handler)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RawHeaderStreamGet">
            <summary>Sets the shim of BrokeredMessage.get_RawHeaderStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RawHeaderStreamSetStream">
            <summary>Sets the shim of BrokeredMessage.set_RawHeaderStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RecordInfoAsGuidGet">
            <summary>Sets the shim of BrokeredMessage.get_RecordInfoAsGuid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RecordInfoAsGuidSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_RecordInfoAsGuid(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RecordedExpiredAtUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_RecordedExpiredAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RecordedExpiredAtUtcSetNullableOfDateTime">
            <summary>Sets the shim of BrokeredMessage.set_RecordedExpiredAtUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RenewLock">
            <summary>Sets the shim of BrokeredMessage.RenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.RenewLockAsync">
            <summary>Sets the shim of BrokeredMessage.RenewLockAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ReplyToGet">
            <summary>Sets the shim of BrokeredMessage.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ReplyToSessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ReplyToSessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ReplyToSetString">
            <summary>Sets the shim of BrokeredMessage.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ResetPropertiesAsModifiedByBroker">
            <summary>Sets the shim of BrokeredMessage.ResetPropertiesAsModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ScheduledEnqueueTimeUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_ScheduledEnqueueTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ScheduledEnqueueTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_ScheduledEnqueueTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SetGetBodyCalled">
            <summary>Sets the shim of BrokeredMessage.SetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SetMessageHeaderByteByteArrayBoolean">
            <summary>Sets the shim of BrokeredMessage.SetMessageHeader(Byte memberId, Byte[] value, Boolean ignoreUnknown)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SetPropertiesAsModifiedByBroker">
            <summary>Sets the shim of BrokeredMessage.SetPropertiesAsModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SizeGet">
            <summary>Sets the shim of BrokeredMessage.get_Size()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.StateGet">
            <summary>Sets the shim of BrokeredMessage.get_State()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.StateSetMessageState">
            <summary>Sets the shim of BrokeredMessage.set_State(MessageState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SupportsEmptySerializedHeaderGet">
            <summary>Sets the shim of BrokeredMessage.get_SupportsEmptySerializedHeader()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SupportsEmptySerializedHeaderInFileStoreGet">
            <summary>Sets the shim of BrokeredMessage.get_SupportsEmptySerializedHeaderInFileStore()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SupportsEmptySerializedHeaderInFileStoreSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_SupportsEmptySerializedHeaderInFileStore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SupportsEmptySerializedHeaderSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_SupportsEmptySerializedHeader(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SystemXmlSerializationIXmlSerializableGetSchema">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.GetSchema()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SystemXmlSerializationIXmlSerializableReadXmlXmlReader">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.SystemXmlSerializationIXmlSerializableWriteXmlXmlWriter">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of BrokeredMessage.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ThrowIfNotLocked">
            <summary>Sets the shim of BrokeredMessage.ThrowIfNotLocked()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ThrowIfNotReceived">
            <summary>Sets the shim of BrokeredMessage.ThrowIfNotReceived()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ThrowIfReceiveContextIsNull">
            <summary>Sets the shim of BrokeredMessage.ThrowIfReceiveContextIsNull()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ThrowIfReceiveContextIsNullString">
            <summary>Sets the shim of BrokeredMessage.ThrowIfReceiveContextIsNull(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TimeToLiveGet">
            <summary>Sets the shim of BrokeredMessage.get_TimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TimeToLiveSetTimeSpan">
            <summary>Sets the shim of BrokeredMessage.set_TimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ToGet">
            <summary>Sets the shim of BrokeredMessage.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ToSetString">
            <summary>Sets the shim of BrokeredMessage.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ToString01">
            <summary>Sets the shim of BrokeredMessage.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferDestinationGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferDestination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferDestinationResourceIdGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferDestinationResourceId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferDestinationResourceIdSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_TransferDestinationResourceId(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferDestinationSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferDestination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferHopCountGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferHopCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferHopCountSetInt32">
            <summary>Sets the shim of BrokeredMessage.set_TransferHopCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_TransferSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSourceGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSource()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.TransferSourceSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferSource(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.VersionGet">
            <summary>Sets the shim of BrokeredMessage.get_Version()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ViaPartitionKeyGet">
            <summary>Sets the shim of BrokeredMessage.get_ViaPartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllInstances.ViaPartitionKeySetString">
            <summary>Sets the shim of BrokeredMessage.set_ViaPartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllowOverflowOnPersistGet">
            <summary>Sets the shim of BrokeredMessage.get_AllowOverflowOnPersist()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AllowOverflowOnPersistSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_AllowOverflowOnPersist(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ArePropertiesModifiedByBrokerGet">
            <summary>Sets the shim of BrokeredMessage.get_ArePropertiesModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.AttachDisposablesIEnumerableOfIDisposable">
            <summary>Sets the shim of BrokeredMessage.AttachDisposables(IEnumerable`1&lt;IDisposable&gt; disposables)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginAbandonAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginAbandonIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginAbandonIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginAbandon(IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginCompleteAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginComplete(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginCompleteTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginComplete(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeadLetterAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeadLetterIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeadLetterIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeadLetterStringStringAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDeadLetter(String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeferAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeferIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginDeferIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginDefer(IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginRenewLockAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginRenewLock(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BeginRenewLockTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of BrokeredMessage.BeginRenewLock(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BodyIdGet">
            <summary>Sets the shim of BrokeredMessage.get_BodyId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BodyIdSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_BodyId(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BodySizeGet">
            <summary>Sets the shim of BrokeredMessage.get_BodySize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BodyStreamGet">
            <summary>Sets the shim of BrokeredMessage.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BodyStreamSetStream">
            <summary>Sets the shim of BrokeredMessage.set_BodyStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BrokerRemovePropertyString">
            <summary>Sets the shim of BrokeredMessage.BrokerRemoveProperty(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.BrokerUpdatePropertyStringObject">
            <summary>Sets the shim of BrokeredMessage.BrokerUpdateProperty(String name, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CalculateSerializedPropertiesSizeBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.CalculateSerializedPropertiesSize(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ClearBodyObject">
            <summary>Sets the shim of BrokeredMessage.ClearBodyObject()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ClearPartitionId">
            <summary>Sets the shim of BrokeredMessage.ClearPartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Clone">
            <summary>Sets the shim of BrokeredMessage.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CloneDisposablesIEnumerableOfIDisposable">
            <summary>Sets the shim of BrokeredMessage.CloneDisposables(IEnumerable`1&lt;IDisposable&gt; disposables)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CloneStreamStreamBoolean">
            <summary>Sets the shim of BrokeredMessage.CloneStream(Stream originalStream, Boolean canThrowException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Complete">
            <summary>Sets the shim of BrokeredMessage.Complete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CompleteAsync">
            <summary>Sets the shim of BrokeredMessage.CompleteAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CompletingAddEventHandler">
            <summary>Sets the shim of BrokeredMessage.add_Completing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CompletingRemoveEventHandler">
            <summary>Sets the shim of BrokeredMessage.remove_Completing(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Constructor">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorBrokeredMessageBoolean">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(BrokeredMessage originalMessage, Boolean clientSideCloning)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorObject">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(Object serializableObject)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorObjectStream">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(Object bodyObject, Stream bodyStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorObjectXmlObjectSerializer">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(Object serializableObject, XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorStream">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(Stream messageBodyStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorStreamBoolean">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(Stream messageBodyStream, Boolean ownsStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ConstructorString">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage(String messageId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ContentTypeGet">
            <summary>Sets the shim of BrokeredMessage.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ContentTypeSetString">
            <summary>Sets the shim of BrokeredMessage.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CopyMessageHeadersBrokeredMessageBoolean">
            <summary>Sets the shim of BrokeredMessage.CopyMessageHeaders(BrokeredMessage originalMessage, Boolean clientSideCloning)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CopyPartitionKeyString">
            <summary>Sets the shim of BrokeredMessage.CopyPartitionKey(String partitionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CopySessionIdString">
            <summary>Sets the shim of BrokeredMessage.CopySessionId(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CorrelationIdGet">
            <summary>Sets the shim of BrokeredMessage.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CorrelationIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CreateCopy">
            <summary>Sets the shim of BrokeredMessage.CreateCopy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CreateCopyForEventHub">
            <summary>Sets the shim of BrokeredMessage.CreateCopyForEventHub()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CreateEmptyMessage">
            <summary>Sets the shim of BrokeredMessage.CreateEmptyMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.CreateMessageBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.CreateMessage(BrokeredMessage originalMessage)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetter">
            <summary>Sets the shim of BrokeredMessage.DeadLetter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterAsync">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterAsyncStringString">
            <summary>Sets the shim of BrokeredMessage.DeadLetterAsync(String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeadLetter(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterSourceGet">
            <summary>Sets the shim of BrokeredMessage.get_DeadLetterSource()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterSourceSetString">
            <summary>Sets the shim of BrokeredMessage.set_DeadLetterSource(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeadLetterStringString">
            <summary>Sets the shim of BrokeredMessage.DeadLetter(String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Defer">
            <summary>Sets the shim of BrokeredMessage.Defer()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeferAsync">
            <summary>Sets the shim of BrokeredMessage.DeferAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeferAsyncIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.DeferAsync(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeferIDictionaryOfStringObject">
            <summary>Sets the shim of BrokeredMessage.Defer(IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeliveryCountGet">
            <summary>Sets the shim of BrokeredMessage.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeliveryCountSetInt32">
            <summary>Sets the shim of BrokeredMessage.set_DeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeserializeBodyStreamBrokeredMessageXmlReader">
            <summary>Sets the shim of BrokeredMessage.DeserializeBodyStream(BrokeredMessage message, XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeserializeHeadersFromBinaryBrokeredMessageXmlReader">
            <summary>Sets the shim of BrokeredMessage.DeserializeHeadersFromBinary(BrokeredMessage message, XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeserializePropertiesFromBinaryBrokeredMessageXmlReader">
            <summary>Sets the shim of BrokeredMessage.DeserializePropertiesFromBinary(BrokeredMessage message, XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DeserializeVersionAndFlagsFromBinaryBrokeredMessageXmlReader">
            <summary>Sets the shim of BrokeredMessage.DeserializeVersionAndFlagsFromBinary(BrokeredMessage message, XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DestinationGet">
            <summary>Sets the shim of BrokeredMessage.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DestinationSetString">
            <summary>Sets the shim of BrokeredMessage.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.Dispose">
            <summary>Sets the shim of BrokeredMessage.Dispose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DisposeBoolean">
            <summary>Sets the shim of BrokeredMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.DownGradeToVersion1">
            <summary>Sets the shim of BrokeredMessage.DownGradeToVersion1()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EndAbandonIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EndCompleteIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EndDeferIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EndRenewLockIAsyncResult">
            <summary>Sets the shim of BrokeredMessage.EndRenewLock(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnqueuedSequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_EnqueuedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnqueuedSequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_EnqueuedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnqueuedTimeUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_EnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnsureHeaderDeserialized">
            <summary>Sets the shim of BrokeredMessage.EnsureHeaderDeserialized()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.EnsureReceiverHeaders">
            <summary>Sets the shim of BrokeredMessage.EnsureReceiverHeaders()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ExpiresAtUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ForcePersistenceGet">
            <summary>Sets the shim of BrokeredMessage.get_ForcePersistence()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ForcePersistenceSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_ForcePersistence(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.GetBodyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of BrokeredMessage.GetBody()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.GetBodyOf1XmlObjectSerializer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Runtime.Serialization.XmlObjectSerializer,``0})">
            <summary>Sets the shim of BrokeredMessage.GetBody(XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.GetHeaderCount">
            <summary>Sets the shim of BrokeredMessage.GetHeaderCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.GetObjectTypeObject">
            <summary>Sets the shim of BrokeredMessage.GetObjectType(Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.GetSystemPropertyString">
            <summary>Sets the shim of BrokeredMessage.GetSystemProperty(String propertyName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.HeaderSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_HeaderSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.HeaderStreamMaxSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_HeaderStreamMaxSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.InternalIdGet">
            <summary>Sets the shim of BrokeredMessage.get_InternalId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.InternalIdSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_InternalId(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.InternalPropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_InternalProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsActivatingScheduledMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsActivatingScheduledMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsActivatingScheduledMessageSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsActivatingScheduledMessage(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsBodyConsumedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsBodyConsumed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsBodyLoadedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsBodyLoaded()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsBodyLoadedSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsBodyLoaded(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsConsumedGet">
            <summary>Sets the shim of BrokeredMessage.get_IsConsumed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsConsumedSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsConsumed(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsFromCacheGet">
            <summary>Sets the shim of BrokeredMessage.get_IsFromCache()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsFromCacheSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_IsFromCache(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsLockTokenSetGet">
            <summary>Sets the shim of BrokeredMessage.get_IsLockTokenSet()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsPingMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsPingMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.IsTransferMessageGet">
            <summary>Sets the shim of BrokeredMessage.get_IsTransferMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LabelGet">
            <summary>Sets the shim of BrokeredMessage.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LabelSetString">
            <summary>Sets the shim of BrokeredMessage.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LockTokenGet">
            <summary>Sets the shim of BrokeredMessage.get_LockToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LockTokenSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_LockToken(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LockedUntilUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.LockedUntilUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_LockedUntilUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.MessageIdGet">
            <summary>Sets the shim of BrokeredMessage.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.MessageIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.NewMessageId">
            <summary>Sets the shim of BrokeredMessage.NewMessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.OffsetGet">
            <summary>Sets the shim of BrokeredMessage.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PartitionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PartitionIdSetInt16">
            <summary>Sets the shim of BrokeredMessage.set_PartitionId(Int16 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PartitionKeyGet">
            <summary>Sets the shim of BrokeredMessage.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PartitionKeySetString">
            <summary>Sets the shim of BrokeredMessage.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PersistedMessageSizeGet">
            <summary>Sets the shim of BrokeredMessage.get_PersistedMessageSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PersistedMessageSizeSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_PersistedMessageSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PrefilteredHeadersGet">
            <summary>Sets the shim of BrokeredMessage.get_PrefilteredHeaders()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PrefilteredHeadersSetStream">
            <summary>Sets the shim of BrokeredMessage.set_PrefilteredHeaders(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PrefilteredPropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_PrefilteredProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PrefilteredPropertiesSetStream">
            <summary>Sets the shim of BrokeredMessage.set_PrefilteredProperties(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PropertiesGet">
            <summary>Sets the shim of BrokeredMessage.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PublisherGet">
            <summary>Sets the shim of BrokeredMessage.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.PublisherSetString">
            <summary>Sets the shim of BrokeredMessage.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RaiseEventEventHandler">
            <summary>Sets the shim of BrokeredMessage.RaiseEvent(EventHandler handler)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RawHeaderStreamGet">
            <summary>Sets the shim of BrokeredMessage.get_RawHeaderStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RawHeaderStreamSetStream">
            <summary>Sets the shim of BrokeredMessage.set_RawHeaderStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ReadBytesXmlReaderInt32">
            <summary>Sets the shim of BrokeredMessage.ReadBytes(XmlReader reader, Int32 bytesToRead)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RecordInfoAsGuidGet">
            <summary>Sets the shim of BrokeredMessage.get_RecordInfoAsGuid()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RecordInfoAsGuidSetGuid">
            <summary>Sets the shim of BrokeredMessage.set_RecordInfoAsGuid(Guid value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RecordedExpiredAtUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_RecordedExpiredAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RecordedExpiredAtUtcSetNullableOfDateTime">
            <summary>Sets the shim of BrokeredMessage.set_RecordedExpiredAtUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RenewLock">
            <summary>Sets the shim of BrokeredMessage.RenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.RenewLockAsync">
            <summary>Sets the shim of BrokeredMessage.RenewLockAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ReplyToGet">
            <summary>Sets the shim of BrokeredMessage.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ReplyToSessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ReplyToSessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ReplyToSetString">
            <summary>Sets the shim of BrokeredMessage.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ResetPropertiesAsModifiedByBroker">
            <summary>Sets the shim of BrokeredMessage.ResetPropertiesAsModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ScheduledEnqueueTimeUtcGet">
            <summary>Sets the shim of BrokeredMessage.get_ScheduledEnqueueTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ScheduledEnqueueTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessage.set_ScheduledEnqueueTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SerializeBodyStreamBrokeredMessageXmlWriter">
            <summary>Sets the shim of BrokeredMessage.SerializeBodyStream(BrokeredMessage message, XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SerializePropertiesAsBinaryBrokeredMessageXmlWriter">
            <summary>Sets the shim of BrokeredMessage.SerializePropertiesAsBinary(BrokeredMessage message, XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SerializeVersionAndFlagsAsBinaryBrokeredMessageXmlWriter">
            <summary>Sets the shim of BrokeredMessage.SerializeVersionAndFlagsAsBinary(BrokeredMessage message, XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SetBrokerMode">
            <summary>Sets the shim of BrokeredMessage.SetBrokerMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SetGetBodyCalled">
            <summary>Sets the shim of BrokeredMessage.SetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SetMessageHeaderByteByteArrayBoolean">
            <summary>Sets the shim of BrokeredMessage.SetMessageHeader(Byte memberId, Byte[] value, Boolean ignoreUnknown)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SetPropertiesAsModifiedByBroker">
            <summary>Sets the shim of BrokeredMessage.SetPropertiesAsModifiedByBroker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SizeGet">
            <summary>Sets the shim of BrokeredMessage.get_Size()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.StateGet">
            <summary>Sets the shim of BrokeredMessage.get_State()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.StateSetMessageState">
            <summary>Sets the shim of BrokeredMessage.set_State(MessageState value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.StaticConstructor">
            <summary>Sets the shim of BrokeredMessage.BrokeredMessage()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SupportsEmptySerializedHeaderGet">
            <summary>Sets the shim of BrokeredMessage.get_SupportsEmptySerializedHeader()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SupportsEmptySerializedHeaderInFileStoreGet">
            <summary>Sets the shim of BrokeredMessage.get_SupportsEmptySerializedHeaderInFileStore()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SupportsEmptySerializedHeaderInFileStoreSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_SupportsEmptySerializedHeaderInFileStore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SupportsEmptySerializedHeaderSetBoolean">
            <summary>Sets the shim of BrokeredMessage.set_SupportsEmptySerializedHeader(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SystemXmlSerializationIXmlSerializableGetSchema">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.GetSchema()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SystemXmlSerializationIXmlSerializableReadXmlXmlReader">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.SystemXmlSerializationIXmlSerializableWriteXmlXmlWriter">
            <summary>Sets the shim of BrokeredMessage.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ThrowIfDisposed">
            <summary>Sets the shim of BrokeredMessage.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ThrowIfNotLocked">
            <summary>Sets the shim of BrokeredMessage.ThrowIfNotLocked()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ThrowIfNotReceived">
            <summary>Sets the shim of BrokeredMessage.ThrowIfNotReceived()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ThrowIfReceiveContextIsNull">
            <summary>Sets the shim of BrokeredMessage.ThrowIfReceiveContextIsNull()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ThrowIfReceiveContextIsNullString">
            <summary>Sets the shim of BrokeredMessage.ThrowIfReceiveContextIsNull(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TimeToLiveGet">
            <summary>Sets the shim of BrokeredMessage.get_TimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TimeToLiveSetTimeSpan">
            <summary>Sets the shim of BrokeredMessage.set_TimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ToGet">
            <summary>Sets the shim of BrokeredMessage.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ToSetString">
            <summary>Sets the shim of BrokeredMessage.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ToString">
            <summary>Sets the shim of BrokeredMessage.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferDestinationGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferDestination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferDestinationResourceIdGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferDestinationResourceId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferDestinationResourceIdSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_TransferDestinationResourceId(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferDestinationSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferDestination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferHopCountGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferHopCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferHopCountSetInt32">
            <summary>Sets the shim of BrokeredMessage.set_TransferHopCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSequenceNumberGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSequenceNumberSetInt64">
            <summary>Sets the shim of BrokeredMessage.set_TransferSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSessionIdGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSessionIdSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSourceGet">
            <summary>Sets the shim of BrokeredMessage.get_TransferSource()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.TransferSourceSetString">
            <summary>Sets the shim of BrokeredMessage.set_TransferSource(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ValidateDestinationString">
            <summary>Sets the shim of BrokeredMessage.ValidateDestination(String destination)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ValidateMessageIdString">
            <summary>Sets the shim of BrokeredMessage.ValidateMessageId(String messageId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ValidatePartitionKeyStringString">
            <summary>Sets the shim of BrokeredMessage.ValidatePartitionKey(String partitionKeyPropertyName, String partitionKey)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ValidateSessionIdString">
            <summary>Sets the shim of BrokeredMessage.ValidateSessionId(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.VersionGet">
            <summary>Sets the shim of BrokeredMessage.get_Version()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ViaPartitionKeyGet">
            <summary>Sets the shim of BrokeredMessage.get_ViaPartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage.ViaPartitionKeySetString">
            <summary>Sets the shim of BrokeredMessage.set_ViaPartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__12BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__12(BrokeredMessage messageArg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__13BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__13(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__14BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__14(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__15BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__15(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__16BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__16(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__17BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__17(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__18BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__18(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__19BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__19(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1aBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1a(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1bBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1b(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1cBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1c(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1dBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1d(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1eBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1e(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__1fBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__1f(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__20BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__20(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__21BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__21(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__22BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__22(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__23BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__23(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__24BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__24(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__25BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__25(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__26BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__26(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__27BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__27(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__28BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__28(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__29BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__29(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__7BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__7(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__8BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__8(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__9BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__9(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__aBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__a(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__bBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__b(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__cBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__c(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__dBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__d(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__eBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__e(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._BuildBinarySerializationItemsb__fBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;BuildBinarySerializationItems&gt;b__f(BrokeredMessage msg)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__61BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__61(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__62BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__62(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__63BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__63(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__64BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__64(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__65BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__65(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__66BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__66(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__67BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__67(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__68BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__68(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__69BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__69(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6aBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6a(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6bBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6b(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6cBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6c(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6dBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6d(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6eBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6e(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__6fBrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__6f(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__70BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__70(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__71BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__71(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__72BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__72(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__73BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__73(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__74BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__74(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessage._cctorb__75BrokeredMessage">
            <summary>Sets the shim of BrokeredMessage.&lt;.cctor&gt;b__75(BrokeredMessage message)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.BrokeredMessageProperty</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.#ctor(Microsoft.ServiceBus.Messaging.BrokeredMessageProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AddPropertyToWcfMessageBrokeredMessageMessage">
            <summary>Sets the shim of BrokeredMessageProperty.AddPropertyToWcfMessage(BrokeredMessage sourceAfmsMessage, Message destinationWcfMessage)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ContentTypeGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.DeliveryCountGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.DestinationGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.DestinationSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.EnqueuedTimeUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ExpiresAtUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ForcePersistenceGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ForcePersistence()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ForcePersistenceSetBoolean">
            <summary>Sets the shim of BrokeredMessageProperty.set_ForcePersistence(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.LabelGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.LabelSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.LockTokenGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_LockToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.LockedUntilUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.MessageGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.MessageIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.MessageIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.PartitionKeyGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.PartitionKeySetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.PropertiesGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.PublisherGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.PublisherSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ReplyToGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ReplyToSessionIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ReplyToSessionIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ReplyToSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ScheduledEnqueueTimeUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ScheduledEnqueueTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ScheduledEnqueueTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessageProperty.set_ScheduledEnqueueTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.SequenceNumberGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.SessionIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.SessionIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.SystemServiceModelChannelsIMessagePropertyCreateCopy">
            <summary>Sets the shim of BrokeredMessageProperty.System.ServiceModel.Channels.IMessageProperty.CreateCopy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.TimeToLiveGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_TimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.TimeToLiveSetTimeSpan">
            <summary>Sets the shim of BrokeredMessageProperty.set_TimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ToGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ToSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ViaPartitionKeyGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ViaPartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.AllInstances.ViaPartitionKeySetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ViaPartitionKey(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.Constructor">
            <summary>Sets the shim of BrokeredMessageProperty.BrokeredMessageProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ConstructorBrokeredMessage">
            <summary>Sets the shim of BrokeredMessageProperty.BrokeredMessageProperty(BrokeredMessage afmsMessage)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ConstructorBrokeredMessageProperty">
            <summary>Sets the shim of BrokeredMessageProperty.BrokeredMessageProperty(BrokeredMessageProperty other)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ContentTypeGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ContentTypeSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.CorrelationIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.CorrelationIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.DeliveryCountGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.DestinationGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Destination()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.DestinationSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Destination(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.EnqueuedTimeUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ExpiresAtUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ForcePersistenceGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ForcePersistence()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ForcePersistenceSetBoolean">
            <summary>Sets the shim of BrokeredMessageProperty.set_ForcePersistence(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.LabelGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.LabelSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.LockTokenGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_LockToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.LockedUntilUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.MessageGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.MessageIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.MessageIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.PartitionKeyGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.PartitionKeySetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.PropertiesGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.PublisherGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.PublisherSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ReplyToGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ReplyToSessionIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ReplyToSessionIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ReplyToSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ScheduledEnqueueTimeUtcGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ScheduledEnqueueTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ScheduledEnqueueTimeUtcSetDateTime">
            <summary>Sets the shim of BrokeredMessageProperty.set_ScheduledEnqueueTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.SequenceNumberGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.SessionIdGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.SessionIdSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.StaticConstructor">
            <summary>Sets the shim of BrokeredMessageProperty.BrokeredMessageProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.SystemServiceModelChannelsIMessagePropertyCreateCopy">
            <summary>Sets the shim of BrokeredMessageProperty.System.ServiceModel.Channels.IMessageProperty.CreateCopy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.TimeToLiveGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_TimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.TimeToLiveSetTimeSpan">
            <summary>Sets the shim of BrokeredMessageProperty.set_TimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ToGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ToSetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.TryGetMessagePropertiesBrokeredMessagePropertyOut">
            <summary>Sets the shim of BrokeredMessageProperty.TryGet(MessageProperties messageProperties, BrokeredMessageProperty&amp; property)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ViaPartitionKeyGet">
            <summary>Sets the shim of BrokeredMessageProperty.get_ViaPartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimBrokeredMessageProperty.ViaPartitionKeySetString">
            <summary>Sets the shim of BrokeredMessageProperty.set_ViaPartitionKey(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ClientEntity</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.#ctor(Microsoft.ServiceBus.Messaging.ClientEntity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Abort">
            <summary>Sets the shim of ClientEntity.Abort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AbortBoolean">
            <summary>Sets the shim of ClientEntity.Abort(Boolean fromClose)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.Abort">
            <summary>Sets the shim of ClientEntity.Abort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.AbortBoolean">
            <summary>Sets the shim of ClientEntity.Abort(Boolean fromClose)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.BeginCloseAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.BeginOpenAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.Close">
            <summary>Sets the shim of ClientEntity.Close()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.CloseAsync">
            <summary>Sets the shim of ClientEntity.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.CloseTimeSpan">
            <summary>Sets the shim of ClientEntity.Close(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ClosedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ClosedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.EndCloseIAsyncResult">
            <summary>Sets the shim of ClientEntity.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.EndOpenIAsyncResult">
            <summary>Sets the shim of ClientEntity.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.Fault">
            <summary>Sets the shim of ClientEntity.Fault()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.FaultException">
            <summary>Sets the shim of ClientEntity.Fault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.FaultedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Faulted(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.FaultedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Faulted(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.GetPendingException">
            <summary>Sets the shim of ClientEntity.GetPendingException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IdGet">
            <summary>Sets the shim of ClientEntity.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IsClosedGet">
            <summary>Sets the shim of ClientEntity.get_IsClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IsClosedOrClosingGet">
            <summary>Sets the shim of ClientEntity.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IsClosedOrClosingMicrosoftServiceBusMessagingICloseableget">
            <summary>Sets the shim of ClientEntity.Microsoft.ServiceBus.Messaging.ICloseable.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IsFaultedGet">
            <summary>Sets the shim of ClientEntity.get_IsFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.IsOpenedGet">
            <summary>Sets the shim of ClientEntity.get_IsOpened()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of ClientEntity.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OnClosed">
            <summary>Sets the shim of ClientEntity.OnClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OnFaulted">
            <summary>Sets the shim of ClientEntity.OnFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of ClientEntity.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OnOpened">
            <summary>Sets the shim of ClientEntity.OnOpened()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.Open">
            <summary>Sets the shim of ClientEntity.Open()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OpenTimeSpan">
            <summary>Sets the shim of ClientEntity.Open(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OpenedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.OpenedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.RetryPolicyGet">
            <summary>Sets the shim of ClientEntity.get_RetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.RetryPolicySetRetryPolicy">
            <summary>Sets the shim of ClientEntity.set_RetryPolicy(RetryPolicy value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ShouldLinkRetryPolicyGet">
            <summary>Sets the shim of ClientEntity.get_ShouldLinkRetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ShouldLinkRetryPolicySetBoolean">
            <summary>Sets the shim of ClientEntity.set_ShouldLinkRetryPolicy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThisLockGet">
            <summary>Sets the shim of ClientEntity.get_ThisLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowIfClosed">
            <summary>Sets the shim of ClientEntity.ThrowIfClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowIfDisposedOrImmutable">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposedOrImmutable()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowIfDisposedOrNotOpen">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposedOrNotOpen()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowIfFaulted">
            <summary>Sets the shim of ClientEntity.ThrowIfFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances.ThrowPending">
            <summary>Sets the shim of ClientEntity.ThrowPending()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.AllInstances._OnFaultedb__10">
            <summary>Sets the shim of ClientEntity.&lt;OnFaulted&gt;b__10()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BeginCloseAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BeginOpenAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ClientEntity.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Close">
            <summary>Sets the shim of ClientEntity.Close()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.CloseAsync">
            <summary>Sets the shim of ClientEntity.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.CloseTimeSpan">
            <summary>Sets the shim of ClientEntity.Close(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ClosedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ClosedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Constructor">
            <summary>Sets the shim of ClientEntity.ClientEntity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.EndCloseIAsyncResult">
            <summary>Sets the shim of ClientEntity.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.EndOpenIAsyncResult">
            <summary>Sets the shim of ClientEntity.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Fault">
            <summary>Sets the shim of ClientEntity.Fault()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.FaultException">
            <summary>Sets the shim of ClientEntity.Fault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.FaultedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Faulted(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.FaultedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Faulted(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.GetPendingException">
            <summary>Sets the shim of ClientEntity.GetPendingException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IdGet">
            <summary>Sets the shim of ClientEntity.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IsClosedGet">
            <summary>Sets the shim of ClientEntity.get_IsClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IsClosedOrClosingGet">
            <summary>Sets the shim of ClientEntity.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IsClosedOrClosingMicrosoftServiceBusMessagingICloseableget">
            <summary>Sets the shim of ClientEntity.Microsoft.ServiceBus.Messaging.ICloseable.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IsFaultedGet">
            <summary>Sets the shim of ClientEntity.get_IsFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.IsOpenedGet">
            <summary>Sets the shim of ClientEntity.get_IsOpened()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OnCloseTimeSpan">
            <summary>Sets the shim of ClientEntity.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OnClosed">
            <summary>Sets the shim of ClientEntity.OnClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OnFaulted">
            <summary>Sets the shim of ClientEntity.OnFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OnOpenTimeSpan">
            <summary>Sets the shim of ClientEntity.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OnOpened">
            <summary>Sets the shim of ClientEntity.OnOpened()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.Open">
            <summary>Sets the shim of ClientEntity.Open()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OpenTimeSpan">
            <summary>Sets the shim of ClientEntity.Open(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OpenedAddEventHandler">
            <summary>Sets the shim of ClientEntity.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.OpenedRemoveEventHandler">
            <summary>Sets the shim of ClientEntity.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.RetryPolicyGet">
            <summary>Sets the shim of ClientEntity.get_RetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.RetryPolicySetRetryPolicy">
            <summary>Sets the shim of ClientEntity.set_RetryPolicy(RetryPolicy value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ShouldLinkRetryPolicyGet">
            <summary>Sets the shim of ClientEntity.get_ShouldLinkRetryPolicy()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ShouldLinkRetryPolicySetBoolean">
            <summary>Sets the shim of ClientEntity.set_ShouldLinkRetryPolicy(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThisLockGet">
            <summary>Sets the shim of ClientEntity.get_ThisLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowIfClosed">
            <summary>Sets the shim of ClientEntity.ThrowIfClosed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowIfDisposed">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowIfDisposedOrImmutable">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposedOrImmutable()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowIfDisposedOrNotOpen">
            <summary>Sets the shim of ClientEntity.ThrowIfDisposedOrNotOpen()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowIfFaulted">
            <summary>Sets the shim of ClientEntity.ThrowIfFaulted()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity.ThrowPending">
            <summary>Sets the shim of ClientEntity.ThrowPending()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity._Abortb__12">
            <summary>Sets the shim of ClientEntity.&lt;Abort&gt;b__12()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity._BeginCloseb__6">
            <summary>Sets the shim of ClientEntity.&lt;BeginClose&gt;b__6()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity._OnClosedb__d">
            <summary>Sets the shim of ClientEntity.&lt;OnClosed&gt;b__d()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity._OnFaultedb__10">
            <summary>Sets the shim of ClientEntity.&lt;OnFaulted&gt;b__10()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimClientEntity._OnOpenedb__a">
            <summary>Sets the shim of ClientEntity.&lt;OnOpened&gt;b__a()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ConsumerGroupDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.#ctor(Microsoft.ServiceBus.Messaging.ConsumerGroupDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of ConsumerGroupDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.EnableCheckpointGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_EnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.EnableCheckpointSetBoolean">
            <summary>Sets the shim of ConsumerGroupDescription.set_EnableCheckpoint(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.EventHubPathGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalEnableCheckpointGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalEnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalEnableCheckpointSetNullableOfBoolean">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalEnableCheckpoint(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.NameGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.NameSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of ConsumerGroupDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.Constructor">
            <summary>Sets the shim of ConsumerGroupDescription.ConsumerGroupDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.ConstructorStringString">
            <summary>Sets the shim of ConsumerGroupDescription.ConsumerGroupDescription(String eventHubPath, String consumerGroupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.CreatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.EnableCheckpointGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_EnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.EnableCheckpointSetBoolean">
            <summary>Sets the shim of ConsumerGroupDescription.set_EnableCheckpoint(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.EventHubPathGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.EventHubPathSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalCreatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalEnableCheckpointGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalEnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalEnableCheckpointSetNullableOfBoolean">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalEnableCheckpoint(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalUserMetadataGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.NameGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.NameSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.UpdatedAtGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.UserMetadataGet">
            <summary>Sets the shim of ConsumerGroupDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimConsumerGroupDescription.UserMetadataSetString">
            <summary>Sets the shim of ConsumerGroupDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.CorrelationFilter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.#ctor(Microsoft.ServiceBus.Messaging.CorrelationFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.AppendPropertyExpressionBooleanRefStringBuilderStringObject">
            <summary>Sets the shim of CorrelationFilter.AppendPropertyExpression(Boolean&amp; firstExpression, StringBuilder builder, String propertyName, Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ContentTypeGet">
            <summary>Sets the shim of CorrelationFilter.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of CorrelationFilter.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of CorrelationFilter.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.LabelGet">
            <summary>Sets the shim of CorrelationFilter.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.LabelSetString">
            <summary>Sets the shim of CorrelationFilter.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.MatchBrokeredMessage">
            <summary>Sets the shim of CorrelationFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.MessageIdGet">
            <summary>Sets the shim of CorrelationFilter.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.MessageIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.Preprocess">
            <summary>Sets the shim of CorrelationFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.PropertiesGet">
            <summary>Sets the shim of CorrelationFilter.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ReplyToGet">
            <summary>Sets the shim of CorrelationFilter.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ReplyToSessionIdGet">
            <summary>Sets the shim of CorrelationFilter.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ReplyToSessionIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ReplyToSetString">
            <summary>Sets the shim of CorrelationFilter.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.RequiresPreprocessingGet">
            <summary>Sets the shim of CorrelationFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.SessionIdGet">
            <summary>Sets the shim of CorrelationFilter.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.SessionIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ToGet">
            <summary>Sets the shim of CorrelationFilter.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ToSetString">
            <summary>Sets the shim of CorrelationFilter.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.ToString01">
            <summary>Sets the shim of CorrelationFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.AllInstances.Validate">
            <summary>Sets the shim of CorrelationFilter.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.Constructor">
            <summary>Sets the shim of CorrelationFilter.CorrelationFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ConstructorString">
            <summary>Sets the shim of CorrelationFilter.CorrelationFilter(String correlationId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ContentTypeGet">
            <summary>Sets the shim of CorrelationFilter.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ContentTypeSetString">
            <summary>Sets the shim of CorrelationFilter.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.CorrelationIdGet">
            <summary>Sets the shim of CorrelationFilter.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.CorrelationIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.LabelGet">
            <summary>Sets the shim of CorrelationFilter.get_Label()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.LabelSetString">
            <summary>Sets the shim of CorrelationFilter.set_Label(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.MatchBrokeredMessage">
            <summary>Sets the shim of CorrelationFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.MessageIdGet">
            <summary>Sets the shim of CorrelationFilter.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.MessageIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_MessageId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.Preprocess">
            <summary>Sets the shim of CorrelationFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.PropertiesGet">
            <summary>Sets the shim of CorrelationFilter.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ReplyToGet">
            <summary>Sets the shim of CorrelationFilter.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ReplyToSessionIdGet">
            <summary>Sets the shim of CorrelationFilter.get_ReplyToSessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ReplyToSessionIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_ReplyToSessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ReplyToSetString">
            <summary>Sets the shim of CorrelationFilter.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.RequiresPreprocessingGet">
            <summary>Sets the shim of CorrelationFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.SessionIdGet">
            <summary>Sets the shim of CorrelationFilter.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.SessionIdSetString">
            <summary>Sets the shim of CorrelationFilter.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ToGet">
            <summary>Sets the shim of CorrelationFilter.get_To()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ToSetString">
            <summary>Sets the shim of CorrelationFilter.set_To(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.ToString">
            <summary>Sets the shim of CorrelationFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimCorrelationFilter.Validate">
            <summary>Sets the shim of CorrelationFilter.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.#ctor(Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.AllInstances.CreateEventProcessorPartitionContext">
            <summary>Sets the shim of DefaultEventProcessorFactory`1.CreateEventProcessor(PartitionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.Bind(Microsoft.ServiceBus.Messaging.IEventProcessorFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.Constructor">
            <summary>Sets the shim of DefaultEventProcessorFactory`1.DefaultEventProcessorFactory`1()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.ConstructorT0">
            <summary>Sets the shim of DefaultEventProcessorFactory`1.DefaultEventProcessorFactory`1(!0 instance)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDefaultEventProcessorFactory`1.CreateEventProcessorPartitionContext">
            <summary>Sets the shim of DefaultEventProcessorFactory`1.CreateEventProcessor(PartitionContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.DuplicateMessageException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.#ctor(Microsoft.ServiceBus.Messaging.DuplicateMessageException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of DuplicateMessageException.DuplicateMessageException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of DuplicateMessageException.DuplicateMessageException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of DuplicateMessageException.DuplicateMessageException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.ConstructorString">
            <summary>Sets the shim of DuplicateMessageException.DuplicateMessageException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimDuplicateMessageException.ConstructorStringException">
            <summary>Sets the shim of DuplicateMessageException.DuplicateMessageException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EntityDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.#ctor(Microsoft.ServiceBus.Messaging.EntityDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of EntityDescription.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of EntityDescription.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.GetNewPath">
            <summary>Sets the shim of EntityDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EntityDescription.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.IsReadOnlySetBoolean">
            <summary>Sets the shim of EntityDescription.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.IsValidForRename">
            <summary>Sets the shim of EntityDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of EntityDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of EntityDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of EntityDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of EntityDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of EntityDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.SetPartitionIdsStringArray">
            <summary>Sets the shim of EntityDescription.SetPartitionIds(String[] partitionIds)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.ThrowIfReadOnly">
            <summary>Sets the shim of EntityDescription.ThrowIfReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.AllInstances.UpdateForRenameEntityDescription">
            <summary>Sets the shim of EntityDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.Constructor">
            <summary>Sets the shim of EntityDescription.EntityDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.ExtensionDataGet">
            <summary>Sets the shim of EntityDescription.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of EntityDescription.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.GetNewPath">
            <summary>Sets the shim of EntityDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.IsReadOnlyGet">
            <summary>Sets the shim of EntityDescription.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.IsReadOnlySetBoolean">
            <summary>Sets the shim of EntityDescription.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.IsValidForRename">
            <summary>Sets the shim of EntityDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of EntityDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of EntityDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.RequiresEncryptionGet">
            <summary>Sets the shim of EntityDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of EntityDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of EntityDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.SetPartitionIdsStringArray">
            <summary>Sets the shim of EntityDescription.SetPartitionIds(String[] partitionIds)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.ThrowIfReadOnly">
            <summary>Sets the shim of EntityDescription.ThrowIfReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEntityDescription.UpdateForRenameEntityDescription">
            <summary>Sets the shim of EntityDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventData</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.#ctor(Microsoft.ServiceBus.Messaging.EventData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.BodyStreamGet">
            <summary>Sets the shim of EventData.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.Clone">
            <summary>Sets the shim of EventData.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.DeliveryTagGet">
            <summary>Sets the shim of EventData.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of EventData.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.Dispose">
            <summary>Sets the shim of EventData.Dispose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EventData.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.EnqueuedTimeUtcGet">
            <summary>Sets the shim of EventData.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.EnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of EventData.set_EnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.GetBodyStream">
            <summary>Sets the shim of EventData.GetBodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.GetBytes">
            <summary>Sets the shim of EventData.GetBytes()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.GetSystemPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.EventData,System.String,``0})">
            <summary>Sets the shim of EventData.GetSystemProperty(String key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.InitializeWithStreamStreamBoolean">
            <summary>Sets the shim of EventData.InitializeWithStream(Stream stream, Boolean ownsStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.IsReadOnlyMicrosoftServiceBusCommonIReadOnlyIndicatorget">
            <summary>Sets the shim of EventData.Microsoft.ServiceBus.Common.IReadOnlyIndicator.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.OffsetGet">
            <summary>Sets the shim of EventData.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.OffsetSetString">
            <summary>Sets the shim of EventData.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PartitionKeyGet">
            <summary>Sets the shim of EventData.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PartitionKeySetString">
            <summary>Sets the shim of EventData.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PopulateSbmpMessageForSendBrokeredMessage">
            <summary>Sets the shim of EventData.PopulateSbmpMessageForSend(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PropertiesGet">
            <summary>Sets the shim of EventData.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PropertiesSetIDictionaryOfStringObject">
            <summary>Sets the shim of EventData.set_Properties(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PublisherGet">
            <summary>Sets the shim of EventData.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.PublisherSetString">
            <summary>Sets the shim of EventData.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.ResetGetBodyCalled">
            <summary>Sets the shim of EventData.ResetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SequenceNumberGet">
            <summary>Sets the shim of EventData.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SequenceNumberSetInt64">
            <summary>Sets the shim of EventData.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SerializedSizeInBytesGet">
            <summary>Sets the shim of EventData.get_SerializedSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SetGetBodyCalled">
            <summary>Sets the shim of EventData.SetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SetSizeInBytesCalled">
            <summary>Sets the shim of EventData.SetSizeInBytesCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SystemPropertiesGet">
            <summary>Sets the shim of EventData.get_SystemProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.SystemPropertiesSetIDictionaryOfStringObject">
            <summary>Sets the shim of EventData.set_SystemProperties(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of EventData.ThrowIfDisposed()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.BodyStreamGet">
            <summary>Sets the shim of EventData.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.Clone">
            <summary>Sets the shim of EventData.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.CloneStreamStream">
            <summary>Sets the shim of EventData.CloneStream(Stream originalStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.Constructor">
            <summary>Sets the shim of EventData.EventData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ConstructorByteArray">
            <summary>Sets the shim of EventData.EventData(Byte[] byteArray)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ConstructorIListOfArraySegmentOfByte">
            <summary>Sets the shim of EventData.EventData(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; arraySegments)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ConstructorObjectXmlObjectSerializer">
            <summary>Sets the shim of EventData.EventData(Object content, XmlObjectSerializer serializer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ConstructorStream">
            <summary>Sets the shim of EventData.EventData(Stream stream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ConstructorStreamBoolean">
            <summary>Sets the shim of EventData.EventData(Stream stream, Boolean ownStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.DeliveryTagGet">
            <summary>Sets the shim of EventData.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of EventData.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.Dispose">
            <summary>Sets the shim of EventData.Dispose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.DisposeBoolean">
            <summary>Sets the shim of EventData.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.EnqueuedTimeUtcGet">
            <summary>Sets the shim of EventData.get_EnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.EnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of EventData.set_EnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.GetBodyStream">
            <summary>Sets the shim of EventData.GetBodyStream()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.GetBytes">
            <summary>Sets the shim of EventData.GetBytes()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.GetSystemPropertyOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of EventData.GetSystemProperty(String key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.InitializeWithStreamStreamBoolean">
            <summary>Sets the shim of EventData.InitializeWithStream(Stream stream, Boolean ownsStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.IsReadOnlyMicrosoftServiceBusCommonIReadOnlyIndicatorget">
            <summary>Sets the shim of EventData.Microsoft.ServiceBus.Common.IReadOnlyIndicator.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.OffsetGet">
            <summary>Sets the shim of EventData.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.OffsetSetString">
            <summary>Sets the shim of EventData.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PartitionKeyGet">
            <summary>Sets the shim of EventData.get_PartitionKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PartitionKeySetString">
            <summary>Sets the shim of EventData.set_PartitionKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PopulateSbmpMessageForSendBrokeredMessage">
            <summary>Sets the shim of EventData.PopulateSbmpMessageForSend(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PropertiesGet">
            <summary>Sets the shim of EventData.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PropertiesSetIDictionaryOfStringObject">
            <summary>Sets the shim of EventData.set_Properties(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PublisherGet">
            <summary>Sets the shim of EventData.get_Publisher()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.PublisherSetString">
            <summary>Sets the shim of EventData.set_Publisher(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ReadFullStreamStream">
            <summary>Sets the shim of EventData.ReadFullStream(Stream inputStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ResetGetBodyCalled">
            <summary>Sets the shim of EventData.ResetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SequenceNumberGet">
            <summary>Sets the shim of EventData.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SequenceNumberSetInt64">
            <summary>Sets the shim of EventData.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SerializedSizeInBytesGet">
            <summary>Sets the shim of EventData.get_SerializedSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SetGetBodyCalled">
            <summary>Sets the shim of EventData.SetGetBodyCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SetSizeInBytesCalled">
            <summary>Sets the shim of EventData.SetSizeInBytesCalled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SystemPropertiesGet">
            <summary>Sets the shim of EventData.get_SystemProperties()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.SystemPropertiesSetIDictionaryOfStringObject">
            <summary>Sets the shim of EventData.set_SystemProperties(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventData.ThrowIfDisposed">
            <summary>Sets the shim of EventData.ThrowIfDisposed()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.#ctor(Microsoft.ServiceBus.Messaging.EventDataSystemPropertyNames)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventDataSystemPropertyNames.Constructor">
            <summary>Sets the shim of EventDataSystemPropertyNames.EventDataSystemPropertyNames()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubClient</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.#ctor(Microsoft.ServiceBus.Messaging.EventHubClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.CreatePartitionedSenderAsyncString">
            <summary>Sets the shim of EventHubClient.CreatePartitionedSenderAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.CreatePartitionedSenderString">
            <summary>Sets the shim of EventHubClient.CreatePartitionedSender(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.CreateSenderAsyncString">
            <summary>Sets the shim of EventHubClient.CreateSenderAsync(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.CreateSenderString">
            <summary>Sets the shim of EventHubClient.CreateSender(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.EnsureCreateInternalSender">
            <summary>Sets the shim of EventHubClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetConsumerGroupString">
            <summary>Sets the shim of EventHubClient.GetConsumerGroup(String groupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetDefaultConsumerGroup">
            <summary>Sets the shim of EventHubClient.GetDefaultConsumerGroup()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetPartitionRuntimeInformationAsyncString">
            <summary>Sets the shim of EventHubClient.GetPartitionRuntimeInformationAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetPartitionRuntimeInformationString">
            <summary>Sets the shim of EventHubClient.GetPartitionRuntimeInformation(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetRuntimeInformation">
            <summary>Sets the shim of EventHubClient.GetRuntimeInformation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.GetRuntimeInformationAsync">
            <summary>Sets the shim of EventHubClient.GetRuntimeInformationAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.InternalSenderGet">
            <summary>Sets the shim of EventHubClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of EventHubClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnAbort">
            <summary>Sets the shim of EventHubClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubClient.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubClient.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of EventHubClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PathGet">
            <summary>Sets the shim of EventHubClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PathSetString">
            <summary>Sets the shim of EventHubClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of EventHubClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubClient.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubClient.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of EventHubClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.SendAsyncEventData">
            <summary>Sets the shim of EventHubClient.SendAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.SendBatchAsyncIEnumerableOfEventData">
            <summary>Sets the shim of EventHubClient.SendBatchAsync(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.SendBatchIEnumerableOfEventData">
            <summary>Sets the shim of EventHubClient.SendBatch(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.SendEventData">
            <summary>Sets the shim of EventHubClient.Send(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.ThrowIfSbmpClientString">
            <summary>Sets the shim of EventHubClient.ThrowIfSbmpClient(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.AllInstances.ThrowIfSenderNullString">
            <summary>Sets the shim of EventHubClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.ConstructorMessagingFactoryString">
            <summary>Sets the shim of EventHubClient.EventHubClient(MessagingFactory messagingFactory, String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreateFromConnectionStringString">
            <summary>Sets the shim of EventHubClient.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreateFromConnectionStringStringString">
            <summary>Sets the shim of EventHubClient.CreateFromConnectionString(String connectionString, String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreatePartitionedSenderAsyncString">
            <summary>Sets the shim of EventHubClient.CreatePartitionedSenderAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreatePartitionedSenderString">
            <summary>Sets the shim of EventHubClient.CreatePartitionedSender(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreateSenderAsyncString">
            <summary>Sets the shim of EventHubClient.CreateSenderAsync(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreateSenderString">
            <summary>Sets the shim of EventHubClient.CreateSender(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.CreateString">
            <summary>Sets the shim of EventHubClient.Create(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.EnsureCreateInternalSender">
            <summary>Sets the shim of EventHubClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetConsumerGroupString">
            <summary>Sets the shim of EventHubClient.GetConsumerGroup(String groupName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetDefaultConsumerGroup">
            <summary>Sets the shim of EventHubClient.GetDefaultConsumerGroup()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetPartitionRuntimeInformationAsyncString">
            <summary>Sets the shim of EventHubClient.GetPartitionRuntimeInformationAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetPartitionRuntimeInformationString">
            <summary>Sets the shim of EventHubClient.GetPartitionRuntimeInformation(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetRuntimeInformation">
            <summary>Sets the shim of EventHubClient.GetRuntimeInformation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.GetRuntimeInformationAsync">
            <summary>Sets the shim of EventHubClient.GetRuntimeInformationAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.InternalSenderGet">
            <summary>Sets the shim of EventHubClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.MessagingFactoryGet">
            <summary>Sets the shim of EventHubClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnAbort">
            <summary>Sets the shim of EventHubClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubClient.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubClient.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.OperationTimeoutGet">
            <summary>Sets the shim of EventHubClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PathGet">
            <summary>Sets the shim of EventHubClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PathSetString">
            <summary>Sets the shim of EventHubClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PrefetchCountGet">
            <summary>Sets the shim of EventHubClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubClient.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubClient.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of EventHubClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.SendAsyncEventData">
            <summary>Sets the shim of EventHubClient.SendAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.SendBatchAsyncIEnumerableOfEventData">
            <summary>Sets the shim of EventHubClient.SendBatchAsync(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.SendBatchIEnumerableOfEventData">
            <summary>Sets the shim of EventHubClient.SendBatch(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.SendEventData">
            <summary>Sets the shim of EventHubClient.Send(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.TestSmallPrefetchSizeGet">
            <summary>Sets the shim of EventHubClient.get_TestSmallPrefetchSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.TestSmallPrefetchSizeSetBoolean">
            <summary>Sets the shim of EventHubClient.set_TestSmallPrefetchSize(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.ThrowIfSbmpClientString">
            <summary>Sets the shim of EventHubClient.ThrowIfSbmpClient(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.ThrowIfSenderNullString">
            <summary>Sets the shim of EventHubClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.ValidateEventHubPrefetchBySizeInBytesNullableOfInt64">
            <summary>Sets the shim of EventHubClient.ValidateEventHubPrefetchBySizeInBytes(Nullable`1&lt;Int64&gt; sizeInBytes)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubClient.ValidateEventHubPrefetchCountInt32">
            <summary>Sets the shim of EventHubClient.ValidateEventHubPrefetchCount(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubConsumerGroup</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.#ctor(Microsoft.ServiceBus.Messaging.EventHubConsumerGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringDateTime">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, DateTime startingDateTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringDateTimeInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, DateTime startingDateTimeUtc, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringStringBoolean">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringStringBooleanInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Boolean offsetInclusive, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverAsyncStringStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringDateTime">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, DateTime startingDateTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringDateTimeInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, DateTime startingDateTimeUtc, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringStringBoolean">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringStringBooleanInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Boolean offsetInclusive, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.CreateReceiverStringStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.EventHubPathGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of EventHubConsumerGroup.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.EventProcessorLifeCycleManagerFaultedAddEventHandlerOfEventProcessorFaultedEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.add_EventProcessorLifeCycleManagerFaulted(EventHandler`1&lt;EventProcessorFaultedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.EventProcessorLifeCycleManagerFaultedRemoveEventHandlerOfEventProcessorFaultedEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.remove_EventProcessorLifeCycleManagerFaulted(EventHandler`1&lt;EventProcessorFaultedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.GroupNameGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.GroupNameSetString">
            <summary>Sets the shim of EventHubConsumerGroup.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.InternalSenderGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubConsumerGroup.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubConsumerGroup.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnAbort">
            <summary>Sets the shim of EventHubConsumerGroup.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubConsumerGroup.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubConsumerGroup.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubConsumerGroup.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OnEventProcessorLifeCycleManagerFaultedObjectEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.OnEventProcessorLifeCycleManagerFaulted(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubConsumerGroup.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubConsumerGroup.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorAsyncOf1LeaseICheckpointManager``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.EventHubConsumerGroup,Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorAsync(Lease lease, ICheckpointManager checkpointManager)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorAsyncOf1LeaseICheckpointManagerEventProcessorOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.EventHubConsumerGroup,Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorAsync(Lease lease, ICheckpointManager checkpointManager, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorFactoryAsyncLeaseICheckpointManagerIEventProcessorFactory">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactoryAsync(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorFactoryAsyncLeaseICheckpointManagerIEventProcessorFactoryEventProcessorOptions">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactoryAsync(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorFactoryLeaseICheckpointManagerIEventProcessorFactory">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactory(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorFactoryLeaseICheckpointManagerIEventProcessorFactoryEventProcessorOptions">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactory(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorOf1LeaseICheckpointManager``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.ServiceBus.Messaging.EventHubConsumerGroup,Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessor(Lease lease, ICheckpointManager checkpointManager)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.RegisterProcessorOf1LeaseICheckpointManagerEventProcessorOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.ServiceBus.Messaging.EventHubConsumerGroup,Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessor(Lease lease, ICheckpointManager checkpointManager, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.UnregisterProcessorAsyncLeaseCloseReason">
            <summary>Sets the shim of EventHubConsumerGroup.UnregisterProcessorAsync(Lease lease, CloseReason reason)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.AllInstances.UnregisterProcessorLeaseCloseReason">
            <summary>Sets the shim of EventHubConsumerGroup.UnregisterProcessor(Lease lease, CloseReason reason)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.ConstructorMessagingFactoryStringStringInt32NullableOfInt64">
            <summary>Sets the shim of EventHubConsumerGroup.EventHubConsumerGroup(MessagingFactory messagingFactory, String eventHubPath, String groupName, Int32 prefetchCount, Nullable`1&lt;Int64&gt; prefetchSizeInBytes)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringDateTime">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, DateTime startingDateTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringDateTimeInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, DateTime startingDateTimeUtc, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringStringBoolean">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringStringBooleanInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Boolean offsetInclusive, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverAsyncStringStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiverAsync(String partitionId, String startingOffset, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringDateTime">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, DateTime startingDateTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringDateTimeInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, DateTime startingDateTimeUtc, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringString">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringStringBoolean">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringStringBooleanInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Boolean offsetInclusive, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.CreateReceiverStringStringInt64">
            <summary>Sets the shim of EventHubConsumerGroup.CreateReceiver(String partitionId, String startingOffset, Int64 epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.EventHubPathGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.EventHubPathSetString">
            <summary>Sets the shim of EventHubConsumerGroup.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.EventProcessorLifeCycleManagerFaultedAddEventHandlerOfEventProcessorFaultedEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.add_EventProcessorLifeCycleManagerFaulted(EventHandler`1&lt;EventProcessorFaultedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.EventProcessorLifeCycleManagerFaultedRemoveEventHandlerOfEventProcessorFaultedEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.remove_EventProcessorLifeCycleManagerFaulted(EventHandler`1&lt;EventProcessorFaultedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.GroupNameGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_GroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.GroupNameSetString">
            <summary>Sets the shim of EventHubConsumerGroup.set_GroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.InternalSenderGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubConsumerGroup.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.MessagingFactoryGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubConsumerGroup.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnAbort">
            <summary>Sets the shim of EventHubConsumerGroup.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubConsumerGroup.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubConsumerGroup.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubConsumerGroup.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OnEventProcessorLifeCycleManagerFaultedObjectEventArgs">
            <summary>Sets the shim of EventHubConsumerGroup.OnEventProcessorLifeCycleManagerFaulted(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.OperationTimeoutGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.PrefetchCountGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubConsumerGroup.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubConsumerGroup.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubConsumerGroup.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorAsyncOf1LeaseICheckpointManager``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorAsync(Lease lease, ICheckpointManager checkpointManager)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorAsyncOf1LeaseICheckpointManagerEventProcessorOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions,System.Threading.Tasks.Task})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorAsync(Lease lease, ICheckpointManager checkpointManager, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorFactoryAsyncLeaseICheckpointManagerIEventProcessorFactory">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactoryAsync(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorFactoryAsyncLeaseICheckpointManagerIEventProcessorFactoryEventProcessorOptions">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactoryAsync(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorFactoryLeaseICheckpointManagerIEventProcessorFactory">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactory(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorFactoryLeaseICheckpointManagerIEventProcessorFactoryEventProcessorOptions">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessorFactory(Lease lease, ICheckpointManager checkpointManager, IEventProcessorFactory eventProcessorFactory, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorOf1LeaseICheckpointManager``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessor(Lease lease, ICheckpointManager checkpointManager)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.RegisterProcessorOf1LeaseICheckpointManagerEventProcessorOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.ServiceBus.Messaging.Lease,Microsoft.ServiceBus.Messaging.ICheckpointManager,Microsoft.ServiceBus.Messaging.EventProcessorOptions})">
            <summary>Sets the shim of EventHubConsumerGroup.RegisterProcessor(Lease lease, ICheckpointManager checkpointManager, EventProcessorOptions processorOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.UnregisterProcessorAsyncLeaseCloseReason">
            <summary>Sets the shim of EventHubConsumerGroup.UnregisterProcessorAsync(Lease lease, CloseReason reason)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup.UnregisterProcessorLeaseCloseReason">
            <summary>Sets the shim of EventHubConsumerGroup.UnregisterProcessor(Lease lease, CloseReason reason)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__10IAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__10(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__15IAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__15(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__1IAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__1(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__1aIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__1a(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__6IAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__6(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubConsumerGroup._CreateReceiverAsyncb__bIAsyncResult">
            <summary>Sets the shim of EventHubConsumerGroup.&lt;CreateReceiverAsync&gt;b__b(IAsyncResult r)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.#ctor(Microsoft.ServiceBus.Messaging.EventHubDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.AuthorizationGet">
            <summary>Sets the shim of EventHubDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of EventHubDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalAuthorizationGet">
            <summary>Sets the shim of EventHubDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of EventHubDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of EventHubDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalMessageRetentionInDaysGet">
            <summary>Sets the shim of EventHubDescription.get_InternalMessageRetentionInDays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalMessageRetentionInDaysSetNullableOfInt64">
            <summary>Sets the shim of EventHubDescription.set_InternalMessageRetentionInDays(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalPartitionCountGet">
            <summary>Sets the shim of EventHubDescription.get_InternalPartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalPartitionCountSetNullableOfInt32">
            <summary>Sets the shim of EventHubDescription.set_InternalPartitionCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalPartitionIdsGet">
            <summary>Sets the shim of EventHubDescription.get_InternalPartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalPartitionIdsSetStringArray">
            <summary>Sets the shim of EventHubDescription.set_InternalPartitionIds(String[] value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalRevokedPublishersStorageEntityNameGet">
            <summary>Sets the shim of EventHubDescription.get_InternalRevokedPublishersStorageEntityName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalRevokedPublishersStorageEntityNameSetString">
            <summary>Sets the shim of EventHubDescription.set_InternalRevokedPublishersStorageEntityName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalStatusGet">
            <summary>Sets the shim of EventHubDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of EventHubDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of EventHubDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of EventHubDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of EventHubDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.MessageRetentionInDaysGet">
            <summary>Sets the shim of EventHubDescription.get_MessageRetentionInDays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.MessageRetentionInDaysSetInt64">
            <summary>Sets the shim of EventHubDescription.set_MessageRetentionInDays(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of EventHubDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.PartitionCountGet">
            <summary>Sets the shim of EventHubDescription.get_PartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.PartitionCountSetInt32">
            <summary>Sets the shim of EventHubDescription.set_PartitionCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.PartitionIdsGet">
            <summary>Sets the shim of EventHubDescription.get_PartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.PathGet">
            <summary>Sets the shim of EventHubDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.PathSetString">
            <summary>Sets the shim of EventHubDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of EventHubDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of EventHubDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of EventHubDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.SetPartitionIdsStringArray">
            <summary>Sets the shim of EventHubDescription.SetPartitionIds(String[] partitionIds)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.StatusGet">
            <summary>Sets the shim of EventHubDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.StatusSetEntityStatus">
            <summary>Sets the shim of EventHubDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of EventHubDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of EventHubDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.AuthorizationGet">
            <summary>Sets the shim of EventHubDescription.get_Authorization()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of EventHubDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.Constructor">
            <summary>Sets the shim of EventHubDescription.EventHubDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.ConstructorString">
            <summary>Sets the shim of EventHubDescription.EventHubDescription(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.CreatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalAuthorizationGet">
            <summary>Sets the shim of EventHubDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of EventHubDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalCreatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of EventHubDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalMessageRetentionInDaysGet">
            <summary>Sets the shim of EventHubDescription.get_InternalMessageRetentionInDays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalMessageRetentionInDaysSetNullableOfInt64">
            <summary>Sets the shim of EventHubDescription.set_InternalMessageRetentionInDays(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalPartitionCountGet">
            <summary>Sets the shim of EventHubDescription.get_InternalPartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalPartitionCountSetNullableOfInt32">
            <summary>Sets the shim of EventHubDescription.set_InternalPartitionCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalPartitionIdsGet">
            <summary>Sets the shim of EventHubDescription.get_InternalPartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalPartitionIdsSetStringArray">
            <summary>Sets the shim of EventHubDescription.set_InternalPartitionIds(String[] value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalRevokedPublishersStorageEntityNameGet">
            <summary>Sets the shim of EventHubDescription.get_InternalRevokedPublishersStorageEntityName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalRevokedPublishersStorageEntityNameSetString">
            <summary>Sets the shim of EventHubDescription.set_InternalRevokedPublishersStorageEntityName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalStatusGet">
            <summary>Sets the shim of EventHubDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of EventHubDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of EventHubDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalUserMetadataGet">
            <summary>Sets the shim of EventHubDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of EventHubDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.MessageRetentionInDaysGet">
            <summary>Sets the shim of EventHubDescription.get_MessageRetentionInDays()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.MessageRetentionInDaysSetInt64">
            <summary>Sets the shim of EventHubDescription.set_MessageRetentionInDays(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of EventHubDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.PartitionCountGet">
            <summary>Sets the shim of EventHubDescription.get_PartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.PartitionCountSetInt32">
            <summary>Sets the shim of EventHubDescription.set_PartitionCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.PartitionIdsGet">
            <summary>Sets the shim of EventHubDescription.get_PartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.PathGet">
            <summary>Sets the shim of EventHubDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.PathSetString">
            <summary>Sets the shim of EventHubDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.RequiresEncryptionGet">
            <summary>Sets the shim of EventHubDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of EventHubDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of EventHubDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.SetPartitionIdsStringArray">
            <summary>Sets the shim of EventHubDescription.SetPartitionIds(String[] partitionIds)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.StatusGet">
            <summary>Sets the shim of EventHubDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.StatusSetEntityStatus">
            <summary>Sets the shim of EventHubDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.UpdatedAtGet">
            <summary>Sets the shim of EventHubDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.UserMetadataGet">
            <summary>Sets the shim of EventHubDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubDescription.UserMetadataSetString">
            <summary>Sets the shim of EventHubDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubReceiver</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.#ctor(Microsoft.ServiceBus.Messaging.EventHubReceiver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.CheckpointAsyncEventData">
            <summary>Sets the shim of EventHubReceiver.CheckpointAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.CheckpointEventData">
            <summary>Sets the shim of EventHubReceiver.Checkpoint(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EnableCheckpointGet">
            <summary>Sets the shim of EventHubReceiver.get_EnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EnsureCreateInternalReceiver">
            <summary>Sets the shim of EventHubReceiver.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EpochGet">
            <summary>Sets the shim of EventHubReceiver.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EpochSetNullableOfInt64">
            <summary>Sets the shim of EventHubReceiver.set_Epoch(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EventHubPathGet">
            <summary>Sets the shim of EventHubReceiver.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of EventHubReceiver.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.InternalReceiverGet">
            <summary>Sets the shim of EventHubReceiver.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of EventHubReceiver.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of EventHubReceiver.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubReceiver.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.NameGet">
            <summary>Sets the shim of EventHubReceiver.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.NameSetString">
            <summary>Sets the shim of EventHubReceiver.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OffsetInclusiveGet">
            <summary>Sets the shim of EventHubReceiver.get_OffsetInclusive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OffsetInclusiveSetBoolean">
            <summary>Sets the shim of EventHubReceiver.set_OffsetInclusive(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnAbort">
            <summary>Sets the shim of EventHubReceiver.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubReceiver.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubReceiver.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubReceiver.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubReceiver.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubReceiver.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of EventHubReceiver.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of EventHubReceiver.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PartitionIdGet">
            <summary>Sets the shim of EventHubReceiver.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of EventHubReceiver.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of EventHubReceiver.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubReceiver.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubReceiver.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubReceiver.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.Receive">
            <summary>Sets the shim of EventHubReceiver.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveAsync">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveAsyncInt32">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(Int32 maxCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveAsyncInt32TimeSpan">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(Int32 maxCount, TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveInt32">
            <summary>Sets the shim of EventHubReceiver.Receive(Int32 maxCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveInt32TimeSpan">
            <summary>Sets the shim of EventHubReceiver.Receive(Int32 maxCount, TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ReceiveTimeSpan">
            <summary>Sets the shim of EventHubReceiver.Receive(TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.StartingDateTimeUtcGet">
            <summary>Sets the shim of EventHubReceiver.get_StartingDateTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.StartingDateTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of EventHubReceiver.set_StartingDateTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.StartingOffsetGet">
            <summary>Sets the shim of EventHubReceiver.get_StartingOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.StartingOffsetSetString">
            <summary>Sets the shim of EventHubReceiver.set_StartingOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances.ThrowIfReceiverNullString">
            <summary>Sets the shim of EventHubReceiver.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances._CheckpointAsyncb__9IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;CheckpointAsync&gt;b__9(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances._ReceiveAsyncb__1IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;ReceiveAsync&gt;b__1(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.AllInstances._ReceiveAsyncb__5IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;ReceiveAsync&gt;b__5(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.CheckpointAsyncEventData">
            <summary>Sets the shim of EventHubReceiver.CheckpointAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.CheckpointEventData">
            <summary>Sets the shim of EventHubReceiver.Checkpoint(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ConstructorMessagingFactoryStringStringNullableOfDateTimeStringInt32NullableOfInt64NullableOfInt64">
            <summary>Sets the shim of EventHubReceiver.EventHubReceiver(MessagingFactory factory, String path, String consumerName, Nullable`1&lt;DateTime&gt; startingDateTimeUtc, String partitionId, Int32 prefetchCount, Nullable`1&lt;Int64&gt; prefetchSizeInBytes, Nullable`1&lt;Int64&gt; epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ConstructorMessagingFactoryStringStringStringNullableOfInt64Boolean">
            <summary>Sets the shim of EventHubReceiver.EventHubReceiver(MessagingFactory factory, String path, String consumerName, String partitionId, Nullable`1&lt;Int64&gt; epoch, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ConstructorMessagingFactoryStringStringStringStringInt32NullableOfInt64NullableOfInt64Boolean">
            <summary>Sets the shim of EventHubReceiver.EventHubReceiver(MessagingFactory factory, String path, String consumerName, String startingOffset, String partitionId, Int32 prefetchCount, Nullable`1&lt;Int64&gt; prefetchSizeInBytes, Nullable`1&lt;Int64&gt; epoch, Boolean offsetInclusive)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EnableCheckpointGet">
            <summary>Sets the shim of EventHubReceiver.get_EnableCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EnsureCreateInternalReceiver">
            <summary>Sets the shim of EventHubReceiver.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EpochGet">
            <summary>Sets the shim of EventHubReceiver.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EpochSetNullableOfInt64">
            <summary>Sets the shim of EventHubReceiver.set_Epoch(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EventHubPathGet">
            <summary>Sets the shim of EventHubReceiver.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.EventHubPathSetString">
            <summary>Sets the shim of EventHubReceiver.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.GetValueOrDefaultOffsetString">
            <summary>Sets the shim of EventHubReceiver.GetValueOrDefaultOffset(String startingOffset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.InternalReceiverGet">
            <summary>Sets the shim of EventHubReceiver.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of EventHubReceiver.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.MessagingFactoryGet">
            <summary>Sets the shim of EventHubReceiver.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubReceiver.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.NameGet">
            <summary>Sets the shim of EventHubReceiver.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.NameSetString">
            <summary>Sets the shim of EventHubReceiver.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OffsetInclusiveGet">
            <summary>Sets the shim of EventHubReceiver.get_OffsetInclusive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OffsetInclusiveSetBoolean">
            <summary>Sets the shim of EventHubReceiver.set_OffsetInclusive(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnAbort">
            <summary>Sets the shim of EventHubReceiver.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubReceiver.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubReceiver.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubReceiver.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubReceiver.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubReceiver.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OnOpenTimeSpan">
            <summary>Sets the shim of EventHubReceiver.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.OperationTimeoutGet">
            <summary>Sets the shim of EventHubReceiver.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PartitionIdGet">
            <summary>Sets the shim of EventHubReceiver.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PartitionIdSetString">
            <summary>Sets the shim of EventHubReceiver.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PrefetchCountGet">
            <summary>Sets the shim of EventHubReceiver.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PrefetchCountSetInt32">
            <summary>Sets the shim of EventHubReceiver.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PrefetchSizeInBytesGet">
            <summary>Sets the shim of EventHubReceiver.get_PrefetchSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.PrefetchSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of EventHubReceiver.set_PrefetchSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.Receive">
            <summary>Sets the shim of EventHubReceiver.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveAsync">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveAsyncInt32">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(Int32 maxCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveAsyncInt32TimeSpan">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(Int32 maxCount, TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of EventHubReceiver.ReceiveAsync(TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveInt32">
            <summary>Sets the shim of EventHubReceiver.Receive(Int32 maxCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveInt32TimeSpan">
            <summary>Sets the shim of EventHubReceiver.Receive(Int32 maxCount, TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ReceiveTimeSpan">
            <summary>Sets the shim of EventHubReceiver.Receive(TimeSpan waitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.StartingDateTimeUtcGet">
            <summary>Sets the shim of EventHubReceiver.get_StartingDateTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.StartingDateTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of EventHubReceiver.set_StartingDateTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.StartingOffsetGet">
            <summary>Sets the shim of EventHubReceiver.get_StartingOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.StartingOffsetSetString">
            <summary>Sets the shim of EventHubReceiver.set_StartingOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver.ThrowIfReceiverNullString">
            <summary>Sets the shim of EventHubReceiver.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver._CheckpointAsyncb__9IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;CheckpointAsync&gt;b__9(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver._ReceiveAsyncb__1IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;ReceiveAsync&gt;b__1(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubReceiver._ReceiveAsyncb__5IAsyncResult">
            <summary>Sets the shim of EventHubReceiver.&lt;ReceiveAsync&gt;b__5(IAsyncResult result)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.#ctor(Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.CreatedAtGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.CreatedAtSetDateTime">
            <summary>Sets the shim of EventHubRuntimeInformation.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PartitionCountGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_PartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PartitionCountSetInt32">
            <summary>Sets the shim of EventHubRuntimeInformation.set_PartitionCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PartitionIdsGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_PartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PartitionIdsSetStringArray">
            <summary>Sets the shim of EventHubRuntimeInformation.set_PartitionIds(String[] value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PathGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.PathSetString">
            <summary>Sets the shim of EventHubRuntimeInformation.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.TypeGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_Type()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.AllInstances.TypeSetString">
            <summary>Sets the shim of EventHubRuntimeInformation.set_Type(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.Constructor">
            <summary>Sets the shim of EventHubRuntimeInformation.EventHubRuntimeInformation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.CreatedAtGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.CreatedAtSetDateTime">
            <summary>Sets the shim of EventHubRuntimeInformation.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PartitionCountGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_PartitionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PartitionCountSetInt32">
            <summary>Sets the shim of EventHubRuntimeInformation.set_PartitionCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PartitionIdsGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_PartitionIds()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PartitionIdsSetStringArray">
            <summary>Sets the shim of EventHubRuntimeInformation.set_PartitionIds(String[] value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PathGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.PathSetString">
            <summary>Sets the shim of EventHubRuntimeInformation.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.TypeGet">
            <summary>Sets the shim of EventHubRuntimeInformation.get_Type()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubRuntimeInformation.TypeSetString">
            <summary>Sets the shim of EventHubRuntimeInformation.set_Type(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventHubSender</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.#ctor(Microsoft.ServiceBus.Messaging.EventHubSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.EnsureCreateInternalSender">
            <summary>Sets the shim of EventHubSender.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.InternalSenderGet">
            <summary>Sets the shim of EventHubSender.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubSender.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of EventHubSender.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubSender.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnAbort">
            <summary>Sets the shim of EventHubSender.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubSender.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubSender.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubSender.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubSender.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubSender.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of EventHubSender.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of EventHubSender.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.PartitionIdGet">
            <summary>Sets the shim of EventHubSender.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of EventHubSender.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.PathGet">
            <summary>Sets the shim of EventHubSender.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.PathSetString">
            <summary>Sets the shim of EventHubSender.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.SendAsyncEventData">
            <summary>Sets the shim of EventHubSender.SendAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.SendBatchAsyncIEnumerableOfEventData">
            <summary>Sets the shim of EventHubSender.SendBatchAsync(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.SendBatchIEnumerableOfEventData">
            <summary>Sets the shim of EventHubSender.SendBatch(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.SendEventData">
            <summary>Sets the shim of EventHubSender.Send(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.AllInstances.ThrowIfSenderNullString">
            <summary>Sets the shim of EventHubSender.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.ConstructorMessagingFactoryStringString">
            <summary>Sets the shim of EventHubSender.EventHubSender(MessagingFactory factory, String path, String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.CreateFromConnectionStringString">
            <summary>Sets the shim of EventHubSender.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.EnsureCreateInternalSender">
            <summary>Sets the shim of EventHubSender.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.InternalSenderGet">
            <summary>Sets the shim of EventHubSender.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.InternalSenderSetMessageSender">
            <summary>Sets the shim of EventHubSender.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.MessagingFactoryGet">
            <summary>Sets the shim of EventHubSender.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of EventHubSender.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnAbort">
            <summary>Sets the shim of EventHubSender.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubSender.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of EventHubSender.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnCloseTimeSpan">
            <summary>Sets the shim of EventHubSender.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnEndCloseIAsyncResult">
            <summary>Sets the shim of EventHubSender.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnEndOpenIAsyncResult">
            <summary>Sets the shim of EventHubSender.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OnOpenTimeSpan">
            <summary>Sets the shim of EventHubSender.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.OperationTimeoutGet">
            <summary>Sets the shim of EventHubSender.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.PartitionIdGet">
            <summary>Sets the shim of EventHubSender.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.PartitionIdSetString">
            <summary>Sets the shim of EventHubSender.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.PathGet">
            <summary>Sets the shim of EventHubSender.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.PathSetString">
            <summary>Sets the shim of EventHubSender.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.SendAsyncEventData">
            <summary>Sets the shim of EventHubSender.SendAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.SendBatchAsyncIEnumerableOfEventData">
            <summary>Sets the shim of EventHubSender.SendBatchAsync(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.SendBatchIEnumerableOfEventData">
            <summary>Sets the shim of EventHubSender.SendBatch(IEnumerable`1&lt;EventData&gt; eventDataList)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.SendEventData">
            <summary>Sets the shim of EventHubSender.Send(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventHubSender.ThrowIfSenderNullString">
            <summary>Sets the shim of EventHubSender.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.#ctor(Microsoft.ServiceBus.Messaging.EventProcessorFaultedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.AllInstances.LeaseTokenGet">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.get_LeaseToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.AllInstances.LeaseTokenSetString">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.set_LeaseToken(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.AllInstances.PartitionIdGet">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.set_PartitionId(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.ConstructorStringString">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.EventProcessorFaultedEventArgs(String partitinId, String leaseToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.LeaseTokenGet">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.get_LeaseToken()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.LeaseTokenSetString">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.set_LeaseToken(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.PartitionIdGet">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorFaultedEventArgs.PartitionIdSetString">
            <summary>Sets the shim of EventProcessorFaultedEventArgs.set_PartitionId(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.EventProcessorOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.#ctor(Microsoft.ServiceBus.Messaging.EventProcessorOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.InitialOffsetProviderGet">
            <summary>Sets the shim of EventProcessorOptions.get_InitialOffsetProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.InitialOffsetProviderSetFuncOfStringObject">
            <summary>Sets the shim of EventProcessorOptions.set_InitialOffsetProvider(Func`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.InvokeProcessorAfterReceiveTimeoutGet">
            <summary>Sets the shim of EventProcessorOptions.get_InvokeProcessorAfterReceiveTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.InvokeProcessorAfterReceiveTimeoutSetBoolean">
            <summary>Sets the shim of EventProcessorOptions.set_InvokeProcessorAfterReceiveTimeout(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.MaxBatchSizeGet">
            <summary>Sets the shim of EventProcessorOptions.get_MaxBatchSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.MaxBatchSizeSetInt32">
            <summary>Sets the shim of EventProcessorOptions.set_MaxBatchSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of EventProcessorOptions.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of EventProcessorOptions.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.RaiseExceptionReceivedIEventProcessorExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.RaiseExceptionReceived(IEventProcessor processor, ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.ReceiveTimeOutGet">
            <summary>Sets the shim of EventProcessorOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.AllInstances.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of EventProcessorOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.Constructor">
            <summary>Sets the shim of EventProcessorOptions.EventProcessorOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.DefaultOptionsGet">
            <summary>Sets the shim of EventProcessorOptions.get_DefaultOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.InitialOffsetProviderGet">
            <summary>Sets the shim of EventProcessorOptions.get_InitialOffsetProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.InitialOffsetProviderSetFuncOfStringObject">
            <summary>Sets the shim of EventProcessorOptions.set_InitialOffsetProvider(Func`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.InvokeProcessorAfterReceiveTimeoutGet">
            <summary>Sets the shim of EventProcessorOptions.get_InvokeProcessorAfterReceiveTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.InvokeProcessorAfterReceiveTimeoutSetBoolean">
            <summary>Sets the shim of EventProcessorOptions.set_InvokeProcessorAfterReceiveTimeout(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.MaxBatchSizeGet">
            <summary>Sets the shim of EventProcessorOptions.get_MaxBatchSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.MaxBatchSizeSetInt32">
            <summary>Sets the shim of EventProcessorOptions.set_MaxBatchSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.PrefetchCountGet">
            <summary>Sets the shim of EventProcessorOptions.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.PrefetchCountSetInt32">
            <summary>Sets the shim of EventProcessorOptions.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.RaiseExceptionReceivedIEventProcessorExceptionReceivedEventArgs">
            <summary>Sets the shim of EventProcessorOptions.RaiseExceptionReceived(IEventProcessor processor, ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.ReceiveTimeOutGet">
            <summary>Sets the shim of EventProcessorOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of EventProcessorOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions.StaticConstructor">
            <summary>Sets the shim of EventProcessorOptions.EventProcessorOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimEventProcessorOptions._cctorb__0String">
            <summary>Sets the shim of EventProcessorOptions.&lt;.cctor&gt;b__0(String partitionId)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.#ctor(Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.ActionGet">
            <summary>Sets the shim of ExceptionReceivedEventArgs.get_Action()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.ActionSetString">
            <summary>Sets the shim of ExceptionReceivedEventArgs.set_Action(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.AllInstances.ActionGet">
            <summary>Sets the shim of ExceptionReceivedEventArgs.get_Action()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.AllInstances.ActionSetString">
            <summary>Sets the shim of ExceptionReceivedEventArgs.set_Action(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of ExceptionReceivedEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of ExceptionReceivedEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.ConstructorExceptionString">
            <summary>Sets the shim of ExceptionReceivedEventArgs.ExceptionReceivedEventArgs(Exception exception, String action)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.ExceptionGet">
            <summary>Sets the shim of ExceptionReceivedEventArgs.get_Exception()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimExceptionReceivedEventArgs.ExceptionSetException">
            <summary>Sets the shim of ExceptionReceivedEventArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.FalseFilter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.#ctor(Microsoft.ServiceBus.Messaging.FalseFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances.MatchBrokeredMessage">
            <summary>Sets the shim of FalseFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances.Preprocess">
            <summary>Sets the shim of FalseFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances.RequiresPreprocessingGet">
            <summary>Sets the shim of FalseFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances.ToString01">
            <summary>Sets the shim of FalseFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.AllInstances.Validate">
            <summary>Sets the shim of FalseFilter.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.Constructor">
            <summary>Sets the shim of FalseFilter.FalseFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.MatchBrokeredMessage">
            <summary>Sets the shim of FalseFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.Preprocess">
            <summary>Sets the shim of FalseFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.RequiresPreprocessingGet">
            <summary>Sets the shim of FalseFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.StaticConstructor">
            <summary>Sets the shim of FalseFilter.FalseFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.ToString">
            <summary>Sets the shim of FalseFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFalseFilter.Validate">
            <summary>Sets the shim of FalseFilter.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Filter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.#ctor(Microsoft.ServiceBus.Messaging.Filter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.AllInstances.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectget">
            <summary>Sets the shim of Filter.System.Runtime.Serialization.IExtensibleDataObject.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.AllInstances.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectsetExtensionDataObject">
            <summary>Sets the shim of Filter.System.Runtime.Serialization.IExtensibleDataObject.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.Constructor">
            <summary>Sets the shim of Filter.Filter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectget">
            <summary>Sets the shim of Filter.System.Runtime.Serialization.IExtensibleDataObject.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilter.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectsetExtensionDataObject">
            <summary>Sets the shim of Filter.System.Runtime.Serialization.IExtensibleDataObject.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.FilterException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.#ctor(Microsoft.ServiceBus.Messaging.FilterException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FilterException.FilterException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.ConstructorString">
            <summary>Sets the shim of FilterException.FilterException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimFilterException.ConstructorStringException">
            <summary>Sets the shim of FilterException.FilterException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimLease">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.Lease</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.EpochGet">
            <summary>Sets the shim of Lease.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.EpochSetInt64">
            <summary>Sets the shim of Lease.set_Epoch(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.EqualsObject">
            <summary>Sets the shim of Lease.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.GetHashCode01">
            <summary>Sets the shim of Lease.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.IsExpired">
            <summary>Sets the shim of Lease.IsExpired()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.OffsetGet">
            <summary>Sets the shim of Lease.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.OffsetSetString">
            <summary>Sets the shim of Lease.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.OwnerGet">
            <summary>Sets the shim of Lease.get_Owner()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.OwnerSetString">
            <summary>Sets the shim of Lease.set_Owner(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.PartitionIdGet">
            <summary>Sets the shim of Lease.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of Lease.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.SequenceNumberGet">
            <summary>Sets the shim of Lease.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.SequenceNumberSetInt64">
            <summary>Sets the shim of Lease.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.TokenGet">
            <summary>Sets the shim of Lease.get_Token()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.AllInstances.TokenSetString">
            <summary>Sets the shim of Lease.set_Token(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.Constructor">
            <summary>Sets the shim of Lease.Lease()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.ConstructorLease">
            <summary>Sets the shim of Lease.Lease(Lease source)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.EpochGet">
            <summary>Sets the shim of Lease.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.EpochSetInt64">
            <summary>Sets the shim of Lease.set_Epoch(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.EqualsObject">
            <summary>Sets the shim of Lease.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.GetHashCode">
            <summary>Sets the shim of Lease.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.IsExpired">
            <summary>Sets the shim of Lease.IsExpired()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.OffsetGet">
            <summary>Sets the shim of Lease.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.OffsetSetString">
            <summary>Sets the shim of Lease.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.OwnerGet">
            <summary>Sets the shim of Lease.get_Owner()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.OwnerSetString">
            <summary>Sets the shim of Lease.set_Owner(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.PartitionIdGet">
            <summary>Sets the shim of Lease.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.PartitionIdSetString">
            <summary>Sets the shim of Lease.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.SequenceNumberGet">
            <summary>Sets the shim of Lease.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.SequenceNumberSetInt64">
            <summary>Sets the shim of Lease.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.TokenGet">
            <summary>Sets the shim of Lease.get_Token()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLease.TokenSetString">
            <summary>Sets the shim of Lease.set_Token(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.LeaseLostException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.LeaseLostException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of LeaseLostException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.AllInstances.LeaseGet">
            <summary>Sets the shim of LeaseLostException.get_Lease()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.AllInstances.LeaseSetLease">
            <summary>Sets the shim of LeaseLostException.set_Lease(Lease value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.Constructor">
            <summary>Sets the shim of LeaseLostException.LeaseLostException()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.ConstructorLease">
            <summary>Sets the shim of LeaseLostException.LeaseLostException(Lease lease)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.ConstructorLeaseException">
            <summary>Sets the shim of LeaseLostException.LeaseLostException(Lease lease, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of LeaseLostException.LeaseLostException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.ConstructorString">
            <summary>Sets the shim of LeaseLostException.LeaseLostException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.ConstructorStringException">
            <summary>Sets the shim of LeaseLostException.LeaseLostException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of LeaseLostException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.LeaseGet">
            <summary>Sets the shim of LeaseLostException.get_Lease()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimLeaseLostException.LeaseSetLease">
            <summary>Sets the shim of LeaseLostException.set_Lease(Lease value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimManagementStrings">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ManagementStrings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimManagementStrings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimManagementStrings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimManagementStrings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimManagementStrings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageCountDetails</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.#ctor(Microsoft.ServiceBus.Messaging.MessageCountDetails)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.ActiveMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_ActiveMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.ActiveMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_ActiveMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AddMessageCountInt64RefInt64">
            <summary>Sets the shim of MessageCountDetails.AddMessageCount(Int64&amp; value, Int64 delta)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AddMessageCountsInt64Int64Int64Int64Int64">
            <summary>Sets the shim of MessageCountDetails.AddMessageCounts(Int64 activeMessageDelta, Int64 scheduledMessageDelta, Int64 deadLetterMessageDelta, Int64 transferMessageDelta, Int64 transferDeadLetterMessageDelta)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.ActiveMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_ActiveMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.ActiveMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_ActiveMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.AddMessageCountsInt64Int64Int64Int64Int64">
            <summary>Sets the shim of MessageCountDetails.AddMessageCounts(Int64 activeMessageDelta, Int64 scheduledMessageDelta, Int64 deadLetterMessageDelta, Int64 transferMessageDelta, Int64 transferDeadLetterMessageDelta)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.DeadLetterMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_DeadLetterMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.DeadLetterMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_DeadLetterMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.InitializeMessageCountsInt64Int64Int64Int64Int64">
            <summary>Sets the shim of MessageCountDetails.InitializeMessageCounts(Int64 initialActiveMessageCount, Int64 initialScheduledMessageCount, Int64 initialDeadLetterMessageCount, Int64 initialTransferMessageCount, Int64 initialTransferDeadLetterMessageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.ScheduledMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_ScheduledMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.ScheduledMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_ScheduledMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.TransferDeadLetterMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_TransferDeadLetterMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.TransferDeadLetterMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_TransferDeadLetterMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.TransferMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_TransferMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.AllInstances.TransferMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_TransferMessageCount(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.Constructor">
            <summary>Sets the shim of MessageCountDetails.MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.ConstructorInt64Int64Int64Int64Int64">
            <summary>Sets the shim of MessageCountDetails.MessageCountDetails(Int64 activeMessageCount, Int64 deadletterMessageCount, Int64 scheduledMessageCount, Int64 transferMessageCount, Int64 transferDlqMessageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.DeadLetterMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_DeadLetterMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.DeadLetterMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_DeadLetterMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.InitializeMessageCountsInt64Int64Int64Int64Int64">
            <summary>Sets the shim of MessageCountDetails.InitializeMessageCounts(Int64 initialActiveMessageCount, Int64 initialScheduledMessageCount, Int64 initialDeadLetterMessageCount, Int64 initialTransferMessageCount, Int64 initialTransferDeadLetterMessageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.ScheduledMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_ScheduledMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.ScheduledMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_ScheduledMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.TransferDeadLetterMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_TransferDeadLetterMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.TransferDeadLetterMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_TransferDeadLetterMessageCount(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.TransferMessageCountGet">
            <summary>Sets the shim of MessageCountDetails.get_TransferMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageCountDetails.TransferMessageCountSetInt64">
            <summary>Sets the shim of MessageCountDetails.set_TransferMessageCount(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageLockLostException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.#ctor(Microsoft.ServiceBus.Messaging.MessageLockLostException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessageLockLostException.MessageLockLostException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.ConstructorString">
            <summary>Sets the shim of MessageLockLostException.MessageLockLostException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageLockLostException.ConstructorStringException">
            <summary>Sets the shim of MessageLockLostException.MessageLockLostException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageNotFoundException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.#ctor(Microsoft.ServiceBus.Messaging.MessageNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessageNotFoundException.MessageNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.ConstructorString">
            <summary>Sets the shim of MessageNotFoundException.MessageNotFoundException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageNotFoundException.ConstructorStringException">
            <summary>Sets the shim of MessageNotFoundException.MessageNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageReceiver</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.#ctor(Microsoft.ServiceBus.Messaging.MessageReceiver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonAsyncGuid">
            <summary>Sets the shim of MessageReceiver.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.AbandonBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonGuid">
            <summary>Sets the shim of MessageReceiver.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.Abandon(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Abandon(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.Abandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AddressGet">
            <summary>Sets the shim of MessageReceiver.get_Address()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonAsyncGuid">
            <summary>Sets the shim of MessageReceiver.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.AbandonBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonGuid">
            <summary>Sets the shim of MessageReceiver.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.Abandon(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Abandon(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.Abandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.AddressGet">
            <summary>Sets the shim of MessageReceiver.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BatchFlushIntervalGet">
            <summary>Sets the shim of MessageReceiver.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of MessageReceiver.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BatchingEnabledGet">
            <summary>Sets the shim of MessageReceiver.get_BatchingEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCheckpointTrackingContextArraySegmentOfByteAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginCheckpoint(TrackingContext trackingContext, ArraySegment`1&lt;Byte&gt; deliveryTag, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCompleteIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCompleteIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginCompleteTrackingContextIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeadLetterGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeadLetterIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeferGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeferIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekBatchInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekBatchTrackingContextInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginPeekInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveBatchInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginReceiveTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TrackingContext trackingContext, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginRenewMessageLocksTrackingContextIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceive2TrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive2(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveEventDataTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceiveEventData(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.BeginTryReceiveTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteAsyncGuid">
            <summary>Sets the shim of MessageReceiver.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteGuid">
            <summary>Sets the shim of MessageReceiver.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Complete(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.CompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Complete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterAsyncGuid">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterGuid">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterGuidStringString">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterIEnumerableOfGuidStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.DeadLetter(IEnumerable`1&lt;Guid&gt; lockTokens, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.DeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferAsyncGuid">
            <summary>Sets the shim of MessageReceiver.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferGuid">
            <summary>Sets the shim of MessageReceiver.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Defer(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.DeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.Defer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndAbandonIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndCheckpointIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndCheckpoint(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndCompleteIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndDeferIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndPeekIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndReceiveIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndRenewMessageLocksIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndRenewMessageLocks(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndTryReceive2IAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive2(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndTryReceiveEventDataIAsyncResultIEnumerableOfEventDataOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceiveEventData(IAsyncResult result, IEnumerable`1&lt;EventData&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndTryReceiveIAsyncResultBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive(IAsyncResult result, BrokeredMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EndTryReceiveIAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EpochGet">
            <summary>Sets the shim of MessageReceiver.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.EpochSetNullableOfInt64">
            <summary>Sets the shim of MessageReceiver.set_Epoch(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.FilterGet">
            <summary>Sets the shim of MessageReceiver.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.FilterSetFilter">
            <summary>Sets the shim of MessageReceiver.set_Filter(Filter value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.GetPropertyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.MessageReceiver,``0})">
            <summary>Sets the shim of MessageReceiver.GetProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.IncrementConnectionFailuresException">
            <summary>Sets the shim of MessageReceiver.IncrementConnectionFailures(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.InstanceTrackingContextGet">
            <summary>Sets the shim of MessageReceiver.get_InstanceTrackingContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.InstanceTrackingContextSetTrackingContext">
            <summary>Sets the shim of MessageReceiver.set_InstanceTrackingContext(TrackingContext value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.LastPeekedSequenceNumberGet">
            <summary>Sets the shim of MessageReceiver.get_LastPeekedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.LastPeekedSequenceNumberSetInt64">
            <summary>Sets the shim of MessageReceiver.set_LastPeekedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of MessageReceiver.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of MessageReceiver.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ModeGet">
            <summary>Sets the shim of MessageReceiver.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ModeSetReceiveMode">
            <summary>Sets the shim of MessageReceiver.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OffsetInclusiveGet">
            <summary>Sets the shim of MessageReceiver.get_OffsetInclusive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OffsetInclusiveSetBoolean">
            <summary>Sets the shim of MessageReceiver.set_OffsetInclusive(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnBeginTryReceiveEventDataTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.OnBeginTryReceiveEventData(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnCompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnEndTryReceiveEventDataIAsyncResultIEnumerableOfEventDataOut">
            <summary>Sets the shim of MessageReceiver.OnEndTryReceiveEventData(IAsyncResult result, IEnumerable`1&lt;EventData&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of MessageReceiver.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of MessageReceiver.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnPeekTrackingContextInt64Int32TimeSpan">
            <summary>Sets the shim of MessageReceiver.OnPeek(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnRenewMessageLocksTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnTryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.OnTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OnTryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.OnTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of MessageReceiver.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PartitionIdGet">
            <summary>Sets the shim of MessageReceiver.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of MessageReceiver.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.Peek">
            <summary>Sets the shim of MessageReceiver.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekAsync">
            <summary>Sets the shim of MessageReceiver.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekAsyncInt64">
            <summary>Sets the shim of MessageReceiver.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekBatchAsyncInt32">
            <summary>Sets the shim of MessageReceiver.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of MessageReceiver.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekBatchInt32">
            <summary>Sets the shim of MessageReceiver.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekBatchInt64Int32">
            <summary>Sets the shim of MessageReceiver.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekBatchTrackingContextInt64Int32TimeSpan">
            <summary>Sets the shim of MessageReceiver.PeekBatch(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekInt64">
            <summary>Sets the shim of MessageReceiver.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PeekTrackingContextInt64TimeSpan">
            <summary>Sets the shim of MessageReceiver.Peek(TrackingContext trackingContext, Int64 fromSequenceNumber, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of MessageReceiver.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of MessageReceiver.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PrefetchEventSizeInBytesGet">
            <summary>Sets the shim of MessageReceiver.get_PrefetchEventSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.PrefetchEventSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of MessageReceiver.set_PrefetchEventSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.Receive">
            <summary>Sets the shim of MessageReceiver.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveAsync">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveAsyncInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchInt32">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveInt64">
            <summary>Sets the shim of MessageReceiver.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiveTimeSpan">
            <summary>Sets the shim of MessageReceiver.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiverStartTimeGet">
            <summary>Sets the shim of MessageReceiver.get_ReceiverStartTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ReceiverStartTimeSetNullableOfDateTime">
            <summary>Sets the shim of MessageReceiver.set_ReceiverStartTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.SetReceiveContextIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageReceiver.SetReceiveContext(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.StartOffsetGet">
            <summary>Sets the shim of MessageReceiver.get_StartOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.StartOffsetSetString">
            <summary>Sets the shim of MessageReceiver.set_StartOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TestConnectionFailuresGet">
            <summary>Sets the shim of MessageReceiver.get_TestConnectionFailures()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.ThrowIfNotPeekLockMode">
            <summary>Sets the shim of MessageReceiver.ThrowIfNotPeekLockMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveIEnumerableOfInt64IEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveInt32IEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(Int32 messageCount, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveTimeSpanBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TimeSpan serverWaitTime, BrokeredMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.AllInstances.TryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BatchFlushIntervalGet">
            <summary>Sets the shim of MessageReceiver.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of MessageReceiver.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BatchingEnabledGet">
            <summary>Sets the shim of MessageReceiver.get_BatchingEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCheckpointTrackingContextArraySegmentOfByteAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginCheckpoint(TrackingContext trackingContext, ArraySegment`1&lt;Byte&gt; deliveryTag, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCompleteIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCompleteIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginCompleteTrackingContextIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeadLetterGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeadLetterIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeferGuidAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeferIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekBatchInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekBatchTrackingContextInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeekBatch(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginPeekInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginPeek(Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveBatchInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginReceiveTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginReceive(TrackingContext trackingContext, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginRenewMessageLocksTrackingContextIEnumerableOfGuidTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceive2TrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive2(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveEventDataTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceiveEventData(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveInt32AsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BeginTryReceiveTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.BeginTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteAsyncGuid">
            <summary>Sets the shim of MessageReceiver.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of MessageReceiver.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteGuid">
            <summary>Sets the shim of MessageReceiver.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Complete(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.CompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Complete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ConstructorMessagingFactoryRetryPolicyReceiveModeFilter">
            <summary>Sets the shim of MessageReceiver.MessageReceiver(MessagingFactory messagingFactory, RetryPolicy retryPolicy, ReceiveMode receiveMode, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterAsyncGuid">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of MessageReceiver.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterGuid">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterGuidStringString">
            <summary>Sets the shim of MessageReceiver.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterIEnumerableOfGuidStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.DeadLetter(IEnumerable`1&lt;Guid&gt; lockTokens, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.DeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferAsyncGuid">
            <summary>Sets the shim of MessageReceiver.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferGuid">
            <summary>Sets the shim of MessageReceiver.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of MessageReceiver.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.Defer(IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.DeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.Defer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndAbandonIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndCheckpointIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndCheckpoint(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndCompleteIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndDeferIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndPeekIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndReceiveIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndRenewMessageLocksIAsyncResult">
            <summary>Sets the shim of MessageReceiver.EndRenewMessageLocks(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndTryReceive2IAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive2(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndTryReceiveEventDataIAsyncResultIEnumerableOfEventDataOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceiveEventData(IAsyncResult result, IEnumerable`1&lt;EventData&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndTryReceiveIAsyncResultBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive(IAsyncResult result, BrokeredMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EndTryReceiveIAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.EndTryReceive(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EpochGet">
            <summary>Sets the shim of MessageReceiver.get_Epoch()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.EpochSetNullableOfInt64">
            <summary>Sets the shim of MessageReceiver.set_Epoch(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.FilterGet">
            <summary>Sets the shim of MessageReceiver.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.FilterSetFilter">
            <summary>Sets the shim of MessageReceiver.set_Filter(Filter value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.GetLockTokenBrokeredMessage">
            <summary>Sets the shim of MessageReceiver.GetLockToken(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.GetLockTokensIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageReceiver.GetLockTokens(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.GetPropertyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of MessageReceiver.GetProperty()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.GetTopMessageIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageReceiver.GetTopMessage(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.IncrementConnectionFailuresException">
            <summary>Sets the shim of MessageReceiver.IncrementConnectionFailures(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.InstanceTrackingContextGet">
            <summary>Sets the shim of MessageReceiver.get_InstanceTrackingContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.InstanceTrackingContextSetTrackingContext">
            <summary>Sets the shim of MessageReceiver.set_InstanceTrackingContext(TrackingContext value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.LastPeekedSequenceNumberGet">
            <summary>Sets the shim of MessageReceiver.get_LastPeekedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.LastPeekedSequenceNumberSetInt64">
            <summary>Sets the shim of MessageReceiver.set_LastPeekedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.MessagingFactoryGet">
            <summary>Sets the shim of MessageReceiver.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of MessageReceiver.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ModeGet">
            <summary>Sets the shim of MessageReceiver.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ModeSetReceiveMode">
            <summary>Sets the shim of MessageReceiver.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OffsetInclusiveGet">
            <summary>Sets the shim of MessageReceiver.get_OffsetInclusive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OffsetInclusiveSetBoolean">
            <summary>Sets the shim of MessageReceiver.set_OffsetInclusive(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnBeginTryReceiveEventDataTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageReceiver.OnBeginTryReceiveEventData(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnCompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnEndTryReceiveEventDataIAsyncResultIEnumerableOfEventDataOut">
            <summary>Sets the shim of MessageReceiver.OnEndTryReceiveEventData(IAsyncResult result, IEnumerable`1&lt;EventData&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of MessageReceiver.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of MessageReceiver.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnPeekTrackingContextInt64Int32TimeSpan">
            <summary>Sets the shim of MessageReceiver.OnPeek(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnRenewMessageLocksTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageReceiver.OnRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnTryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.OnTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OnTryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.OnTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.OperationTimeoutGet">
            <summary>Sets the shim of MessageReceiver.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PartitionIdGet">
            <summary>Sets the shim of MessageReceiver.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PartitionIdSetString">
            <summary>Sets the shim of MessageReceiver.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.Peek">
            <summary>Sets the shim of MessageReceiver.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekAsync">
            <summary>Sets the shim of MessageReceiver.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekAsyncInt64">
            <summary>Sets the shim of MessageReceiver.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekBatchAsyncInt32">
            <summary>Sets the shim of MessageReceiver.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of MessageReceiver.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekBatchInt32">
            <summary>Sets the shim of MessageReceiver.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekBatchInt64Int32">
            <summary>Sets the shim of MessageReceiver.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekBatchTrackingContextInt64Int32TimeSpan">
            <summary>Sets the shim of MessageReceiver.PeekBatch(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekInt64">
            <summary>Sets the shim of MessageReceiver.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PeekTrackingContextInt64TimeSpan">
            <summary>Sets the shim of MessageReceiver.Peek(TrackingContext trackingContext, Int64 fromSequenceNumber, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PrefetchCountGet">
            <summary>Sets the shim of MessageReceiver.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PrefetchCountSetInt32">
            <summary>Sets the shim of MessageReceiver.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PrefetchEventSizeInBytesGet">
            <summary>Sets the shim of MessageReceiver.get_PrefetchEventSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.PrefetchEventSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of MessageReceiver.set_PrefetchEventSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.Receive">
            <summary>Sets the shim of MessageReceiver.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveAsync">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveAsyncInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchInt32">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of MessageReceiver.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveInt64">
            <summary>Sets the shim of MessageReceiver.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiveTimeSpan">
            <summary>Sets the shim of MessageReceiver.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiverStartTimeGet">
            <summary>Sets the shim of MessageReceiver.get_ReceiverStartTime()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ReceiverStartTimeSetNullableOfDateTime">
            <summary>Sets the shim of MessageReceiver.set_ReceiverStartTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.SetReceiveContextIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageReceiver.SetReceiveContext(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.StartOffsetGet">
            <summary>Sets the shim of MessageReceiver.get_StartOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.StartOffsetSetString">
            <summary>Sets the shim of MessageReceiver.set_StartOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TestConnectionFailuresGet">
            <summary>Sets the shim of MessageReceiver.get_TestConnectionFailures()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.ThrowIfNotPeekLockMode">
            <summary>Sets the shim of MessageReceiver.ThrowIfNotPeekLockMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveIEnumerableOfInt64IEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveInt32IEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(Int32 messageCount, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveTimeSpanBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TimeSpan serverWaitTime, BrokeredMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageReceiver.TryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageReceiver.TryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageSender</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.#ctor(Microsoft.ServiceBus.Messaging.MessageSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AddressGet">
            <summary>Sets the shim of MessageSender.get_Address()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.AddressGet">
            <summary>Sets the shim of MessageSender.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BatchFlushIntervalGet">
            <summary>Sets the shim of MessageSender.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of MessageSender.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BatchingEnabledGet">
            <summary>Sets the shim of MessageSender.get_BatchingEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginCancelScheduledMessageTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginCancelScheduledMessage(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginScheduleMessageTrackingContextIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginScheduleMessage(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(BrokeredMessage message, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendEventDataTrackingContextIEnumerableOfEventDataTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSendEventData(TrackingContext trackingContext, IEnumerable`1&lt;EventData&gt; eventDatas, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.BeginSendTrackingContextIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.DisableSendBatchAutoGroupingGet">
            <summary>Sets the shim of MessageSender.get_DisableSendBatchAutoGrouping()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.DisableSendBatchAutoGroupingSetBoolean">
            <summary>Sets the shim of MessageSender.set_DisableSendBatchAutoGrouping(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of MessageSender.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of MessageSender.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.EndSendBatchIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.EndSendEventDataIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSendEventData(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.EndSendIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.IncrementConnectionFailuresException">
            <summary>Sets the shim of MessageSender.IncrementConnectionFailures(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of MessageSender.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of MessageSender.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.OnSendTrackingContextIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.OnSend(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of MessageSender.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.PartitionIdGet">
            <summary>Sets the shim of MessageSender.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of MessageSender.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendAsyncBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendBrokeredMessage">
            <summary>Sets the shim of MessageSender.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(BrokeredMessage message, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.Send(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.SendTrackingContextIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.TestConnectionFailuresGet">
            <summary>Sets the shim of MessageSender.get_TestConnectionFailures()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.AllInstances.ValidateIEnumerableOfEventData">
            <summary>Sets the shim of MessageSender.Validate(IEnumerable`1&lt;EventData&gt; events)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BatchFlushIntervalGet">
            <summary>Sets the shim of MessageSender.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of MessageSender.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BatchingEnabledGet">
            <summary>Sets the shim of MessageSender.get_BatchingEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginCancelScheduledMessageTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginCancelScheduledMessage(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; sequenceNumbers, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginScheduleMessageTrackingContextIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginScheduleMessage(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(BrokeredMessage message, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendEventDataTrackingContextIEnumerableOfEventDataTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSendEventData(TrackingContext trackingContext, IEnumerable`1&lt;EventData&gt; eventDatas, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BeginSendTrackingContextIEnumerableOfBrokeredMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSender.BeginSend(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.ConstructorMessagingFactoryRetryPolicy">
            <summary>Sets the shim of MessageSender.MessageSender(MessagingFactory messagingFactory, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.DisableSendBatchAutoGroupingGet">
            <summary>Sets the shim of MessageSender.get_DisableSendBatchAutoGrouping()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.DisableSendBatchAutoGroupingSetBoolean">
            <summary>Sets the shim of MessageSender.set_DisableSendBatchAutoGrouping(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of MessageSender.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of MessageSender.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.EndSendBatchIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.EndSendEventDataIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSendEventData(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.EndSendIAsyncResult">
            <summary>Sets the shim of MessageSender.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.IncrementConnectionFailuresException">
            <summary>Sets the shim of MessageSender.IncrementConnectionFailures(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.MessagingFactoryGet">
            <summary>Sets the shim of MessageSender.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of MessageSender.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.OnSendTrackingContextIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.OnSend(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.OperationTimeoutGet">
            <summary>Sets the shim of MessageSender.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.PartitionIdGet">
            <summary>Sets the shim of MessageSender.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.PartitionIdSetString">
            <summary>Sets the shim of MessageSender.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendAsyncBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendBrokeredMessage">
            <summary>Sets the shim of MessageSender.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(BrokeredMessage message, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of MessageSender.Send(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.SendTrackingContextIEnumerableOfBrokeredMessageTimeSpan">
            <summary>Sets the shim of MessageSender.Send(TrackingContext trackingContext, IEnumerable`1&lt;BrokeredMessage&gt; messages, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.TestConnectionFailuresGet">
            <summary>Sets the shim of MessageSender.get_TestConnectionFailures()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSender.ValidateIEnumerableOfEventData">
            <summary>Sets the shim of MessageSender.Validate(IEnumerable`1&lt;EventData&gt; events)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageSession</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.#ctor(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AbortInnerReceiverAndFault">
            <summary>Sets the shim of MessageSession.AbortInnerReceiverAndFault()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.AbortInnerReceiverAndFault">
            <summary>Sets the shim of MessageSession.AbortInnerReceiverAndFault()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.BeginGetStateAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginGetState(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.BeginRenewLockAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginRenewLock(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.BeginSetStateStreamAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginSetState(Stream sessionState, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.EndGetStateIAsyncResult">
            <summary>Sets the shim of MessageSession.EndGetState(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.EndRenewLockIAsyncResult">
            <summary>Sets the shim of MessageSession.EndRenewLock(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.EndSetStateIAsyncResult">
            <summary>Sets the shim of MessageSession.EndSetState(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.GetState">
            <summary>Sets the shim of MessageSession.GetState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.GetStateAsync">
            <summary>Sets the shim of MessageSession.GetStateAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.GetStateTrackingContext">
            <summary>Sets the shim of MessageSession.GetState(TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.InnerMessageReceiverGet">
            <summary>Sets the shim of MessageSession.get_InnerMessageReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.InnerMessageReceiverSetMessageReceiver">
            <summary>Sets the shim of MessageSession.set_InnerMessageReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.InnerReceiverFaultedObjectEventArgs">
            <summary>Sets the shim of MessageSession.InnerReceiverFaulted(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.LastPeekedSequenceNumberGet">
            <summary>Sets the shim of MessageSession.get_LastPeekedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.LastPeekedSequenceNumberSetInt64">
            <summary>Sets the shim of MessageSession.set_LastPeekedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.LockedUntilUtcGet">
            <summary>Sets the shim of MessageSession.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.LockedUntilUtcSetDateTime">
            <summary>Sets the shim of MessageSession.set_LockedUntilUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageSession.OnAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnAbort">
            <summary>Sets the shim of MessageSession.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginCompleteTrackingContextIEnumerableOfArraySegmentOfByteBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;ArraySegment`1&lt;Byte&gt;&gt; deliveryTags, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginCompleteTrackingContextIEnumerableOfGuidBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginPeekTrackingContextInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginPeek(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginRenewMessageLocksTrackingContextIEnumerableOfGuidBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginTryReceive2TrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive2(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginTryReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; receipts, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnBeginTryReceiveTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnCompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageSession.OnComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageSession.OnDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageSession.OnDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndAbandonIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndCompleteIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndDeadLetterIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndDeferIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndOpenIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndPeekIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndRenewMessageLocksIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndRenewMessageLocks(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndTryReceive2IAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnEndTryReceive2(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnEndTryReceiveIAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnEndTryReceive(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnGetStateTrackingContextTimeSpan">
            <summary>Sets the shim of MessageSession.OnGetState(TrackingContext trackingContext, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnRenewLockTrackingContextTimeSpan">
            <summary>Sets the shim of MessageSession.OnRenewLock(TrackingContext trackingContext, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnSetStateTrackingContextStreamTimeSpan">
            <summary>Sets the shim of MessageSession.OnSetState(TrackingContext trackingContext, Stream stream, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnTryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; receipts, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.OnTryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.PathGet">
            <summary>Sets the shim of MessageSession.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of MessageSession.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of MessageSession.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.ProcessExceptionException">
            <summary>Sets the shim of MessageSession.ProcessException(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.RenewLock">
            <summary>Sets the shim of MessageSession.RenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.RenewLockAsync">
            <summary>Sets the shim of MessageSession.RenewLockAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SessionIdGet">
            <summary>Sets the shim of MessageSession.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SessionIdSetString">
            <summary>Sets the shim of MessageSession.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SetStateAsyncStream">
            <summary>Sets the shim of MessageSession.SetStateAsync(Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SetStateStream">
            <summary>Sets the shim of MessageSession.SetState(Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SetStateTrackingContextStream">
            <summary>Sets the shim of MessageSession.SetState(TrackingContext trackingContext, Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.AllInstances.SupportsGetRuntimeEntityDescriptionGet">
            <summary>Sets the shim of MessageSession.get_SupportsGetRuntimeEntityDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.BeginGetStateAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginGetState(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.BeginRenewLockAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginRenewLock(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.BeginSetStateStreamAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.BeginSetState(Stream sessionState, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.ConstructorReceiveModeStringDateTimeMessageReceiver">
            <summary>Sets the shim of MessageSession.MessageSession(ReceiveMode receiveMode, String sessionId, DateTime lockedUntilUtc, MessageReceiver innerReceiver)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.ConstructorReceiveModeStringDateTimeMessagingFactoryRetryPolicy">
            <summary>Sets the shim of MessageSession.MessageSession(ReceiveMode receiveMode, String sessionId, DateTime lockedUntilUtc, MessagingFactory messagingFactory, RetryPolicy retryPolicy)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.EndGetStateIAsyncResult">
            <summary>Sets the shim of MessageSession.EndGetState(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.EndRenewLockIAsyncResult">
            <summary>Sets the shim of MessageSession.EndRenewLock(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.EndSetStateIAsyncResult">
            <summary>Sets the shim of MessageSession.EndSetState(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.GetState">
            <summary>Sets the shim of MessageSession.GetState()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.GetStateAsync">
            <summary>Sets the shim of MessageSession.GetStateAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.GetStateTrackingContext">
            <summary>Sets the shim of MessageSession.GetState(TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.InnerMessageReceiverGet">
            <summary>Sets the shim of MessageSession.get_InnerMessageReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.InnerMessageReceiverSetMessageReceiver">
            <summary>Sets the shim of MessageSession.set_InnerMessageReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.InnerReceiverFaultedObjectEventArgs">
            <summary>Sets the shim of MessageSession.InnerReceiverFaulted(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.LastPeekedSequenceNumberGet">
            <summary>Sets the shim of MessageSession.get_LastPeekedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.LastPeekedSequenceNumberSetInt64">
            <summary>Sets the shim of MessageSession.set_LastPeekedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.LockedUntilUtcGet">
            <summary>Sets the shim of MessageSession.get_LockedUntilUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.LockedUntilUtcSetDateTime">
            <summary>Sets the shim of MessageSession.set_LockedUntilUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageSession.OnAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnAbort">
            <summary>Sets the shim of MessageSession.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginAbandonTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginAbandon(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginCompleteTrackingContextIEnumerableOfArraySegmentOfByteBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;ArraySegment`1&lt;Byte&gt;&gt; deliveryTags, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginCompleteTrackingContextIEnumerableOfGuidBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginGetRuntimeEntityDescriptionAsyncResultTrackingContextTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginGetRuntimeEntityDescriptionAsyncResult(TrackingContext trackingContext, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginPeekTrackingContextInt64Int32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginPeek(TrackingContext trackingContext, Int64 fromSequenceNumber, Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginRenewMessageLocksTrackingContextIEnumerableOfGuidBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginRenewMessageLocks(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, Boolean fromSync, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginTryReceive2TrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive2(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginTryReceiveTrackingContextIEnumerableOfInt64TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; receipts, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnBeginTryReceiveTrackingContextInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessageSession.OnBeginTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnCompleteTrackingContextIEnumerableOfGuidTimeSpan">
            <summary>Sets the shim of MessageSession.OnComplete(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnDeadLetterTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectStringStringTimeSpan">
            <summary>Sets the shim of MessageSession.OnDeadLetter(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, String deadLetterReason, String deadLetterErrorDescription, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnDeferTrackingContextIEnumerableOfGuidIDictionaryOfStringObjectTimeSpan">
            <summary>Sets the shim of MessageSession.OnDefer(TrackingContext trackingContext, IEnumerable`1&lt;Guid&gt; lockTokens, IDictionary`2&lt;String,Object&gt; propertiesToModify, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndAbandonIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndCloseIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndCompleteIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndDeadLetterIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndDeferIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndOpenIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndPeekIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndRenewMessageLocksIAsyncResult">
            <summary>Sets the shim of MessageSession.OnEndRenewMessageLocks(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndTryReceive2IAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnEndTryReceive2(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnEndTryReceiveIAsyncResultIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnEndTryReceive(IAsyncResult result, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnGetStateTrackingContextTimeSpan">
            <summary>Sets the shim of MessageSession.OnGetState(TrackingContext trackingContext, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnRenewLockTrackingContextTimeSpan">
            <summary>Sets the shim of MessageSession.OnRenewLock(TrackingContext trackingContext, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnSetStateTrackingContextStreamTimeSpan">
            <summary>Sets the shim of MessageSession.OnSetState(TrackingContext trackingContext, Stream stream, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnTryReceiveTrackingContextIEnumerableOfInt64TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnTryReceive(TrackingContext trackingContext, IEnumerable`1&lt;Int64&gt; receipts, TimeSpan timeout, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.OnTryReceiveTrackingContextInt32TimeSpanIEnumerableOfBrokeredMessageOut">
            <summary>Sets the shim of MessageSession.OnTryReceive(TrackingContext trackingContext, Int32 messageCount, TimeSpan serverWaitTime, IEnumerable`1&lt;BrokeredMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.PathGet">
            <summary>Sets the shim of MessageSession.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.PrefetchCountGet">
            <summary>Sets the shim of MessageSession.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.PrefetchCountSetInt32">
            <summary>Sets the shim of MessageSession.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.ProcessExceptionException">
            <summary>Sets the shim of MessageSession.ProcessException(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.RenewLock">
            <summary>Sets the shim of MessageSession.RenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.RenewLockAsync">
            <summary>Sets the shim of MessageSession.RenewLockAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SessionIdGet">
            <summary>Sets the shim of MessageSession.get_SessionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SessionIdSetString">
            <summary>Sets the shim of MessageSession.set_SessionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SetStateAsyncStream">
            <summary>Sets the shim of MessageSession.SetStateAsync(Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SetStateStream">
            <summary>Sets the shim of MessageSession.SetState(Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SetStateTrackingContextStream">
            <summary>Sets the shim of MessageSession.SetState(TrackingContext trackingContext, Stream sessionState)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSession.SupportsGetRuntimeEntityDescriptionGet">
            <summary>Sets the shim of MessageSession.get_SupportsGetRuntimeEntityDescription()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.#ctor(Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnCloseSessionAsyncMessageSession">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnMessageAsyncMessageSessionBrokeredMessage">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnSessionLostAsyncException">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances.OnCloseSessionAsyncMessageSession">
            <summary>Sets the shim of MessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.AllInstances.OnSessionLostAsyncException">
            <summary>Sets the shim of MessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.Bind(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.Constructor">
            <summary>Sets the shim of MessageSessionAsyncHandler.MessageSessionAsyncHandler()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnCloseSessionAsyncMessageSession">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnMessageAsyncMessageSessionBrokeredMessage">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.MicrosoftServiceBusMessagingIMessageSessionAsyncHandlerOnSessionLostAsyncException">
            <summary>Sets the shim of MessageSessionAsyncHandler.Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.OnCloseSessionAsyncMessageSession">
            <summary>Sets the shim of MessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionAsyncHandler.OnSessionLostAsyncException">
            <summary>Sets the shim of MessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageSessionHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.#ctor(Microsoft.ServiceBus.Messaging.MessageSessionHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionHandlerOnCloseSessionMessageSession">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionHandlerOnMessageMessageSessionBrokeredMessage">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances.MicrosoftServiceBusMessagingIMessageSessionHandlerOnSessionLostException">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances.OnCloseSessionMessageSession">
            <summary>Sets the shim of MessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.AllInstances.OnSessionLostException">
            <summary>Sets the shim of MessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.Bind(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.Constructor">
            <summary>Sets the shim of MessageSessionHandler.MessageSessionHandler()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.MicrosoftServiceBusMessagingIMessageSessionHandlerOnCloseSessionMessageSession">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.MicrosoftServiceBusMessagingIMessageSessionHandlerOnMessageMessageSessionBrokeredMessage">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.MicrosoftServiceBusMessagingIMessageSessionHandlerOnSessionLostException">
            <summary>Sets the shim of MessageSessionHandler.Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.OnCloseSessionMessageSession">
            <summary>Sets the shim of MessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSessionHandler.OnSessionLostException">
            <summary>Sets the shim of MessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageSizeExceededException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.#ctor(Microsoft.ServiceBus.Messaging.MessageSizeExceededException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessageSizeExceededException.MessageSizeExceededException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.ConstructorString">
            <summary>Sets the shim of MessageSizeExceededException.MessageSizeExceededException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageSizeExceededException.ConstructorStringException">
            <summary>Sets the shim of MessageSizeExceededException.MessageSizeExceededException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessageStoreLockLostException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.#ctor(Microsoft.ServiceBus.Messaging.MessageStoreLockLostException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of MessageStoreLockLostException.MessageStoreLockLostException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of MessageStoreLockLostException.MessageStoreLockLostException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessageStoreLockLostException.MessageStoreLockLostException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.ConstructorString">
            <summary>Sets the shim of MessageStoreLockLostException.MessageStoreLockLostException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessageStoreLockLostException.ConstructorStringException">
            <summary>Sets the shim of MessageStoreLockLostException.MessageStoreLockLostException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingCommunicationException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.#ctor(Microsoft.ServiceBus.Messaging.MessagingCommunicationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingCommunicationException.MessagingCommunicationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.ConstructorString">
            <summary>Sets the shim of MessagingCommunicationException.MessagingCommunicationException(String communicationPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingCommunicationException.ConstructorStringException">
            <summary>Sets the shim of MessagingCommunicationException.MessagingCommunicationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.#ctor(Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.AllInstances.ExistingEntityMetadataGet">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.get_ExistingEntityMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.AllInstances.ExistingEntityMetadataSetObject">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.set_ExistingEntityMetadata(Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorString">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorStringTrackingContext">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(String entityName, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ConstructorStringTrackingContextException">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.MessagingEntityAlreadyExistsException(String message, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ExistingEntityMetadataGet">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.get_ExistingEntityMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.ExistingEntityMetadataSetObject">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.set_ExistingEntityMetadata(Object value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityAlreadyExistsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingEntityAlreadyExistsException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.#ctor(Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of MessagingEntityDisabledException.MessagingEntityDisabledException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of MessagingEntityDisabledException.MessagingEntityDisabledException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingEntityDisabledException.MessagingEntityDisabledException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.ConstructorString">
            <summary>Sets the shim of MessagingEntityDisabledException.MessagingEntityDisabledException(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityDisabledException.ConstructorStringException">
            <summary>Sets the shim of MessagingEntityDisabledException.MessagingEntityDisabledException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.#ctor(Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.AllInstances.ToString01">
            <summary>Sets the shim of MessagingEntityNotFoundException.ToString()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of MessagingEntityNotFoundException.MessagingEntityNotFoundException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of MessagingEntityNotFoundException.MessagingEntityNotFoundException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingEntityNotFoundException.MessagingEntityNotFoundException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ConstructorString">
            <summary>Sets the shim of MessagingEntityNotFoundException.MessagingEntityNotFoundException(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ConstructorStringException">
            <summary>Sets the shim of MessagingEntityNotFoundException.MessagingEntityNotFoundException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingEntityNotFoundException.ToString">
            <summary>Sets the shim of MessagingEntityNotFoundException.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.#ctor(Microsoft.ServiceBus.Messaging.MessagingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.DataGet">
            <summary>Sets the shim of MessagingException.get_Data()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.DetailGet">
            <summary>Sets the shim of MessagingException.get_Detail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.DetailSetMessagingExceptionDetail">
            <summary>Sets the shim of MessagingException.set_Detail(MessagingExceptionDetail value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.InitializeMessagingExceptionDetailTrackingContextDateTime">
            <summary>Sets the shim of MessagingException.Initialize(MessagingExceptionDetail detail, TrackingContext currentTracker, DateTime timestamp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.IsTransientGet">
            <summary>Sets the shim of MessagingException.get_IsTransient()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.IsTransientSetBoolean">
            <summary>Sets the shim of MessagingException.set_IsTransient(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.TimestampGet">
            <summary>Sets the shim of MessagingException.get_Timestamp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.TimestampSetDateTime">
            <summary>Sets the shim of MessagingException.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.TrackerGet">
            <summary>Sets the shim of MessagingException.get_Tracker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.AllInstances.TrackerSetTrackingContext">
            <summary>Sets the shim of MessagingException.set_Tracker(TrackingContext value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of MessagingException.MessagingException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of MessagingException.MessagingException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingException.MessagingException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorString">
            <summary>Sets the shim of MessagingException.MessagingException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorStringBooleanException">
            <summary>Sets the shim of MessagingException.MessagingException(String message, Boolean isTransientError, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.ConstructorStringException">
            <summary>Sets the shim of MessagingException.MessagingException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.DataGet">
            <summary>Sets the shim of MessagingException.get_Data()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.DetailGet">
            <summary>Sets the shim of MessagingException.get_Detail()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.DetailSetMessagingExceptionDetail">
            <summary>Sets the shim of MessagingException.set_Detail(MessagingExceptionDetail value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.InitializeMessagingExceptionDetailTrackingContextDateTime">
            <summary>Sets the shim of MessagingException.Initialize(MessagingExceptionDetail detail, TrackingContext currentTracker, DateTime timestamp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.IsTransientGet">
            <summary>Sets the shim of MessagingException.get_IsTransient()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.IsTransientSetBoolean">
            <summary>Sets the shim of MessagingException.set_IsTransient(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.TimestampGet">
            <summary>Sets the shim of MessagingException.get_Timestamp()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.TimestampSetDateTime">
            <summary>Sets the shim of MessagingException.set_Timestamp(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.TrackerGet">
            <summary>Sets the shim of MessagingException.get_Tracker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingException.TrackerSetTrackingContext">
            <summary>Sets the shim of MessagingException.set_Tracker(TrackingContext value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingExceptionDetail</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.#ctor(Microsoft.ServiceBus.Messaging.MessagingExceptionDetail)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_ErrorCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.ErrorCodeSetInt32">
            <summary>Sets the shim of MessagingExceptionDetail.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.ErrorLevelGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_ErrorLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.ErrorLevelSetMessagingExceptionDetailErrorLevelType">
            <summary>Sets the shim of MessagingExceptionDetail.set_ErrorLevel(ErrorLevelType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.MessageGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.AllInstances.MessageSetString">
            <summary>Sets the shim of MessagingExceptionDetail.set_Message(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ConstructorInt32String">
            <summary>Sets the shim of MessagingExceptionDetail.MessagingExceptionDetail(Int32 errorCode, String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ConstructorInt32StringMessagingExceptionDetailErrorLevelType">
            <summary>Sets the shim of MessagingExceptionDetail.MessagingExceptionDetail(Int32 errorCode, String message, ErrorLevelType errorLevel)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.CorrelationFiltersExceededString">
            <summary>Sets the shim of MessagingExceptionDetail.CorrelationFiltersExceeded(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.DataCommunicationErrorString">
            <summary>Sets the shim of MessagingExceptionDetail.DataCommunicationError(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EntityConflictOperationInProgressString">
            <summary>Sets the shim of MessagingExceptionDetail.EntityConflictOperationInProgress(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EntityConflictString">
            <summary>Sets the shim of MessagingExceptionDetail.EntityConflict(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EntityGoneString">
            <summary>Sets the shim of MessagingExceptionDetail.EntityGone(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EntityNotFoundString">
            <summary>Sets the shim of MessagingExceptionDetail.EntityNotFound(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EntityUpdateConflictString">
            <summary>Sets the shim of MessagingExceptionDetail.EntityUpdateConflict(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ErrorCodeGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_ErrorCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ErrorCodeSetInt32">
            <summary>Sets the shim of MessagingExceptionDetail.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ErrorLevelGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_ErrorLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ErrorLevelSetMessagingExceptionDetailErrorLevelType">
            <summary>Sets the shim of MessagingExceptionDetail.set_ErrorLevel(ErrorLevelType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.EventHubAtFullCapacityString">
            <summary>Sets the shim of MessagingExceptionDetail.EventHubAtFullCapacity(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.MessageGet">
            <summary>Sets the shim of MessagingExceptionDetail.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.MessageSetString">
            <summary>Sets the shim of MessagingExceptionDetail.set_Message(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.PublisherRevokedString">
            <summary>Sets the shim of MessagingExceptionDetail.PublisherRevoked(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ReconstructExceptionDetailInt32StringMessagingExceptionDetailErrorLevelType">
            <summary>Sets the shim of MessagingExceptionDetail.ReconstructExceptionDetail(Int32 errorCode, String message, ErrorLevelType errorLevel)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.ServerBusyString">
            <summary>Sets the shim of MessagingExceptionDetail.ServerBusy(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.SqlFiltersExceededString">
            <summary>Sets the shim of MessagingExceptionDetail.SqlFiltersExceeded(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.StoreLockLostString">
            <summary>Sets the shim of MessagingExceptionDetail.StoreLockLost(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.SubscriptionsExceededString">
            <summary>Sets the shim of MessagingExceptionDetail.SubscriptionsExceeded(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.UnknownDetailString">
            <summary>Sets the shim of MessagingExceptionDetail.UnknownDetail(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingExceptionDetail.UnspecifiedInternalErrorString">
            <summary>Sets the shim of MessagingExceptionDetail.UnspecifiedInternalError(String message)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingFactory</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSession">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionAsync">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionAsyncStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync(String entityName, String sessionId, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionStringStringReceiveModeTimeSpanTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AddressGet">
            <summary>Sets the shim of MessagingFactory.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AddressSetUri">
            <summary>Sets the shim of MessagingFactory.set_Address(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSession">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionAsync">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionAsyncStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync(String entityName, String sessionId, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionStringStringReceiveModeTimeSpanTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of MessagingFactory.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AddressGet">
            <summary>Sets the shim of MessagingFactory.get_Address()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.AddressSetUri">
            <summary>Sets the shim of MessagingFactory.set_Address(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginAcceptMessageSessionStringStringReceiveModeTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginAcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreateMessageReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageReceiver(String entityPath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreateMessageSenderStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageSender(String transferDestinationEntityPath, String viaEntityPath, Boolean tryPairSender, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreateMessageSenderStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageSender(String transferDestinationEntityPath, String viaEntityPath, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreatePartitionReceiverStringStringReceiveModeStringDateTimeNullableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionReceiver(String entityPath, String consumerGroupName, ReceiveMode mode, String partitionId, DateTime startTime, Nullable`1&lt;Int64&gt; epoch, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreatePartitionReceiverStringStringReceiveModeStringStringBooleanNullableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionReceiver(String entityPath, String consumerGroupName, ReceiveMode userRequestedMode, String partitionId, String offset, Boolean offsetInclusive, Nullable`1&lt;Int64&gt; epoch, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginCreatePartitionSenderStringStringAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionSender(String entityPath, String paritionId, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.BeginPairNamespacePairedNamespaceOptionsTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginPairNamespace(PairedNamespaceOptions options, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.ClearPairing">
            <summary>Sets the shim of MessagingFactory.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateEventHubClientString">
            <summary>Sets the shim of MessagingFactory.CreateEventHubClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverAsyncString">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverAsyncStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverAsyncStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverString">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageReceiverStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderAsyncString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderAsyncStringString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String transferDestinationEntityPath, String viaEntityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderAsyncStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String transferDestinationEntityPath, String viaEntityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderStringString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String transferDestinationEntityPath, String viaEntityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String transfserDestinationEntityPath, String viaEntityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateMessageSenderStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String entityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateQueueClientString">
            <summary>Sets the shim of MessagingFactory.CreateQueueClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateQueueClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateQueueClient(String path, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateReceiverAsyncStringStringReceiveModeStringDateTimeNullableOfInt64">
            <summary>Sets the shim of MessagingFactory.CreateReceiverAsync(String entityPath, String consumerGroupName, ReceiveMode mode, String partitionId, DateTime startTime, Nullable`1&lt;Int64&gt; epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateReceiverAsyncStringStringReceiveModeStringStringBooleanNullableOfInt64">
            <summary>Sets the shim of MessagingFactory.CreateReceiverAsync(String entityPath, String consumerGroupName, ReceiveMode userRequestedMode, String partitionId, String offset, Boolean offsetInclusive, Nullable`1&lt;Int64&gt; epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateSenderAsyncStringString">
            <summary>Sets the shim of MessagingFactory.CreateSenderAsync(String entityPath, String paritionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateSubscriptionClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String subscriptionPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateSubscriptionClientStringString">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateSubscriptionClientStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String topicPath, String name, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.CreateTopicClientString">
            <summary>Sets the shim of MessagingFactory.CreateTopicClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndCreateMessageReceiverIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreateMessageReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndCreateMessageSenderIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreateMessageSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndCreatePartitionReceiverIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreatePartitionReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndCreatePartitionSenderIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreatePartitionSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.EndPairNamespaceIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndPairNamespace(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.GetSettings">
            <summary>Sets the shim of MessagingFactory.GetSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.IncrementConnectionResetCountUri">
            <summary>Sets the shim of MessagingFactory.IncrementConnectionResetCount(Uri endpoint)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.InstanceTrackingContextGet">
            <summary>Sets the shim of MessagingFactory.get_InstanceTrackingContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.IsPairedGet">
            <summary>Sets the shim of MessagingFactory.get_IsPaired()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.IsPairedSetBoolean">
            <summary>Sets the shim of MessagingFactory.set_IsPaired(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.NamespaceEndpointsGet">
            <summary>Sets the shim of MessagingFactory.get_NamespaceEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.NamespaceEndpointsSetIEnumerableOfUri">
            <summary>Sets the shim of MessagingFactory.set_NamespaceEndpoints(IEnumerable`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnAbort">
            <summary>Sets the shim of MessagingFactory.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnAcceptMessageSessionReceiveModeTimeSpanTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnAcceptMessageSession(ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnAcceptSessionReceiverStringStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnAcceptSessionReceiver(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnBeginCreateMessageSenderStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.OnBeginCreateMessageSender(String entityName, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateEventHubClientString">
            <summary>Sets the shim of MessagingFactory.OnCreateEventHubClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateMessageReceiverStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageReceiver(String entityName, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateMessageSenderStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageSender(String transferDestinationEntityName, String viaEntityName, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateMessageSenderStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageSender(String entityName, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateQueueClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateQueueClient(String path, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateSubscriptionClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateSubscriptionClient(String subscriptionPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateSubscriptionClientStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateSubscriptionClient(String topicPath, String name, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnCreateTopicClientString">
            <summary>Sets the shim of MessagingFactory.OnCreateTopicClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of MessagingFactory.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of MessagingFactory.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OptionsGet">
            <summary>Sets the shim of MessagingFactory.get_Options()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.OptionsSetPairedNamespaceOptions">
            <summary>Sets the shim of MessagingFactory.set_Options(PairedNamespaceOptions value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.PairNamespaceAsyncPairedNamespaceOptions">
            <summary>Sets the shim of MessagingFactory.PairNamespaceAsync(PairedNamespaceOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of MessagingFactory.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of MessagingFactory.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.ResetConnection">
            <summary>Sets the shim of MessagingFactory.ResetConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.AllInstances.ResetConnectionUri">
            <summary>Sets the shim of MessagingFactory.ResetConnection(Uri endpoint)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginAcceptMessageSessionStringStringReceiveModeTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginAcceptMessageSession(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreateIEnumerableOfUriMessagingFactorySettingsTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreate(IEnumerable`1&lt;Uri&gt; addresses, MessagingFactorySettings factorySettings, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreateMessageReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageReceiver(String entityPath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreateMessageSenderStringStringBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageSender(String transferDestinationEntityPath, String viaEntityPath, Boolean tryPairSender, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreateMessageSenderStringStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreateMessageSender(String transferDestinationEntityPath, String viaEntityPath, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreatePartitionReceiverStringStringReceiveModeStringDateTimeNullableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionReceiver(String entityPath, String consumerGroupName, ReceiveMode mode, String partitionId, DateTime startTime, Nullable`1&lt;Int64&gt; epoch, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreatePartitionReceiverStringStringReceiveModeStringStringBooleanNullableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionReceiver(String entityPath, String consumerGroupName, ReceiveMode userRequestedMode, String partitionId, String offset, Boolean offsetInclusive, Nullable`1&lt;Int64&gt; epoch, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreatePartitionSenderStringStringAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreatePartitionSender(String entityPath, String paritionId, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginCreateUriMessagingFactorySettingsTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginCreate(Uri address, MessagingFactorySettings factorySettings, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BeginPairNamespacePairedNamespaceOptionsTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.BeginPairNamespace(PairedNamespaceOptions options, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CheckEventHubValidTransportTypeMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.CheckEventHubValidTransportType(MessagingFactorySettings settings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CheckValidEntityNameString">
            <summary>Sets the shim of MessagingFactory.CheckValidEntityName(String entityName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CheckValidEntityNameStringInt32">
            <summary>Sets the shim of MessagingFactory.CheckValidEntityName(String entityName, Int32 maxEntityNameLength)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CheckValidEntityNameStringInt32Boolean">
            <summary>Sets the shim of MessagingFactory.CheckValidEntityName(String entityName, Int32 maxEntityNameLength, Boolean allowSeparator)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CheckValidEntityNameStringInt32BooleanString">
            <summary>Sets the shim of MessagingFactory.CheckValidEntityName(String entityName, Int32 maxEntityNameLength, Boolean allowSeparator, String paramName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.ClearPairing">
            <summary>Sets the shim of MessagingFactory.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.Constructor">
            <summary>Sets the shim of MessagingFactory.MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.Create">
            <summary>Sets the shim of MessagingFactory.Create()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfString">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;String&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfStringMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;String&gt; addresses, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfStringTokenProvider">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;String&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfUri">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;Uri&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfUriMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;Uri&gt; addresses, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfUriMessagingFactorySettingsTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;Uri&gt; addresses, MessagingFactorySettings factorySettings, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncIEnumerableOfUriTokenProvider">
            <summary>Sets the shim of MessagingFactory.CreateAsync(IEnumerable`1&lt;Uri&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncString">
            <summary>Sets the shim of MessagingFactory.CreateAsync(String address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncStringMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.CreateAsync(String address, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncStringTokenProvider">
            <summary>Sets the shim of MessagingFactory.CreateAsync(String address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncUri">
            <summary>Sets the shim of MessagingFactory.CreateAsync(Uri address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncUriMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.CreateAsync(Uri address, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateAsyncUriTokenProvider">
            <summary>Sets the shim of MessagingFactory.CreateAsync(Uri address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateEventHubClientString">
            <summary>Sets the shim of MessagingFactory.CreateEventHubClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateFromConnectionStringString">
            <summary>Sets the shim of MessagingFactory.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateFromConnectionStringStringBoolean">
            <summary>Sets the shim of MessagingFactory.CreateFromConnectionString(String connectionString, Boolean useCache)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfString">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;String&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfStringMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;String&gt; addresses, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfStringTokenProvider">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;String&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfUri">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;Uri&gt; addresses)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfUriMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;Uri&gt; addresses, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfUriMessagingFactorySettingsTimeSpan">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;Uri&gt; addresses, MessagingFactorySettings factorySettings, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateIEnumerableOfUriTokenProvider">
            <summary>Sets the shim of MessagingFactory.Create(IEnumerable`1&lt;Uri&gt; addresses, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverAsyncString">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverAsyncStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverAsyncStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiverAsync(String entityPath, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverString">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageReceiverStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageReceiver(String entityPath, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderAsyncString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderAsyncStringString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String transferDestinationEntityPath, String viaEntityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderAsyncStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSenderAsync(String transferDestinationEntityPath, String viaEntityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String entityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderStringString">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String transferDestinationEntityPath, String viaEntityPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String transfserDestinationEntityPath, String viaEntityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateMessageSenderStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.CreateMessageSender(String entityPath, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateQueueClientString">
            <summary>Sets the shim of MessagingFactory.CreateQueueClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateQueueClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateQueueClient(String path, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateReceiverAsyncStringStringReceiveModeStringDateTimeNullableOfInt64">
            <summary>Sets the shim of MessagingFactory.CreateReceiverAsync(String entityPath, String consumerGroupName, ReceiveMode mode, String partitionId, DateTime startTime, Nullable`1&lt;Int64&gt; epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateReceiverAsyncStringStringReceiveModeStringStringBooleanNullableOfInt64">
            <summary>Sets the shim of MessagingFactory.CreateReceiverAsync(String entityPath, String consumerGroupName, ReceiveMode userRequestedMode, String partitionId, String offset, Boolean offsetInclusive, Nullable`1&lt;Int64&gt; epoch)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateSenderAsyncStringString">
            <summary>Sets the shim of MessagingFactory.CreateSenderAsync(String entityPath, String paritionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateString">
            <summary>Sets the shim of MessagingFactory.Create(String address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateStringMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.Create(String address, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateStringTokenProvider">
            <summary>Sets the shim of MessagingFactory.Create(String address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateSubscriptionClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String subscriptionPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateSubscriptionClientStringString">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateSubscriptionClientStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.CreateSubscriptionClient(String topicPath, String name, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateTopicClientString">
            <summary>Sets the shim of MessagingFactory.CreateTopicClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateUri">
            <summary>Sets the shim of MessagingFactory.Create(Uri address)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateUriMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactory.Create(Uri address, MessagingFactorySettings factorySettings)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateUriMessagingFactorySettingsTimeSpan">
            <summary>Sets the shim of MessagingFactory.Create(Uri address, MessagingFactorySettings factorySettings, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.CreateUriTokenProvider">
            <summary>Sets the shim of MessagingFactory.Create(Uri address, TokenProvider tokenProvider)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndCreateIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreate(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndCreateMessageReceiverIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreateMessageReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndCreateMessageSenderIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreateMessageSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndCreatePartitionReceiverIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreatePartitionReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndCreatePartitionSenderIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndCreatePartitionSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.EndPairNamespaceIAsyncResult">
            <summary>Sets the shim of MessagingFactory.EndPairNamespace(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.GetSettings">
            <summary>Sets the shim of MessagingFactory.GetSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.IncrementConnectionResetCountUri">
            <summary>Sets the shim of MessagingFactory.IncrementConnectionResetCount(Uri endpoint)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.InstanceTrackingContextGet">
            <summary>Sets the shim of MessagingFactory.get_InstanceTrackingContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.IsPairedGet">
            <summary>Sets the shim of MessagingFactory.get_IsPaired()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.IsPairedSetBoolean">
            <summary>Sets the shim of MessagingFactory.set_IsPaired(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.NamespaceEndpointsGet">
            <summary>Sets the shim of MessagingFactory.get_NamespaceEndpoints()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.NamespaceEndpointsSetIEnumerableOfUri">
            <summary>Sets the shim of MessagingFactory.set_NamespaceEndpoints(IEnumerable`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnAbort">
            <summary>Sets the shim of MessagingFactory.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnAcceptMessageSessionReceiveModeTimeSpanTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnAcceptMessageSession(ReceiveMode receiveMode, TimeSpan serverWaitTime, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnAcceptSessionReceiverStringStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnAcceptSessionReceiver(String entityName, String sessionId, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnBeginCreateMessageSenderStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactory.OnBeginCreateMessageSender(String entityName, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCloseTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateEventHubClientString">
            <summary>Sets the shim of MessagingFactory.OnCreateEventHubClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateMessageReceiverStringReceiveModeTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageReceiver(String entityName, ReceiveMode receiveMode, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateMessageSenderStringStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageSender(String transferDestinationEntityName, String viaEntityName, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateMessageSenderStringTimeSpan">
            <summary>Sets the shim of MessagingFactory.OnCreateMessageSender(String entityName, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateQueueClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateQueueClient(String path, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateSubscriptionClientStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateSubscriptionClient(String subscriptionPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateSubscriptionClientStringStringReceiveMode">
            <summary>Sets the shim of MessagingFactory.OnCreateSubscriptionClient(String topicPath, String name, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnCreateTopicClientString">
            <summary>Sets the shim of MessagingFactory.OnCreateTopicClient(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OnEndCloseIAsyncResult">
            <summary>Sets the shim of MessagingFactory.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OperationTimeoutGet">
            <summary>Sets the shim of MessagingFactory.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OptionsGet">
            <summary>Sets the shim of MessagingFactory.get_Options()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.OptionsSetPairedNamespaceOptions">
            <summary>Sets the shim of MessagingFactory.set_Options(PairedNamespaceOptions value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.PairNamespaceAsyncPairedNamespaceOptions">
            <summary>Sets the shim of MessagingFactory.PairNamespaceAsync(PairedNamespaceOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.PrefetchCountGet">
            <summary>Sets the shim of MessagingFactory.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.PrefetchCountSetInt32">
            <summary>Sets the shim of MessagingFactory.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.ResetConnection">
            <summary>Sets the shim of MessagingFactory.ResetConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactory.ResetConnectionUri">
            <summary>Sets the shim of MessagingFactory.ResetConnection(Uri endpoint)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.MessagingFactorySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.AmqpTransportSettingsGet">
            <summary>Sets the shim of MessagingFactorySettings.get_AmqpTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.AmqpTransportSettingsSetAmqpTransportSettings">
            <summary>Sets the shim of MessagingFactorySettings.set_AmqpTransportSettings(AmqpTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.BeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.Clone">
            <summary>Sets the shim of MessagingFactorySettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.DisableEntityLevelPerformanceCountersGet">
            <summary>Sets the shim of MessagingFactorySettings.get_DisableEntityLevelPerformanceCounters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.DisableEntityLevelPerformanceCountersSetBoolean">
            <summary>Sets the shim of MessagingFactorySettings.set_DisableEntityLevelPerformanceCounters(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.EnableAdditionalClientTimeoutGet">
            <summary>Sets the shim of MessagingFactorySettings.get_EnableAdditionalClientTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.EnableAdditionalClientTimeoutSetBoolean">
            <summary>Sets the shim of MessagingFactorySettings.set_EnableAdditionalClientTimeout(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.EndCreateFactoryIAsyncResult">
            <summary>Sets the shim of MessagingFactorySettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.NetMessagingTransportSettingsGet">
            <summary>Sets the shim of MessagingFactorySettings.get_NetMessagingTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.NetMessagingTransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of MessagingFactorySettings.set_NetMessagingTransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.OnBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.OnBeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.OnBeginCreateFactoryUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.OnBeginCreateFactory(Uri uri, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.OnEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of MessagingFactorySettings.OnEndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of MessagingFactorySettings.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of MessagingFactorySettings.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.TokenProviderGet">
            <summary>Sets the shim of MessagingFactorySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.TokenProviderSetTokenProvider">
            <summary>Sets the shim of MessagingFactorySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.TransportTypeGet">
            <summary>Sets the shim of MessagingFactorySettings.get_TransportType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AllInstances.TransportTypeSetTransportType">
            <summary>Sets the shim of MessagingFactorySettings.set_TransportType(TransportType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AmqpTransportSettingsGet">
            <summary>Sets the shim of MessagingFactorySettings.get_AmqpTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.AmqpTransportSettingsSetAmqpTransportSettings">
            <summary>Sets the shim of MessagingFactorySettings.set_AmqpTransportSettings(AmqpTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.BeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.Clone">
            <summary>Sets the shim of MessagingFactorySettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.Constructor">
            <summary>Sets the shim of MessagingFactorySettings.MessagingFactorySettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.ConstructorMessagingFactorySettings">
            <summary>Sets the shim of MessagingFactorySettings.MessagingFactorySettings(MessagingFactorySettings other)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.DisableEntityLevelPerformanceCountersGet">
            <summary>Sets the shim of MessagingFactorySettings.get_DisableEntityLevelPerformanceCounters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.DisableEntityLevelPerformanceCountersSetBoolean">
            <summary>Sets the shim of MessagingFactorySettings.set_DisableEntityLevelPerformanceCounters(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.EnableAdditionalClientTimeoutGet">
            <summary>Sets the shim of MessagingFactorySettings.get_EnableAdditionalClientTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.EnableAdditionalClientTimeoutSetBoolean">
            <summary>Sets the shim of MessagingFactorySettings.set_EnableAdditionalClientTimeout(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.EndCreateFactoryIAsyncResult">
            <summary>Sets the shim of MessagingFactorySettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.NetMessagingTransportSettingsGet">
            <summary>Sets the shim of MessagingFactorySettings.get_NetMessagingTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.NetMessagingTransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of MessagingFactorySettings.set_NetMessagingTransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.OnBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.OnBeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.OnBeginCreateFactoryUriAsyncCallbackObject">
            <summary>Sets the shim of MessagingFactorySettings.OnBeginCreateFactory(Uri uri, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.OnEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of MessagingFactorySettings.OnEndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.OperationTimeoutGet">
            <summary>Sets the shim of MessagingFactorySettings.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.OperationTimeoutSetTimeSpan">
            <summary>Sets the shim of MessagingFactorySettings.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.TokenProviderGet">
            <summary>Sets the shim of MessagingFactorySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.TokenProviderSetTokenProvider">
            <summary>Sets the shim of MessagingFactorySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.TransportTypeGet">
            <summary>Sets the shim of MessagingFactorySettings.get_TransportType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimMessagingFactorySettings.TransportTypeSetTransportType">
            <summary>Sets the shim of MessagingFactorySettings.set_TransportType(TransportType value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.NetMessagingBinding</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.#ctor(Microsoft.ServiceBus.Messaging.NetMessagingBinding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.ApplyConfigurationString">
            <summary>Sets the shim of NetMessagingBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.CreateBindingElements">
            <summary>Sets the shim of NetMessagingBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.InitializeFromBinaryMessageEncodingBindingElementNetMessagingTransportBindingElement">
            <summary>Sets the shim of NetMessagingBinding.InitializeFrom(BinaryMessageEncodingBindingElement binaryEncoding, NetMessagingTransportBindingElement netMessagingTransport)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.IsBindingElementsMatchBinaryMessageEncodingBindingElementNetMessagingTransportBindingElement">
            <summary>Sets the shim of NetMessagingBinding.IsBindingElementsMatch(BinaryMessageEncodingBindingElement binaryEncoding, NetMessagingTransportBindingElement netMessagingTransport)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetMessagingBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetMessagingBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingBinding.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingBinding.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.SchemeGet">
            <summary>Sets the shim of NetMessagingBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingBinding.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingBinding.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingBinding.get_TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.AllInstances.TransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingBinding.set_TransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.ApplyConfigurationString">
            <summary>Sets the shim of NetMessagingBinding.ApplyConfiguration(String configurationName)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.Bind(System.ServiceModel.IDefaultCommunicationTimeouts)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.Constructor">
            <summary>Sets the shim of NetMessagingBinding.NetMessagingBinding()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.ConstructorString">
            <summary>Sets the shim of NetMessagingBinding.NetMessagingBinding(String configurationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.CreateBindingElements">
            <summary>Sets the shim of NetMessagingBinding.CreateBindingElements()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.InitializeFromBinaryMessageEncodingBindingElementNetMessagingTransportBindingElement">
            <summary>Sets the shim of NetMessagingBinding.InitializeFrom(BinaryMessageEncodingBindingElement binaryEncoding, NetMessagingTransportBindingElement netMessagingTransport)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.IsBindingElementsMatchBinaryMessageEncodingBindingElementNetMessagingTransportBindingElement">
            <summary>Sets the shim of NetMessagingBinding.IsBindingElementsMatch(BinaryMessageEncodingBindingElement binaryEncoding, NetMessagingTransportBindingElement netMessagingTransport)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.IsEncodingMatchBindingElementBindingElement">
            <summary>Sets the shim of NetMessagingBinding.IsEncodingMatch(BindingElement a, BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.IsMessageVersionMatchMessageVersionMessageVersion">
            <summary>Sets the shim of NetMessagingBinding.IsMessageVersionMatch(MessageVersion a, MessageVersion b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.IsTransportMatchBindingElementBindingElement">
            <summary>Sets the shim of NetMessagingBinding.IsTransportMatch(BindingElement a, BindingElement b)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.MaxBufferPoolSizeGet">
            <summary>Sets the shim of NetMessagingBinding.get_MaxBufferPoolSize()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.MaxBufferPoolSizeSetInt64">
            <summary>Sets the shim of NetMessagingBinding.set_MaxBufferPoolSize(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingBinding.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingBinding.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.SchemeGet">
            <summary>Sets the shim of NetMessagingBinding.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingBinding.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingBinding.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingBinding.get_TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.TransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingBinding.set_TransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingBinding.TryCreateBindingElementCollectionNetMessagingBindingOut">
            <summary>Sets the shim of NetMessagingBinding.TryCreate(BindingElementCollection elements, NetMessagingBinding&amp; binding)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.#ctor(Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement,System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.Clone">
            <summary>Sets the shim of NetMessagingTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.CreateMessagingFactorySettingsBindingContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CreateMessagingFactorySettings(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement,System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.ReceiveContextEnabledGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_ReceiveContextEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SchemeGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SystemServiceModelDescriptionIWsdlExportExtensionExportContractWsdlExporterWsdlContractConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter exporter, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.SystemServiceModelDescriptionIWsdlExportExtensionExportEndpointWsdlExporterWsdlEndpointConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.AllInstances.TransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_TransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.Bind(System.ServiceModel.Description.IPolicyExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.Bind(System.ServiceModel.Description.IWsdlExportExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.BuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelFactory{``0}})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.BuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.BuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.ServiceModel.Channels.IChannelListener{``0}})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.BuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.CanBuildChannelFactoryOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CanBuildChannelFactory(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.CanBuildChannelListenerOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,System.Boolean})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CanBuildChannelListener(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.Clone">
            <summary>Sets the shim of NetMessagingTransportBindingElement.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.Constructor">
            <summary>Sets the shim of NetMessagingTransportBindingElement.NetMessagingTransportBindingElement()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.ConstructorNetMessagingTransportBindingElement">
            <summary>Sets the shim of NetMessagingTransportBindingElement.NetMessagingTransportBindingElement(NetMessagingTransportBindingElement other)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.CreateMessagingFactorySettingsBindingContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.CreateMessagingFactorySettings(BindingContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.GetPropertyOf1BindingContext``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.ServiceModel.Channels.BindingContext,``0})">
            <summary>Sets the shim of NetMessagingTransportBindingElement.GetProperty(BindingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.GetSoapBindingWsdlEndpointConversionContextWsdlExporter">
            <summary>Sets the shim of NetMessagingTransportBindingElement.GetSoapBinding(WsdlEndpointConversionContext endpointContext, WsdlExporter exporter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.PrefetchCountGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.PrefetchCountSetInt32">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.ReceiveContextEnabledGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_ReceiveContextEnabled()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SchemeGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_Scheme()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SessionIdleTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_SessionIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SessionIdleTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_SessionIdleTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SystemServiceModelDescriptionIPolicyExportExtensionExportPolicyMetadataExporterPolicyConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter exporter, PolicyConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SystemServiceModelDescriptionIWsdlExportExtensionExportContractWsdlExporterWsdlContractConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter exporter, WsdlContractConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.SystemServiceModelDescriptionIWsdlExportExtensionExportEndpointWsdlExporterWsdlEndpointConversionContext">
            <summary>Sets the shim of NetMessagingTransportBindingElement.System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter exporter, WsdlEndpointConversionContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.TransportSettingsGet">
            <summary>Sets the shim of NetMessagingTransportBindingElement.get_TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportBindingElement.TransportSettingsSetNetMessagingTransportSettings">
            <summary>Sets the shim of NetMessagingTransportBindingElement.set_TransportSettings(NetMessagingTransportSettings value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.#ctor(Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.BatchFlushIntervalGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettings.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.ClientAuthThumbprintGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_ClientAuthThumbprint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.ClientAuthThumbprintSetString">
            <summary>Sets the shim of NetMessagingTransportSettings.set_ClientAuthThumbprint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.Clone">
            <summary>Sets the shim of NetMessagingTransportSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EnablePingGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EnablePing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EnablePingSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EnablePing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EnableRedirectGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EnableRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EnableRedirectSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EnableRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EndpointIdentityGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EndpointIdentity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.EndpointIdentitySetDnsEndpointIdentity">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EndpointIdentity(DnsEndpointIdentity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.GatewayModeGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_GatewayMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.GatewayModeSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_GatewayMode(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.LeaseTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettings.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.MicrosoftServiceBusMessagingITransportSettingsBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; physicalUriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.MicrosoftServiceBusMessagingITransportSettingsEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingsget">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingssetTokenProvider">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.UseSslStreamSecurityGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_UseSslStreamSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.UseSslStreamSecuritySetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_UseSslStreamSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.ViaGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_Via()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.AllInstances.ViaSetUri">
            <summary>Sets the shim of NetMessagingTransportSettings.set_Via(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.BatchFlushIntervalGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_BatchFlushInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.BatchFlushIntervalSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettings.set_BatchFlushInterval(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.ClientAuthThumbprintGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_ClientAuthThumbprint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.ClientAuthThumbprintSetString">
            <summary>Sets the shim of NetMessagingTransportSettings.set_ClientAuthThumbprint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.Clone">
            <summary>Sets the shim of NetMessagingTransportSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.Constructor">
            <summary>Sets the shim of NetMessagingTransportSettings.NetMessagingTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EnablePingGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EnablePing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EnablePingSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EnablePing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EnableRedirectGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EnableRedirect()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EnableRedirectSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EnableRedirect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EndpointIdentityGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_EndpointIdentity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.EndpointIdentitySetDnsEndpointIdentity">
            <summary>Sets the shim of NetMessagingTransportSettings.set_EndpointIdentity(DnsEndpointIdentity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.GatewayModeGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_GatewayMode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.GatewayModeSetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_GatewayMode(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.LeaseTimeoutGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_LeaseTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.LeaseTimeoutSetTimeSpan">
            <summary>Sets the shim of NetMessagingTransportSettings.set_LeaseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.MicrosoftServiceBusMessagingITransportSettingsBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.BeginCreateFactory(IEnumerable`1&lt;Uri&gt; physicalUriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.MicrosoftServiceBusMessagingITransportSettingsEndCreateFactoryIAsyncResult">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Messaging.ITransportSettings.EndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingsget">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.get_TokenProvider()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.TokenProviderMicrosoftServiceBusChannelsSecurityIServiceBusSecuritySettingssetTokenProvider">
            <summary>Sets the shim of NetMessagingTransportSettings.Microsoft.ServiceBus.Channels.Security.IServiceBusSecuritySettings.set_TokenProvider(TokenProvider value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.UseSslStreamSecurityGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_UseSslStreamSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.UseSslStreamSecuritySetBoolean">
            <summary>Sets the shim of NetMessagingTransportSettings.set_UseSslStreamSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.ViaGet">
            <summary>Sets the shim of NetMessagingTransportSettings.get_Via()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNetMessagingTransportSettings.ViaSetUri">
            <summary>Sets the shim of NetMessagingTransportSettings.set_Via(Uri value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.#ctor(Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.AllInstances.ToString01">
            <summary>Sets the shim of NoMatchingSubscriptionException.ToString()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.ConstructorString">
            <summary>Sets the shim of NoMatchingSubscriptionException.NoMatchingSubscriptionException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.ConstructorStringException">
            <summary>Sets the shim of NoMatchingSubscriptionException.NoMatchingSubscriptionException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimNoMatchingSubscriptionException.ToString">
            <summary>Sets the shim of NoMatchingSubscriptionException.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.OnMessageOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.#ctor(Microsoft.ServiceBus.Messaging.OnMessageOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.AutoCompleteGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoComplete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.AutoCompleteSetBoolean">
            <summary>Sets the shim of OnMessageOptions.set_AutoComplete(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.AutoRenewLockGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoRenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.AutoRenewTimeoutGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoRenewTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.AutoRenewTimeoutSetTimeSpan">
            <summary>Sets the shim of OnMessageOptions.set_AutoRenewTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.MaxConcurrentCallsGet">
            <summary>Sets the shim of OnMessageOptions.get_MaxConcurrentCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.MaxConcurrentCallsSetInt32">
            <summary>Sets the shim of OnMessageOptions.set_MaxConcurrentCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.MessageClientEntityGet">
            <summary>Sets the shim of OnMessageOptions.get_MessageClientEntity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.MessageClientEntitySetClientEntity">
            <summary>Sets the shim of OnMessageOptions.set_MessageClientEntity(ClientEntity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.RaiseExceptionReceivedExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.RaiseExceptionReceived(ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.ReceiveTimeOutGet">
            <summary>Sets the shim of OnMessageOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AllInstances.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of OnMessageOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AutoCompleteGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoComplete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AutoCompleteSetBoolean">
            <summary>Sets the shim of OnMessageOptions.set_AutoComplete(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AutoRenewLockGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoRenewLock()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AutoRenewTimeoutGet">
            <summary>Sets the shim of OnMessageOptions.get_AutoRenewTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.AutoRenewTimeoutSetTimeSpan">
            <summary>Sets the shim of OnMessageOptions.set_AutoRenewTimeout(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.Constructor">
            <summary>Sets the shim of OnMessageOptions.OnMessageOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.MaxConcurrentCallsGet">
            <summary>Sets the shim of OnMessageOptions.get_MaxConcurrentCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.MaxConcurrentCallsSetInt32">
            <summary>Sets the shim of OnMessageOptions.set_MaxConcurrentCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.MessageClientEntityGet">
            <summary>Sets the shim of OnMessageOptions.get_MessageClientEntity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.MessageClientEntitySetClientEntity">
            <summary>Sets the shim of OnMessageOptions.set_MessageClientEntity(ClientEntity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.RaiseExceptionReceivedExceptionReceivedEventArgs">
            <summary>Sets the shim of OnMessageOptions.RaiseExceptionReceived(ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.ReceiveTimeOutGet">
            <summary>Sets the shim of OnMessageOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnMessageOptions.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of OnMessageOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.OnShardMessageOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.#ctor(Microsoft.ServiceBus.Messaging.OnShardMessageOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.AutoCheckpointGet">
            <summary>Sets the shim of OnShardMessageOptions.get_AutoCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.AutoCheckpointTimeoutGet">
            <summary>Sets the shim of OnShardMessageOptions.get_AutoCheckpointTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.AutoCheckpointTimeoutSetTimeSpan">
            <summary>Sets the shim of OnShardMessageOptions.set_AutoCheckpointTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.MaxConcurrentCallsGet">
            <summary>Sets the shim of OnShardMessageOptions.get_MaxConcurrentCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.MaxConcurrentCallsSetInt32">
            <summary>Sets the shim of OnShardMessageOptions.set_MaxConcurrentCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.MessageClientEntityGet">
            <summary>Sets the shim of OnShardMessageOptions.get_MessageClientEntity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.MessageClientEntitySetClientEntity">
            <summary>Sets the shim of OnShardMessageOptions.set_MessageClientEntity(ClientEntity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.RaiseExceptionReceivedExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.RaiseExceptionReceived(ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.ReceiveTimeOutGet">
            <summary>Sets the shim of OnShardMessageOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AllInstances.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of OnShardMessageOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AutoCheckpointGet">
            <summary>Sets the shim of OnShardMessageOptions.get_AutoCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AutoCheckpointTimeoutGet">
            <summary>Sets the shim of OnShardMessageOptions.get_AutoCheckpointTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.AutoCheckpointTimeoutSetTimeSpan">
            <summary>Sets the shim of OnShardMessageOptions.set_AutoCheckpointTimeout(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.Constructor">
            <summary>Sets the shim of OnShardMessageOptions.OnShardMessageOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.MaxConcurrentCallsGet">
            <summary>Sets the shim of OnShardMessageOptions.get_MaxConcurrentCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.MaxConcurrentCallsSetInt32">
            <summary>Sets the shim of OnShardMessageOptions.set_MaxConcurrentCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.MessageClientEntityGet">
            <summary>Sets the shim of OnShardMessageOptions.get_MessageClientEntity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.MessageClientEntitySetClientEntity">
            <summary>Sets the shim of OnShardMessageOptions.set_MessageClientEntity(ClientEntity value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.RaiseExceptionReceivedExceptionReceivedEventArgs">
            <summary>Sets the shim of OnShardMessageOptions.RaiseExceptionReceived(ExceptionReceivedEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.ReceiveTimeOutGet">
            <summary>Sets the shim of OnShardMessageOptions.get_ReceiveTimeOut()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimOnShardMessageOptions.ReceiveTimeOutSetTimeSpan">
            <summary>Sets the shim of OnShardMessageOptions.set_ReceiveTimeOut(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.#ctor(Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedMessagingFactoryException.ConstructorString">
            <summary>Sets the shim of PairedMessagingFactoryException.PairedMessagingFactoryException(String message)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.#ctor(Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.AllInstances.OptionsGet">
            <summary>Sets the shim of PairedNamespaceEventArgs.get_Options()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.AllInstances.OptionsSetPairedNamespaceOptions">
            <summary>Sets the shim of PairedNamespaceEventArgs.set_Options(PairedNamespaceOptions value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.ConstructorPairedNamespaceOptions">
            <summary>Sets the shim of PairedNamespaceEventArgs.PairedNamespaceEventArgs(PairedNamespaceOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.OptionsGet">
            <summary>Sets the shim of PairedNamespaceEventArgs.get_Options()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceEventArgs.OptionsSetPairedNamespaceOptions">
            <summary>Sets the shim of PairedNamespaceEventArgs.set_Options(PairedNamespaceOptions value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PairedNamespaceOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.ClearPairing">
            <summary>Sets the shim of PairedNamespaceOptions.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.FailoverIntervalGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_FailoverInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.NotifyPrimarySendResultStringBoolean">
            <summary>Sets the shim of PairedNamespaceOptions.NotifyPrimarySendResult(String path, Boolean success)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.PrimaryMessagingFactoryGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_PrimaryMessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.PrimaryMessagingFactorySetMessagingFactory">
            <summary>Sets the shim of PairedNamespaceOptions.set_PrimaryMessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.SecondaryMessagingFactoryGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_SecondaryMessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.AllInstances.SecondaryNamespaceManagerGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_SecondaryNamespaceManager()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.ClearPairing">
            <summary>Sets the shim of PairedNamespaceOptions.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.ConstructorNamespaceManagerMessagingFactory">
            <summary>Sets the shim of PairedNamespaceOptions.PairedNamespaceOptions(NamespaceManager secondaryNamespaceManager, MessagingFactory secondaryMessagingFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.ConstructorNamespaceManagerMessagingFactoryTimeSpan">
            <summary>Sets the shim of PairedNamespaceOptions.PairedNamespaceOptions(NamespaceManager secondaryNamespaceManager, MessagingFactory secondaryMessagingFactory, TimeSpan failoverInterval)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.FailoverIntervalGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_FailoverInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.NotifyPrimarySendResultStringBoolean">
            <summary>Sets the shim of PairedNamespaceOptions.NotifyPrimarySendResult(String path, Boolean success)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.PrimaryMessagingFactoryGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_PrimaryMessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.PrimaryMessagingFactorySetMessagingFactory">
            <summary>Sets the shim of PairedNamespaceOptions.set_PrimaryMessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.SecondaryMessagingFactoryGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_SecondaryMessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPairedNamespaceOptions.SecondaryNamespaceManagerGet">
            <summary>Sets the shim of PairedNamespaceOptions.get_SecondaryNamespaceManager()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PartitionContext</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.#ctor(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.CheckpointAsync">
            <summary>Sets the shim of PartitionContext.CheckpointAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.CheckpointAsyncEventData">
            <summary>Sets the shim of PartitionContext.CheckpointAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.ConsumerGroupNameGet">
            <summary>Sets the shim of PartitionContext.get_ConsumerGroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.ConsumerGroupNameSetString">
            <summary>Sets the shim of PartitionContext.set_ConsumerGroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.EventHubPathGet">
            <summary>Sets the shim of PartitionContext.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of PartitionContext.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.LeaseGet">
            <summary>Sets the shim of PartitionContext.get_Lease()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.LeaseSetLease">
            <summary>Sets the shim of PartitionContext.set_Lease(Lease value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.OffsetGet">
            <summary>Sets the shim of PartitionContext.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.OffsetSetString">
            <summary>Sets the shim of PartitionContext.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.PerformCheckpointAsyncInt64String">
            <summary>Sets the shim of PartitionContext.PerformCheckpointAsync(Int64 sequenceNumber, String offset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.SequenceNumberGet">
            <summary>Sets the shim of PartitionContext.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.AllInstances.SequenceNumberSetInt64">
            <summary>Sets the shim of PartitionContext.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.CheckpointAsync">
            <summary>Sets the shim of PartitionContext.CheckpointAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.CheckpointAsyncEventData">
            <summary>Sets the shim of PartitionContext.CheckpointAsync(EventData data)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.Constructor">
            <summary>Sets the shim of PartitionContext.PartitionContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.ConstructorICheckpointManager">
            <summary>Sets the shim of PartitionContext.PartitionContext(ICheckpointManager checkpointManager)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.ConsumerGroupNameGet">
            <summary>Sets the shim of PartitionContext.get_ConsumerGroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.ConsumerGroupNameSetString">
            <summary>Sets the shim of PartitionContext.set_ConsumerGroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.EventHubPathGet">
            <summary>Sets the shim of PartitionContext.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.EventHubPathSetString">
            <summary>Sets the shim of PartitionContext.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.InterlockedExchangeIfGreaterThanOrEqualInt64RefInt64">
            <summary>Sets the shim of PartitionContext.InterlockedExchangeIfGreaterThanOrEqual(Int64&amp; location, Int64 newValue)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.LeaseGet">
            <summary>Sets the shim of PartitionContext.get_Lease()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.LeaseSetLease">
            <summary>Sets the shim of PartitionContext.set_Lease(Lease value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.OffsetGet">
            <summary>Sets the shim of PartitionContext.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.OffsetSetString">
            <summary>Sets the shim of PartitionContext.set_Offset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.PerformCheckpointAsyncInt64String">
            <summary>Sets the shim of PartitionContext.PerformCheckpointAsync(Int64 sequenceNumber, String offset)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.SequenceNumberGet">
            <summary>Sets the shim of PartitionContext.get_SequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionContext.SequenceNumberSetInt64">
            <summary>Sets the shim of PartitionContext.set_SequenceNumber(Int64 value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PartitionDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.#ctor(Microsoft.ServiceBus.Messaging.PartitionDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.BeginSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_BeginSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of PartitionDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.ConsumerGroupNameGet">
            <summary>Sets the shim of PartitionDescription.get_ConsumerGroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.ConsumerGroupNameSetString">
            <summary>Sets the shim of PartitionDescription.set_ConsumerGroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.EndSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_EndSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.EventHubPathGet">
            <summary>Sets the shim of PartitionDescription.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of PartitionDescription.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.IncomingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_IncomingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalBeginSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_InternalBeginSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalBeginSequenceNumberSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalBeginSequenceNumber(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalEndSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_InternalEndSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalEndSequenceNumberSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalEndSequenceNumber(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalIncomingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_InternalIncomingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalIncomingBytesPerSecondSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalIncomingBytesPerSecond(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastCheckpointGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastCheckpointSetString">
            <summary>Sets the shim of PartitionDescription.set_InternalLastCheckpoint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastEnqueuedOffsetSetString">
            <summary>Sets the shim of PartitionDescription.set_InternalLastEnqueuedOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalLastEnqueuedTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of PartitionDescription.set_InternalLastEnqueuedTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalOutgoingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_InternalOutgoingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalOutgoingBytesPerSecondSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalOutgoingBytesPerSecond(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalSizeInBytesGet">
            <summary>Sets the shim of PartitionDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.LastCheckpointGet">
            <summary>Sets the shim of PartitionDescription.get_LastCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.LastCheckpointSetString">
            <summary>Sets the shim of PartitionDescription.set_LastCheckpoint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.LastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionDescription.get_LastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.LastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionDescription.get_LastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.OutgoingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_OutgoingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.PartitionIdGet">
            <summary>Sets the shim of PartitionDescription.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of PartitionDescription.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.AllInstances.SizeInBytesGet">
            <summary>Sets the shim of PartitionDescription.get_SizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.BeginSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_BeginSequenceNumber()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of PartitionDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.Constructor">
            <summary>Sets the shim of PartitionDescription.PartitionDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.ConstructorStringString">
            <summary>Sets the shim of PartitionDescription.PartitionDescription(String eventHubPath, String partitionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.ConsumerGroupNameGet">
            <summary>Sets the shim of PartitionDescription.get_ConsumerGroupName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.ConsumerGroupNameSetString">
            <summary>Sets the shim of PartitionDescription.set_ConsumerGroupName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.EndSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_EndSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.EventHubPathGet">
            <summary>Sets the shim of PartitionDescription.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.EventHubPathSetString">
            <summary>Sets the shim of PartitionDescription.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.IncomingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_IncomingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalBeginSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_InternalBeginSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalBeginSequenceNumberSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalBeginSequenceNumber(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalEndSequenceNumberGet">
            <summary>Sets the shim of PartitionDescription.get_InternalEndSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalEndSequenceNumberSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalEndSequenceNumber(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalIncomingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_InternalIncomingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalIncomingBytesPerSecondSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalIncomingBytesPerSecond(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastCheckpointGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastCheckpointSetString">
            <summary>Sets the shim of PartitionDescription.set_InternalLastCheckpoint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastEnqueuedOffsetSetString">
            <summary>Sets the shim of PartitionDescription.set_InternalLastEnqueuedOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionDescription.get_InternalLastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalLastEnqueuedTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of PartitionDescription.set_InternalLastEnqueuedTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalOutgoingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_InternalOutgoingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalOutgoingBytesPerSecondSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalOutgoingBytesPerSecond(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalSizeInBytesGet">
            <summary>Sets the shim of PartitionDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of PartitionDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.LastCheckpointGet">
            <summary>Sets the shim of PartitionDescription.get_LastCheckpoint()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.LastCheckpointSetString">
            <summary>Sets the shim of PartitionDescription.set_LastCheckpoint(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.LastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionDescription.get_LastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.LastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionDescription.get_LastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.OutgoingBytesPerSecondGet">
            <summary>Sets the shim of PartitionDescription.get_OutgoingBytesPerSecond()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.PartitionIdGet">
            <summary>Sets the shim of PartitionDescription.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.PartitionIdSetString">
            <summary>Sets the shim of PartitionDescription.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionDescription.SizeInBytesGet">
            <summary>Sets the shim of PartitionDescription.get_SizeInBytes()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PartitionNotOwnedException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.#ctor(Microsoft.ServiceBus.Messaging.PartitionNotOwnedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of PartitionNotOwnedException.PartitionNotOwnedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.ConstructorString">
            <summary>Sets the shim of PartitionNotOwnedException.PartitionNotOwnedException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionNotOwnedException.ConstructorStringException">
            <summary>Sets the shim of PartitionNotOwnedException.PartitionNotOwnedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.#ctor(Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.BeginSequenceNumberGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_BeginSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.BeginSequenceNumberSetInt64">
            <summary>Sets the shim of PartitionRuntimeInformation.set_BeginSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.EventHubPathGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.EventHubPathSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedOffsetSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedSequenceNumberGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedSequenceNumberSetInt64">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.LastEnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.PartitionIdGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.PartitionIdSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.TypeGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_Type()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.AllInstances.TypeSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_Type(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.BeginSequenceNumberGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_BeginSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.BeginSequenceNumberSetInt64">
            <summary>Sets the shim of PartitionRuntimeInformation.set_BeginSequenceNumber(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.Constructor">
            <summary>Sets the shim of PartitionRuntimeInformation.PartitionRuntimeInformation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.EventHubPathGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_EventHubPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.EventHubPathSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_EventHubPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedOffsetGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedOffset()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedOffsetSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedOffset(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedSequenceNumberGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedSequenceNumber()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedSequenceNumberSetInt64">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedTimeUtcGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_LastEnqueuedTimeUtc()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.LastEnqueuedTimeUtcSetDateTime">
            <summary>Sets the shim of PartitionRuntimeInformation.set_LastEnqueuedTimeUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.PartitionIdGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_PartitionId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.PartitionIdSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_PartitionId(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.TypeGet">
            <summary>Sets the shim of PartitionRuntimeInformation.get_Type()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPartitionRuntimeInformation.TypeSetString">
            <summary>Sets the shim of PartitionRuntimeInformation.set_Type(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.PublisherRevokedException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.#ctor(Microsoft.ServiceBus.Messaging.PublisherRevokedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of PublisherRevokedException.PublisherRevokedException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of PublisherRevokedException.PublisherRevokedException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of PublisherRevokedException.PublisherRevokedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.ConstructorString">
            <summary>Sets the shim of PublisherRevokedException.PublisherRevokedException(String publisherName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimPublisherRevokedException.ConstructorStringException">
            <summary>Sets the shim of PublisherRevokedException.PublisherRevokedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.QueueClient</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.#ctor(Microsoft.ServiceBus.Messaging.QueueClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AbandonAsyncGuid">
            <summary>Sets the shim of QueueClient.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AbandonGuid">
            <summary>Sets the shim of QueueClient.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSession">
            <summary>Sets the shim of QueueClient.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionAsync">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionAsyncString">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionAsyncStringTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionString">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionStringTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AbandonAsyncGuid">
            <summary>Sets the shim of QueueClient.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AbandonGuid">
            <summary>Sets the shim of QueueClient.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSession">
            <summary>Sets the shim of QueueClient.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionAsync">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionAsyncString">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionAsyncStringTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionString">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionStringTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of QueueClient.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginAcceptMessageSessionStringTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginAcceptMessageSession(String sessionId, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCreateReceiverReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateReceiver(ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCreateReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateReceiver(String subQueuePath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginCreateSenderTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateSender(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginGetMessageSessionsDateTimeAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginGetMessageSessions(DateTime lastUpdatedTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.CancelScheduledMessageAsyncInt64">
            <summary>Sets the shim of QueueClient.CancelScheduledMessageAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.CompleteAsyncGuid">
            <summary>Sets the shim of QueueClient.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of QueueClient.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of QueueClient.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.CompleteGuid">
            <summary>Sets the shim of QueueClient.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterAsyncGuid">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterGuid">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeadLetterGuidStringString">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeferAsyncGuid">
            <summary>Sets the shim of QueueClient.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeferGuid">
            <summary>Sets the shim of QueueClient.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndAbandonIAsyncResult">
            <summary>Sets the shim of QueueClient.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of QueueClient.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndCompleteIAsyncResult">
            <summary>Sets the shim of QueueClient.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndCreateReceiverIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCreateReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndCreateSenderIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCreateSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of QueueClient.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndDeferIAsyncResult">
            <summary>Sets the shim of QueueClient.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndGetMessageSessionsIAsyncResult">
            <summary>Sets the shim of QueueClient.EndGetMessageSessions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndPeekIAsyncResult">
            <summary>Sets the shim of QueueClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndReceiveIAsyncResult">
            <summary>Sets the shim of QueueClient.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of QueueClient.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndSendBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EndSendIAsyncResult">
            <summary>Sets the shim of QueueClient.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EnsureCreateInternalBrowser">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EnsureCreateInternalReceiver">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.EnsureCreateInternalSender">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.GetMessageSessions">
            <summary>Sets the shim of QueueClient.GetMessageSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.GetMessageSessionsAsync">
            <summary>Sets the shim of QueueClient.GetMessageSessionsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.GetMessageSessionsAsyncDateTime">
            <summary>Sets the shim of QueueClient.GetMessageSessionsAsync(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.GetMessageSessionsDateTime">
            <summary>Sets the shim of QueueClient.GetMessageSessions(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.InternalReceiverGet">
            <summary>Sets the shim of QueueClient.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of QueueClient.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.InternalSenderGet">
            <summary>Sets the shim of QueueClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.InternalSenderSetMessageSender">
            <summary>Sets the shim of QueueClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.IsSubQueueGet">
            <summary>Sets the shim of QueueClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.IsSubQueueSetBoolean">
            <summary>Sets the shim of QueueClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of QueueClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of QueueClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ModeGet">
            <summary>Sets the shim of QueueClient.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ModeSetReceiveMode">
            <summary>Sets the shim of QueueClient.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnAbort">
            <summary>Sets the shim of QueueClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of QueueClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of QueueClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnMessageActionOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of QueueClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnMessageAsyncFuncOfBrokeredMessageTask">
            <summary>Sets the shim of QueueClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of QueueClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of QueueClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PathGet">
            <summary>Sets the shim of QueueClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PathSetString">
            <summary>Sets the shim of QueueClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.Peek">
            <summary>Sets the shim of QueueClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekAsync">
            <summary>Sets the shim of QueueClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekAsyncInt64">
            <summary>Sets the shim of QueueClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekBatchAsyncInt32">
            <summary>Sets the shim of QueueClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of QueueClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekBatchInt32">
            <summary>Sets the shim of QueueClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekBatchInt64Int32">
            <summary>Sets the shim of QueueClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PeekInt64">
            <summary>Sets the shim of QueueClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of QueueClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of QueueClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.Receive">
            <summary>Sets the shim of QueueClient.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveAsync">
            <summary>Sets the shim of QueueClient.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveAsyncInt64">
            <summary>Sets the shim of QueueClient.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of QueueClient.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchInt32">
            <summary>Sets the shim of QueueClient.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveInt64">
            <summary>Sets the shim of QueueClient.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ReceiveTimeSpan">
            <summary>Sets the shim of QueueClient.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of QueueClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerAsyncType">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerAsync(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerAsyncTypeSessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerAsync(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerFactoryAsyncIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactoryAsync(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerFactoryAsyncIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactoryAsync(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerFactoryIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactory(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerFactoryIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactory(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerType">
            <summary>Sets the shim of QueueClient.RegisterSessionHandler(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RegisterSessionHandlerTypeSessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandler(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RenewMessageLockAsyncGuid">
            <summary>Sets the shim of QueueClient.RenewMessageLockAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.RenewMessageLockGuid">
            <summary>Sets the shim of QueueClient.RenewMessageLock(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ScheduleMessageAsyncBrokeredMessageDateTimeOffset">
            <summary>Sets the shim of QueueClient.ScheduleMessageAsync(BrokeredMessage message, DateTimeOffset scheduleEnqueueTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.SendAsyncBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.SendBrokeredMessage">
            <summary>Sets the shim of QueueClient.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ThrowIfBrowserNullString">
            <summary>Sets the shim of QueueClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ThrowIfReceiverNullString">
            <summary>Sets the shim of QueueClient.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances.ThrowIfSenderNullString">
            <summary>Sets the shim of QueueClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances._AcceptMessageSessionAsyncb__16AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.&lt;AcceptMessageSessionAsync&gt;b__16(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances._GetMessageSessionsAsyncb__24AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.&lt;GetMessageSessionsAsync&gt;b__24(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.AllInstances._RenewMessageLockAsyncb__1IAsyncResult">
            <summary>Sets the shim of QueueClient.&lt;RenewMessageLockAsync&gt;b__1(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginAcceptMessageSessionStringTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginAcceptMessageSession(String sessionId, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCreateReceiverReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateReceiver(ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCreateReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateReceiver(String subQueuePath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginCreateSenderTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginCreateSender(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginGetMessageSessionsDateTimeAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginGetMessageSessions(DateTime lastUpdatedTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CancelScheduledMessageAsyncInt64">
            <summary>Sets the shim of QueueClient.CancelScheduledMessageAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CompleteAsyncGuid">
            <summary>Sets the shim of QueueClient.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of QueueClient.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of QueueClient.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CompleteGuid">
            <summary>Sets the shim of QueueClient.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ConstructorMessagingFactoryStringReceiveMode">
            <summary>Sets the shim of QueueClient.QueueClient(MessagingFactory messagingFactory, String path, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateFromConnectionStringString">
            <summary>Sets the shim of QueueClient.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateFromConnectionStringStringReceiveMode">
            <summary>Sets the shim of QueueClient.CreateFromConnectionString(String connectionString, ReceiveMode mode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateFromConnectionStringStringString">
            <summary>Sets the shim of QueueClient.CreateFromConnectionString(String connectionString, String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateFromConnectionStringStringStringReceiveMode">
            <summary>Sets the shim of QueueClient.CreateFromConnectionString(String connectionString, String path, ReceiveMode mode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateString">
            <summary>Sets the shim of QueueClient.Create(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.CreateStringReceiveMode">
            <summary>Sets the shim of QueueClient.Create(String path, ReceiveMode mode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterAsyncGuid">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of QueueClient.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterGuid">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeadLetterGuidStringString">
            <summary>Sets the shim of QueueClient.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeferAsyncGuid">
            <summary>Sets the shim of QueueClient.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeferGuid">
            <summary>Sets the shim of QueueClient.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of QueueClient.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndAbandonIAsyncResult">
            <summary>Sets the shim of QueueClient.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of QueueClient.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndCompleteIAsyncResult">
            <summary>Sets the shim of QueueClient.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndCreateReceiverIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCreateReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndCreateSenderIAsyncResult">
            <summary>Sets the shim of QueueClient.EndCreateSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of QueueClient.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndDeferIAsyncResult">
            <summary>Sets the shim of QueueClient.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndGetMessageSessionsIAsyncResult">
            <summary>Sets the shim of QueueClient.EndGetMessageSessions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndPeekIAsyncResult">
            <summary>Sets the shim of QueueClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndReceiveIAsyncResult">
            <summary>Sets the shim of QueueClient.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of QueueClient.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndSendBatchIAsyncResult">
            <summary>Sets the shim of QueueClient.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EndSendIAsyncResult">
            <summary>Sets the shim of QueueClient.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EnsureCreateInternalBrowser">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EnsureCreateInternalReceiver">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.EnsureCreateInternalSender">
            <summary>Sets the shim of QueueClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.FormatDeadLetterPathString">
            <summary>Sets the shim of QueueClient.FormatDeadLetterPath(String queuePath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.FormatTransferDeadLetterPathString">
            <summary>Sets the shim of QueueClient.FormatTransferDeadLetterPath(String queuePath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.GetMessageSessions">
            <summary>Sets the shim of QueueClient.GetMessageSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.GetMessageSessionsAsync">
            <summary>Sets the shim of QueueClient.GetMessageSessionsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.GetMessageSessionsAsyncDateTime">
            <summary>Sets the shim of QueueClient.GetMessageSessionsAsync(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.GetMessageSessionsDateTime">
            <summary>Sets the shim of QueueClient.GetMessageSessions(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.InternalReceiverGet">
            <summary>Sets the shim of QueueClient.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of QueueClient.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.InternalSenderGet">
            <summary>Sets the shim of QueueClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.InternalSenderSetMessageSender">
            <summary>Sets the shim of QueueClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.IsSubQueueGet">
            <summary>Sets the shim of QueueClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.IsSubQueueSetBoolean">
            <summary>Sets the shim of QueueClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.MessagingFactoryGet">
            <summary>Sets the shim of QueueClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of QueueClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ModeGet">
            <summary>Sets the shim of QueueClient.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ModeSetReceiveMode">
            <summary>Sets the shim of QueueClient.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnAbort">
            <summary>Sets the shim of QueueClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of QueueClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnCloseTimeSpan">
            <summary>Sets the shim of QueueClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnEndCloseIAsyncResult">
            <summary>Sets the shim of QueueClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnMessageActionOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of QueueClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnMessageAsyncFuncOfBrokeredMessageTask">
            <summary>Sets the shim of QueueClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of QueueClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.OperationTimeoutGet">
            <summary>Sets the shim of QueueClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PathGet">
            <summary>Sets the shim of QueueClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PathSetString">
            <summary>Sets the shim of QueueClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.Peek">
            <summary>Sets the shim of QueueClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekAsync">
            <summary>Sets the shim of QueueClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekAsyncInt64">
            <summary>Sets the shim of QueueClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekBatchAsyncInt32">
            <summary>Sets the shim of QueueClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of QueueClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekBatchInt32">
            <summary>Sets the shim of QueueClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekBatchInt64Int32">
            <summary>Sets the shim of QueueClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PeekInt64">
            <summary>Sets the shim of QueueClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PrefetchCountGet">
            <summary>Sets the shim of QueueClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.PrefetchCountSetInt32">
            <summary>Sets the shim of QueueClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.Receive">
            <summary>Sets the shim of QueueClient.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveAsync">
            <summary>Sets the shim of QueueClient.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveAsyncInt64">
            <summary>Sets the shim of QueueClient.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of QueueClient.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchInt32">
            <summary>Sets the shim of QueueClient.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of QueueClient.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveInt64">
            <summary>Sets the shim of QueueClient.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ReceiveTimeSpan">
            <summary>Sets the shim of QueueClient.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of QueueClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerAsyncType">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerAsync(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerAsyncTypeSessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerAsync(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerFactoryAsyncIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactoryAsync(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerFactoryAsyncIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactoryAsync(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerFactoryIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactory(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerFactoryIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandlerFactory(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerType">
            <summary>Sets the shim of QueueClient.RegisterSessionHandler(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RegisterSessionHandlerTypeSessionHandlerOptions">
            <summary>Sets the shim of QueueClient.RegisterSessionHandler(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RenewMessageLockAsyncGuid">
            <summary>Sets the shim of QueueClient.RenewMessageLockAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.RenewMessageLockGuid">
            <summary>Sets the shim of QueueClient.RenewMessageLock(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ScheduleMessageAsyncBrokeredMessageDateTimeOffset">
            <summary>Sets the shim of QueueClient.ScheduleMessageAsync(BrokeredMessage message, DateTimeOffset scheduleEnqueueTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.SendAsyncBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of QueueClient.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.SendBrokeredMessage">
            <summary>Sets the shim of QueueClient.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ThrowIfBrowserNullString">
            <summary>Sets the shim of QueueClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ThrowIfReceiverNullString">
            <summary>Sets the shim of QueueClient.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient.ThrowIfSenderNullString">
            <summary>Sets the shim of QueueClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient._AcceptMessageSessionAsyncb__16AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.&lt;AcceptMessageSessionAsync&gt;b__16(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient._GetMessageSessionsAsyncb__24AsyncCallbackObject">
            <summary>Sets the shim of QueueClient.&lt;GetMessageSessionsAsync&gt;b__24(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueClient._RenewMessageLockAsyncb__1IAsyncResult">
            <summary>Sets the shim of QueueClient.&lt;RenewMessageLockAsync&gt;b__1(IAsyncResult r)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.QueueDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.#ctor(Microsoft.ServiceBus.Messaging.QueueDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AccessedAtGet">
            <summary>Sets the shim of QueueDescription.get_AccessedAt()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.AccessedAtGet">
            <summary>Sets the shim of QueueDescription.get_AccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.AuthorizationGet">
            <summary>Sets the shim of QueueDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.AutoDeleteOnIdleGet">
            <summary>Sets the shim of QueueDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.AvailabilityStatusGet">
            <summary>Sets the shim of QueueDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of QueueDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of QueueDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of QueueDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.DuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of QueueDescription.get_DuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.DuplicateDetectionHistoryTimeWindowSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_DuplicateDetectionHistoryTimeWindow(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableBatchedOperationsGet">
            <summary>Sets the shim of QueueDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of QueueDescription.get_EnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableDeadLetteringOnMessageExpirationSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableDeadLetteringOnMessageExpiration(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableExpressGet">
            <summary>Sets the shim of QueueDescription.get_EnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnableExpressSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnablePartitioningGet">
            <summary>Sets the shim of QueueDescription.get_EnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.EnablePartitioningSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnablePartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.ForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of QueueDescription.get_ForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.ForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of QueueDescription.set_ForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.ForwardToGet">
            <summary>Sets the shim of QueueDescription.get_ForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.ForwardToSetString">
            <summary>Sets the shim of QueueDescription.set_ForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.GetNewPath">
            <summary>Sets the shim of QueueDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAccessedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAuthorizationGet">
            <summary>Sets the shim of QueueDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of QueueDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of QueueDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAvailabilityStatusGet">
            <summary>Sets the shim of QueueDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of QueueDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of QueueDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalDuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of QueueDescription.get_InternalDuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalDuplicateDetectionHistoryTimeWindowSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalDuplicateDetectionHistoryTimeWindow(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableDeadLetteringOnMessageExpirationSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableDeadLetteringOnMessageExpiration(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableExpressGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnableExpressSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnablePartitioningGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalEnablePartitioningSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnablePartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of QueueDescription.get_InternalForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of QueueDescription.set_InternalForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalForwardToGet">
            <summary>Sets the shim of QueueDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalForwardToSetString">
            <summary>Sets the shim of QueueDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalIsAnonymousAccessibleGet">
            <summary>Sets the shim of QueueDescription.get_InternalIsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalIsAnonymousAccessibleSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalIsAnonymousAccessible(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalIsExpressGet">
            <summary>Sets the shim of QueueDescription.get_InternalIsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalIsExpressSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalIsExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalLockDurationGet">
            <summary>Sets the shim of QueueDescription.get_InternalLockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalLockDurationSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalLockDuration(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMaxDeliveryCountGet">
            <summary>Sets the shim of QueueDescription.get_InternalMaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMaxDeliveryCountSetNullableOfInt32">
            <summary>Sets the shim of QueueDescription.set_InternalMaxDeliveryCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMaxSizeInMegabytesGet">
            <summary>Sets the shim of QueueDescription.get_InternalMaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMaxSizeInMegabytesSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalMaxSizeInMegabytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMessageCountDetailsGet">
            <summary>Sets the shim of QueueDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of QueueDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMessageCountGet">
            <summary>Sets the shim of QueueDescription.get_InternalMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalMessageCountSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalMessageCount(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalNewPathGet">
            <summary>Sets the shim of QueueDescription.get_InternalNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalNewPathSetString">
            <summary>Sets the shim of QueueDescription.set_InternalNewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalRequiresDuplicateDetectionGet">
            <summary>Sets the shim of QueueDescription.get_InternalRequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalRequiresDuplicateDetectionSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalRequiresDuplicateDetection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalRequiresSessionGet">
            <summary>Sets the shim of QueueDescription.get_InternalRequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalRequiresSessionSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalRequiresSession(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalSizeInBytesGet">
            <summary>Sets the shim of QueueDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalStatusGet">
            <summary>Sets the shim of QueueDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of QueueDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalSupportOrderingGet">
            <summary>Sets the shim of QueueDescription.get_InternalSupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalSupportOrderingSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalSupportOrdering(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of QueueDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of QueueDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.IsAnonymousAccessibleGet">
            <summary>Sets the shim of QueueDescription.get_IsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.IsAnonymousAccessibleSetBoolean">
            <summary>Sets the shim of QueueDescription.set_IsAnonymousAccessible(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.IsExpressGet">
            <summary>Sets the shim of QueueDescription.get_IsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.IsExpressSetBoolean">
            <summary>Sets the shim of QueueDescription.set_IsExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.IsValidForRename">
            <summary>Sets the shim of QueueDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.LockDurationGet">
            <summary>Sets the shim of QueueDescription.get_LockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.LockDurationSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_LockDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MaxDeliveryCountGet">
            <summary>Sets the shim of QueueDescription.get_MaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MaxDeliveryCountSetInt32">
            <summary>Sets the shim of QueueDescription.set_MaxDeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MaxSizeInMegabytesGet">
            <summary>Sets the shim of QueueDescription.get_MaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MaxSizeInMegabytesSetInt64">
            <summary>Sets the shim of QueueDescription.set_MaxSizeInMegabytes(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MessageCountDetailsGet">
            <summary>Sets the shim of QueueDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.MessageCountGet">
            <summary>Sets the shim of QueueDescription.get_MessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.NewPathGet">
            <summary>Sets the shim of QueueDescription.get_NewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.NewPathSetString">
            <summary>Sets the shim of QueueDescription.set_NewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of QueueDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of QueueDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.PathGet">
            <summary>Sets the shim of QueueDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.PathSetString">
            <summary>Sets the shim of QueueDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.RequiresDuplicateDetectionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.RequiresDuplicateDetectionSetBoolean">
            <summary>Sets the shim of QueueDescription.set_RequiresDuplicateDetection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.RequiresSessionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.RequiresSessionSetBoolean">
            <summary>Sets the shim of QueueDescription.set_RequiresSession(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of QueueDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of QueueDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.SizeInBytesGet">
            <summary>Sets the shim of QueueDescription.get_SizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.StatusGet">
            <summary>Sets the shim of QueueDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.StatusSetEntityStatus">
            <summary>Sets the shim of QueueDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.SupportOrderingGet">
            <summary>Sets the shim of QueueDescription.get_SupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.SupportOrderingSetBoolean">
            <summary>Sets the shim of QueueDescription.set_SupportOrdering(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.UpdateForRenameEntityDescription">
            <summary>Sets the shim of QueueDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of QueueDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of QueueDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of QueueDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AuthorizationGet">
            <summary>Sets the shim of QueueDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AutoDeleteOnIdleGet">
            <summary>Sets the shim of QueueDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.AvailabilityStatusGet">
            <summary>Sets the shim of QueueDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of QueueDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.Constructor">
            <summary>Sets the shim of QueueDescription.QueueDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.ConstructorString">
            <summary>Sets the shim of QueueDescription.QueueDescription(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.CreatedAtGet">
            <summary>Sets the shim of QueueDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of QueueDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.DuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of QueueDescription.get_DuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.DuplicateDetectionHistoryTimeWindowSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_DuplicateDetectionHistoryTimeWindow(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableBatchedOperationsGet">
            <summary>Sets the shim of QueueDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of QueueDescription.get_EnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableDeadLetteringOnMessageExpirationSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableDeadLetteringOnMessageExpiration(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableExpressGet">
            <summary>Sets the shim of QueueDescription.get_EnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnableExpressSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnableExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnablePartitioningGet">
            <summary>Sets the shim of QueueDescription.get_EnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.EnablePartitioningSetBoolean">
            <summary>Sets the shim of QueueDescription.set_EnablePartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.ForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of QueueDescription.get_ForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.ForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of QueueDescription.set_ForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.ForwardToGet">
            <summary>Sets the shim of QueueDescription.get_ForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.ForwardToSetString">
            <summary>Sets the shim of QueueDescription.set_ForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.GetNewPath">
            <summary>Sets the shim of QueueDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAccessedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAuthorizationGet">
            <summary>Sets the shim of QueueDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of QueueDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of QueueDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAvailabilityStatusGet">
            <summary>Sets the shim of QueueDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of QueueDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalCreatedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of QueueDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalDuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of QueueDescription.get_InternalDuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalDuplicateDetectionHistoryTimeWindowSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalDuplicateDetectionHistoryTimeWindow(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableDeadLetteringOnMessageExpirationSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableDeadLetteringOnMessageExpiration(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableExpressGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnableExpressSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnableExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnablePartitioningGet">
            <summary>Sets the shim of QueueDescription.get_InternalEnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalEnablePartitioningSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalEnablePartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of QueueDescription.get_InternalForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of QueueDescription.set_InternalForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalForwardToGet">
            <summary>Sets the shim of QueueDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalForwardToSetString">
            <summary>Sets the shim of QueueDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalIsAnonymousAccessibleGet">
            <summary>Sets the shim of QueueDescription.get_InternalIsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalIsAnonymousAccessibleSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalIsAnonymousAccessible(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalIsExpressGet">
            <summary>Sets the shim of QueueDescription.get_InternalIsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalIsExpressSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalIsExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalLockDurationGet">
            <summary>Sets the shim of QueueDescription.get_InternalLockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalLockDurationSetNullableOfTimeSpan">
            <summary>Sets the shim of QueueDescription.set_InternalLockDuration(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMaxDeliveryCountGet">
            <summary>Sets the shim of QueueDescription.get_InternalMaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMaxDeliveryCountSetNullableOfInt32">
            <summary>Sets the shim of QueueDescription.set_InternalMaxDeliveryCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMaxSizeInMegabytesGet">
            <summary>Sets the shim of QueueDescription.get_InternalMaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMaxSizeInMegabytesSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalMaxSizeInMegabytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMessageCountDetailsGet">
            <summary>Sets the shim of QueueDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of QueueDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMessageCountGet">
            <summary>Sets the shim of QueueDescription.get_InternalMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalMessageCountSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalMessageCount(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalNewPathGet">
            <summary>Sets the shim of QueueDescription.get_InternalNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalNewPathSetString">
            <summary>Sets the shim of QueueDescription.set_InternalNewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalRequiresDuplicateDetectionGet">
            <summary>Sets the shim of QueueDescription.get_InternalRequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalRequiresDuplicateDetectionSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalRequiresDuplicateDetection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalRequiresSessionGet">
            <summary>Sets the shim of QueueDescription.get_InternalRequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalRequiresSessionSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalRequiresSession(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalSizeInBytesGet">
            <summary>Sets the shim of QueueDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of QueueDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalStatusGet">
            <summary>Sets the shim of QueueDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of QueueDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalSupportOrderingGet">
            <summary>Sets the shim of QueueDescription.get_InternalSupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalSupportOrderingSetNullableOfBoolean">
            <summary>Sets the shim of QueueDescription.set_InternalSupportOrdering(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of QueueDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of QueueDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalUserMetadataGet">
            <summary>Sets the shim of QueueDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of QueueDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.IsAnonymousAccessibleGet">
            <summary>Sets the shim of QueueDescription.get_IsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.IsAnonymousAccessibleSetBoolean">
            <summary>Sets the shim of QueueDescription.set_IsAnonymousAccessible(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.IsExpressGet">
            <summary>Sets the shim of QueueDescription.get_IsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.IsExpressSetBoolean">
            <summary>Sets the shim of QueueDescription.set_IsExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.IsValidForRename">
            <summary>Sets the shim of QueueDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.LockDurationGet">
            <summary>Sets the shim of QueueDescription.get_LockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.LockDurationSetTimeSpan">
            <summary>Sets the shim of QueueDescription.set_LockDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MaxDeliveryCountGet">
            <summary>Sets the shim of QueueDescription.get_MaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MaxDeliveryCountSetInt32">
            <summary>Sets the shim of QueueDescription.set_MaxDeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MaxSizeInMegabytesGet">
            <summary>Sets the shim of QueueDescription.get_MaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MaxSizeInMegabytesSetInt64">
            <summary>Sets the shim of QueueDescription.set_MaxSizeInMegabytes(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MessageCountDetailsGet">
            <summary>Sets the shim of QueueDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.MessageCountGet">
            <summary>Sets the shim of QueueDescription.get_MessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.NewPathGet">
            <summary>Sets the shim of QueueDescription.get_NewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.NewPathSetString">
            <summary>Sets the shim of QueueDescription.set_NewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of QueueDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of QueueDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.PathGet">
            <summary>Sets the shim of QueueDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.PathSetString">
            <summary>Sets the shim of QueueDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.RequiresDuplicateDetectionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.RequiresDuplicateDetectionSetBoolean">
            <summary>Sets the shim of QueueDescription.set_RequiresDuplicateDetection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.RequiresEncryptionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.RequiresSessionGet">
            <summary>Sets the shim of QueueDescription.get_RequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.RequiresSessionSetBoolean">
            <summary>Sets the shim of QueueDescription.set_RequiresSession(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of QueueDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of QueueDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.SizeInBytesGet">
            <summary>Sets the shim of QueueDescription.get_SizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.StaticConstructor">
            <summary>Sets the shim of QueueDescription.QueueDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.StatusGet">
            <summary>Sets the shim of QueueDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.StatusSetEntityStatus">
            <summary>Sets the shim of QueueDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.SupportOrderingGet">
            <summary>Sets the shim of QueueDescription.get_SupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.SupportOrderingSetBoolean">
            <summary>Sets the shim of QueueDescription.set_SupportOrdering(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.UpdateForRenameEntityDescription">
            <summary>Sets the shim of QueueDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.UpdatedAtGet">
            <summary>Sets the shim of QueueDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.UserMetadataGet">
            <summary>Sets the shim of QueueDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQueueDescription.UserMetadataSetString">
            <summary>Sets the shim of QueueDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.QuotaExceededException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.#ctor(Microsoft.ServiceBus.Messaging.QuotaExceededException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of QuotaExceededException.QuotaExceededException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of QuotaExceededException.QuotaExceededException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of QuotaExceededException.QuotaExceededException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.ConstructorString">
            <summary>Sets the shim of QuotaExceededException.QuotaExceededException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimQuotaExceededException.ConstructorStringException">
            <summary>Sets the shim of QuotaExceededException.QuotaExceededException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.#ctor(Microsoft.ServiceBus.Messaging.ReceiverDisconnectedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of ReceiverDisconnectedException.ReceiverDisconnectedException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of ReceiverDisconnectedException.ReceiverDisconnectedException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ReceiverDisconnectedException.ReceiverDisconnectedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.ConstructorString">
            <summary>Sets the shim of ReceiverDisconnectedException.ReceiverDisconnectedException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimReceiverDisconnectedException.ConstructorStringException">
            <summary>Sets the shim of ReceiverDisconnectedException.ReceiverDisconnectedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.RelayDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.#ctor(Microsoft.ServiceBus.Messaging.RelayDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.AuthorGet">
            <summary>Sets the shim of RelayDescription.get_Author()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.AuthorSetString">
            <summary>Sets the shim of RelayDescription.set_Author(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.AuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.ClearSensitiveMembers">
            <summary>Sets the shim of RelayDescription.ClearSensitiveMembers()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.CollectionNameGet">
            <summary>Sets the shim of RelayDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of RelayDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.CreatedAtSetDateTime">
            <summary>Sets the shim of RelayDescription.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IdGet">
            <summary>Sets the shim of RelayDescription.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IdSetNullableOfInt64">
            <summary>Sets the shim of RelayDescription.set_Id(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of RelayDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of RelayDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RelayDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalIsDynamicGet">
            <summary>Sets the shim of RelayDescription.get_InternalIsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalIsDynamicSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalIsDynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalIsHybridConnectionGet">
            <summary>Sets the shim of RelayDescription.get_InternalIsHybridConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalIsHybridConnectionSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalIsHybridConnection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalListenerCountGet">
            <summary>Sets the shim of RelayDescription.get_InternalListenerCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalListenerCountSetNullableOfInt32">
            <summary>Sets the shim of RelayDescription.set_InternalListenerCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalPathGet">
            <summary>Sets the shim of RelayDescription.get_InternalPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalPathSetString">
            <summary>Sets the shim of RelayDescription.set_InternalPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalPublishToRegistryGet">
            <summary>Sets the shim of RelayDescription.get_InternalPublishToRegistry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalPublishToRegistrySetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalPublishToRegistry(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRelayTypeGet">
            <summary>Sets the shim of RelayDescription.get_InternalRelayType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRelayTypeSetNullableOfRelayType">
            <summary>Sets the shim of RelayDescription.set_InternalRelayType(Nullable`1&lt;RelayType&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRequiresClientAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_InternalRequiresClientAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRequiresClientAuthorizationSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalRequiresClientAuthorization(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRequiresTransportSecurityGet">
            <summary>Sets the shim of RelayDescription.get_InternalRequiresTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalRequiresTransportSecuritySetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalRequiresTransportSecurity(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of RelayDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RelayDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of RelayDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of RelayDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IsDynamicGet">
            <summary>Sets the shim of RelayDescription.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IsDynamicSetBoolean">
            <summary>Sets the shim of RelayDescription.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IsHybridConnectionGet">
            <summary>Sets the shim of RelayDescription.get_IsHybridConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.IsHybridConnectionSetBoolean">
            <summary>Sets the shim of RelayDescription.set_IsHybridConnection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.ListenerCountGet">
            <summary>Sets the shim of RelayDescription.get_ListenerCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.ListenerCountSetInt32">
            <summary>Sets the shim of RelayDescription.set_ListenerCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.PathGet">
            <summary>Sets the shim of RelayDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.PathSetString">
            <summary>Sets the shim of RelayDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.PublishToRegistryGet">
            <summary>Sets the shim of RelayDescription.get_PublishToRegistry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.PublishToRegistrySetBoolean">
            <summary>Sets the shim of RelayDescription.set_PublishToRegistry(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RelayTypeGet">
            <summary>Sets the shim of RelayDescription.get_RelayType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RelayTypeSetRelayType">
            <summary>Sets the shim of RelayDescription.set_RelayType(RelayType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RequiresClientAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_RequiresClientAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RequiresClientAuthorizationSetBoolean">
            <summary>Sets the shim of RelayDescription.set_RequiresClientAuthorization(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of RelayDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RequiresTransportSecurityGet">
            <summary>Sets the shim of RelayDescription.get_RequiresTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RequiresTransportSecuritySetBoolean">
            <summary>Sets the shim of RelayDescription.set_RequiresTransportSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RuntimeAddressGet">
            <summary>Sets the shim of RelayDescription.get_RuntimeAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.RuntimeAddressSetUri">
            <summary>Sets the shim of RelayDescription.set_RuntimeAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.StatusGet">
            <summary>Sets the shim of RelayDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.StatusSetEntityStatus">
            <summary>Sets the shim of RelayDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of RelayDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.UpdatedAtSetDateTime">
            <summary>Sets the shim of RelayDescription.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of RelayDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of RelayDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AuthorGet">
            <summary>Sets the shim of RelayDescription.get_Author()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AuthorSetString">
            <summary>Sets the shim of RelayDescription.set_Author(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.AuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_Authorization()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.ClearSensitiveMembers">
            <summary>Sets the shim of RelayDescription.ClearSensitiveMembers()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.CollectionNameGet">
            <summary>Sets the shim of RelayDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.Constructor">
            <summary>Sets the shim of RelayDescription.RelayDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.ConstructorStringRelayType">
            <summary>Sets the shim of RelayDescription.RelayDescription(String relayPath, RelayType type)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.CreatedAtGet">
            <summary>Sets the shim of RelayDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.CreatedAtSetDateTime">
            <summary>Sets the shim of RelayDescription.set_CreatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IdGet">
            <summary>Sets the shim of RelayDescription.get_Id()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IdSetNullableOfInt64">
            <summary>Sets the shim of RelayDescription.set_Id(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_InternalAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalAuthorizationSetAuthorizationRules">
            <summary>Sets the shim of RelayDescription.set_InternalAuthorization(AuthorizationRules value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalCreatedAtGet">
            <summary>Sets the shim of RelayDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RelayDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalIsDynamicGet">
            <summary>Sets the shim of RelayDescription.get_InternalIsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalIsDynamicSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalIsDynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalIsHybridConnectionGet">
            <summary>Sets the shim of RelayDescription.get_InternalIsHybridConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalIsHybridConnectionSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalIsHybridConnection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalListenerCountGet">
            <summary>Sets the shim of RelayDescription.get_InternalListenerCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalListenerCountSetNullableOfInt32">
            <summary>Sets the shim of RelayDescription.set_InternalListenerCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalPathGet">
            <summary>Sets the shim of RelayDescription.get_InternalPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalPathSetString">
            <summary>Sets the shim of RelayDescription.set_InternalPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalPublishToRegistryGet">
            <summary>Sets the shim of RelayDescription.get_InternalPublishToRegistry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalPublishToRegistrySetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalPublishToRegistry(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRelayTypeGet">
            <summary>Sets the shim of RelayDescription.get_InternalRelayType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRelayTypeSetNullableOfRelayType">
            <summary>Sets the shim of RelayDescription.set_InternalRelayType(Nullable`1&lt;RelayType&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRequiresClientAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_InternalRequiresClientAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRequiresClientAuthorizationSetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalRequiresClientAuthorization(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRequiresTransportSecurityGet">
            <summary>Sets the shim of RelayDescription.get_InternalRequiresTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalRequiresTransportSecuritySetNullableOfBoolean">
            <summary>Sets the shim of RelayDescription.set_InternalRequiresTransportSecurity(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of RelayDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RelayDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalUserMetadataGet">
            <summary>Sets the shim of RelayDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of RelayDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IsDynamicGet">
            <summary>Sets the shim of RelayDescription.get_IsDynamic()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IsDynamicSetBoolean">
            <summary>Sets the shim of RelayDescription.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IsHybridConnectionGet">
            <summary>Sets the shim of RelayDescription.get_IsHybridConnection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.IsHybridConnectionSetBoolean">
            <summary>Sets the shim of RelayDescription.set_IsHybridConnection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.ListenerCountGet">
            <summary>Sets the shim of RelayDescription.get_ListenerCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.ListenerCountSetInt32">
            <summary>Sets the shim of RelayDescription.set_ListenerCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.PathGet">
            <summary>Sets the shim of RelayDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.PathSetString">
            <summary>Sets the shim of RelayDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.PublishToRegistryGet">
            <summary>Sets the shim of RelayDescription.get_PublishToRegistry()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.PublishToRegistrySetBoolean">
            <summary>Sets the shim of RelayDescription.set_PublishToRegistry(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RelayTypeGet">
            <summary>Sets the shim of RelayDescription.get_RelayType()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RelayTypeSetRelayType">
            <summary>Sets the shim of RelayDescription.set_RelayType(RelayType value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RequiresClientAuthorizationGet">
            <summary>Sets the shim of RelayDescription.get_RequiresClientAuthorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RequiresClientAuthorizationSetBoolean">
            <summary>Sets the shim of RelayDescription.set_RequiresClientAuthorization(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RequiresEncryptionGet">
            <summary>Sets the shim of RelayDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RequiresTransportSecurityGet">
            <summary>Sets the shim of RelayDescription.get_RequiresTransportSecurity()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RequiresTransportSecuritySetBoolean">
            <summary>Sets the shim of RelayDescription.set_RequiresTransportSecurity(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RuntimeAddressGet">
            <summary>Sets the shim of RelayDescription.get_RuntimeAddress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.RuntimeAddressSetUri">
            <summary>Sets the shim of RelayDescription.set_RuntimeAddress(Uri value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.StaticConstructor">
            <summary>Sets the shim of RelayDescription.RelayDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.StatusGet">
            <summary>Sets the shim of RelayDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.StatusSetEntityStatus">
            <summary>Sets the shim of RelayDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.UpdatedAtGet">
            <summary>Sets the shim of RelayDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.UpdatedAtSetDateTime">
            <summary>Sets the shim of RelayDescription.set_UpdatedAt(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.UserMetadataGet">
            <summary>Sets the shim of RelayDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRelayDescription.UserMetadataSetString">
            <summary>Sets the shim of RelayDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.RevokedPublisherDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.#ctor(Microsoft.ServiceBus.Messaging.RevokedPublisherDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of RevokedPublisherDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances.InternalNameGet">
            <summary>Sets the shim of RevokedPublisherDescription.get_InternalName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances.InternalNameSetString">
            <summary>Sets the shim of RevokedPublisherDescription.set_InternalName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances.NameGet">
            <summary>Sets the shim of RevokedPublisherDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.AllInstances.NameSetString">
            <summary>Sets the shim of RevokedPublisherDescription.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of RevokedPublisherDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.ConstructorString">
            <summary>Sets the shim of RevokedPublisherDescription.RevokedPublisherDescription(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.InternalNameGet">
            <summary>Sets the shim of RevokedPublisherDescription.get_InternalName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.InternalNameSetString">
            <summary>Sets the shim of RevokedPublisherDescription.set_InternalName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.IsPublisherFormatValidString">
            <summary>Sets the shim of RevokedPublisherDescription.IsPublisherFormatValid(String publisher)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.NameGet">
            <summary>Sets the shim of RevokedPublisherDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRevokedPublisherDescription.NameSetString">
            <summary>Sets the shim of RevokedPublisherDescription.set_Name(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.RuleAction</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.#ctor(Microsoft.ServiceBus.Messaging.RuleAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.AllInstances.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectget">
            <summary>Sets the shim of RuleAction.System.Runtime.Serialization.IExtensibleDataObject.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.AllInstances.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectsetExtensionDataObject">
            <summary>Sets the shim of RuleAction.System.Runtime.Serialization.IExtensibleDataObject.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.Constructor">
            <summary>Sets the shim of RuleAction.RuleAction()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectget">
            <summary>Sets the shim of RuleAction.System.Runtime.Serialization.IExtensibleDataObject.get_ExtensionData()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleAction.ExtensionDataSystemRuntimeSerializationIExtensibleDataObjectsetExtensionDataObject">
            <summary>Sets the shim of RuleAction.System.Runtime.Serialization.IExtensibleDataObject.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.RuleActionException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.#ctor(Microsoft.ServiceBus.Messaging.RuleActionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RuleActionException.RuleActionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.ConstructorString">
            <summary>Sets the shim of RuleActionException.RuleActionException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleActionException.ConstructorStringException">
            <summary>Sets the shim of RuleActionException.RuleActionException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.RuleDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.#ctor(Microsoft.ServiceBus.Messaging.RuleDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.ActionGet">
            <summary>Sets the shim of RuleDescription.get_Action()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.ActionSetRuleAction">
            <summary>Sets the shim of RuleDescription.set_Action(RuleAction value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.ActionGet">
            <summary>Sets the shim of RuleDescription.get_Action()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.ActionSetRuleAction">
            <summary>Sets the shim of RuleDescription.set_Action(RuleAction value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of RuleDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of RuleDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.FilterGet">
            <summary>Sets the shim of RuleDescription.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.FilterSetFilter">
            <summary>Sets the shim of RuleDescription.set_Filter(Filter value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of RuleDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RuleDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.NameGet">
            <summary>Sets the shim of RuleDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.NameSetString">
            <summary>Sets the shim of RuleDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of RuleDescription.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.TagGet">
            <summary>Sets the shim of RuleDescription.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.TagSetString">
            <summary>Sets the shim of RuleDescription.set_Tag(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.AllInstances.Validate">
            <summary>Sets the shim of RuleDescription.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of RuleDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.Constructor">
            <summary>Sets the shim of RuleDescription.RuleDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.ConstructorFilter">
            <summary>Sets the shim of RuleDescription.RuleDescription(Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.ConstructorString">
            <summary>Sets the shim of RuleDescription.RuleDescription(String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.ConstructorStringFilter">
            <summary>Sets the shim of RuleDescription.RuleDescription(String name, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.CreatedAtGet">
            <summary>Sets the shim of RuleDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.FilterGet">
            <summary>Sets the shim of RuleDescription.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.FilterSetFilter">
            <summary>Sets the shim of RuleDescription.set_Filter(Filter value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.InternalCreatedAtGet">
            <summary>Sets the shim of RuleDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of RuleDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.NameGet">
            <summary>Sets the shim of RuleDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.NameSetString">
            <summary>Sets the shim of RuleDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.OnDeserializedStreamingContext">
            <summary>Sets the shim of RuleDescription.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.TagGet">
            <summary>Sets the shim of RuleDescription.get_Tag()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.TagSetString">
            <summary>Sets the shim of RuleDescription.set_Tag(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimRuleDescription.Validate">
            <summary>Sets the shim of RuleDescription.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.#ctor(Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityBacklogException.ConstructorString">
            <summary>Sets the shim of SendAvailabilityBacklogException.SendAvailabilityBacklogException(String message)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.#ctor(Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityMessagingException.ConstructorException">
            <summary>Sets the shim of SendAvailabilityMessagingException.SendAvailabilityMessagingException(Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.AvailabilityCallbackObject">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.AvailabilityCallback(Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.BacklogQueueCountGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_BacklogQueueCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.BacklogQueueCountSetInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_BacklogQueueCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.ClearPairing">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.ClosedGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_Closed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.ClosedSetBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_Closed(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.CreateBacklogQueueNameInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.CreateBacklogQueueName(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.EnableSyphonGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_EnableSyphon()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.EnableSyphonSetBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_EnableSyphon(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.FetchBacklogQueueNameInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.FetchBacklogQueueName(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.IsPathAvailableString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.IsPathAvailable(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.IsUnavailableString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.IsUnavailable(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.MarkPathHealthyString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.OnNotifyPrimarySendResultStringBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.OnNotifyPrimarySendResult(String path, Boolean success)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.PingCompletedIAsyncResult">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.PingCompleted(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.PingPrimaryIntervalGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_PingPrimaryInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.PingPrimaryIntervalSetTimeSpan">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_PingPrimaryInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.RetrieveNontransientExceptionString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.RetrieveNontransientException(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.SbNamespaceGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_SbNamespace()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.StartCheckForAvailabilityString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.StartCheckForAvailability(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.SyphonRetryIntervalGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_SyphonRetryInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.SyphonRetryIntervalSetTimeSpan">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_SyphonRetryInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AllInstances.UpdateBacklogQueueCountInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.UpdateBacklogQueueCount(Int32 count)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.AvailabilityCallbackObject">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.AvailabilityCallback(Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.BacklogQueueCountGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_BacklogQueueCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.BacklogQueueCountSetInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_BacklogQueueCount(Int32 value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ClearPairing">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.ClearPairing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ClosedGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_Closed()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ClosedSetBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_Closed(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ConstructorNamespaceManagerMessagingFactory">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.SendAvailabilityPairedNamespaceOptions(NamespaceManager secondaryNamespaceManager, MessagingFactory messagingFactory)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ConstructorNamespaceManagerMessagingFactoryInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.SendAvailabilityPairedNamespaceOptions(NamespaceManager secondaryNamespaceManager, MessagingFactory messagingFactory, Int32 backlogQueueCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.ConstructorNamespaceManagerMessagingFactoryInt32TimeSpanBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.SendAvailabilityPairedNamespaceOptions(NamespaceManager secondaryNamespaceManager, MessagingFactory messagingFactory, Int32 backlogQueueCount, TimeSpan failoverInterval, Boolean enableSyphon)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.CreateBacklogQueueNameInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.CreateBacklogQueueName(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.EnableSyphonGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_EnableSyphon()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.EnableSyphonSetBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_EnableSyphon(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.FetchBacklogQueueNameInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.FetchBacklogQueueName(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.IsPathAvailableString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.IsPathAvailable(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.IsUnavailableString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.IsUnavailable(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.MarkPathHealthyString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.OnNotifyPrimarySendResultStringBoolean">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.OnNotifyPrimarySendResult(String path, Boolean success)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.OnPrimaryFailedIntervalExpiredObject">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.OnPrimaryFailedIntervalExpired(Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.PingCompletedIAsyncResult">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.PingCompleted(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.PingPrimaryIntervalGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_PingPrimaryInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.PingPrimaryIntervalSetTimeSpan">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_PingPrimaryInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.RetrieveNontransientExceptionString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.RetrieveNontransientException(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.SbNamespaceGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_SbNamespace()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.StartCheckForAvailabilityString">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.StartCheckForAvailability(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.StaticConstructor">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.SendAvailabilityPairedNamespaceOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.SyphonRetryIntervalGet">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.get_SyphonRetryInterval()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.SyphonRetryIntervalSetTimeSpan">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.set_SyphonRetryInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSendAvailabilityPairedNamespaceOptions.UpdateBacklogQueueCountInt32">
            <summary>Sets the shim of SendAvailabilityPairedNamespaceOptions.UpdateBacklogQueueCount(Int32 count)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.ServerBusyException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.#ctor(Microsoft.ServiceBus.Messaging.ServerBusyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorString">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorStringException">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorStringTrackingContext">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(String message, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimServerBusyException.ConstructorStringTrackingContextException">
            <summary>Sets the shim of ServerBusyException.ServerBusyException(String message, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.#ctor(Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SessionCannotBeLockedException.SessionCannotBeLockedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.ConstructorString">
            <summary>Sets the shim of SessionCannotBeLockedException.SessionCannotBeLockedException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionCannotBeLockedException.ConstructorStringException">
            <summary>Sets the shim of SessionCannotBeLockedException.SessionCannotBeLockedException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SessionHandlerOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.#ctor(Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.AutoCompleteGet">
            <summary>Sets the shim of SessionHandlerOptions.get_AutoComplete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.AutoCompleteSetBoolean">
            <summary>Sets the shim of SessionHandlerOptions.set_AutoComplete(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.AutoRenewTimeoutGet">
            <summary>Sets the shim of SessionHandlerOptions.get_AutoRenewTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.AutoRenewTimeoutSetTimeSpan">
            <summary>Sets the shim of SessionHandlerOptions.set_AutoRenewTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MaxConcurrentSessionsGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MaxConcurrentSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MaxConcurrentSessionsSetInt32">
            <summary>Sets the shim of SessionHandlerOptions.set_MaxConcurrentSessions(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MaxPendingAcceptSessionCallsGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MaxPendingAcceptSessionCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MaxPendingAcceptSessionCallsSetInt32">
            <summary>Sets the shim of SessionHandlerOptions.set_MaxPendingAcceptSessionCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MessageWaitTimeoutGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MessageWaitTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.MessageWaitTimeoutSetTimeSpan">
            <summary>Sets the shim of SessionHandlerOptions.set_MessageWaitTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.RaiseExceptionReceivedObjectExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.RaiseExceptionReceived(Object source, ExceptionReceivedEventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.WaitForPendingOperationsOnCloseGet">
            <summary>Sets the shim of SessionHandlerOptions.get_WaitForPendingOperationsOnClose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AllInstances.WaitForPendingOperationsOnCloseSetBoolean">
            <summary>Sets the shim of SessionHandlerOptions.set_WaitForPendingOperationsOnClose(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AutoCompleteGet">
            <summary>Sets the shim of SessionHandlerOptions.get_AutoComplete()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AutoCompleteSetBoolean">
            <summary>Sets the shim of SessionHandlerOptions.set_AutoComplete(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AutoRenewTimeoutGet">
            <summary>Sets the shim of SessionHandlerOptions.get_AutoRenewTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.AutoRenewTimeoutSetTimeSpan">
            <summary>Sets the shim of SessionHandlerOptions.set_AutoRenewTimeout(TimeSpan value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.Constructor">
            <summary>Sets the shim of SessionHandlerOptions.SessionHandlerOptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.ExceptionReceivedAddEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.add_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.ExceptionReceivedRemoveEventHandlerOfExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.remove_ExceptionReceived(EventHandler`1&lt;ExceptionReceivedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MaxConcurrentSessionsGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MaxConcurrentSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MaxConcurrentSessionsSetInt32">
            <summary>Sets the shim of SessionHandlerOptions.set_MaxConcurrentSessions(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MaxPendingAcceptSessionCallsGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MaxPendingAcceptSessionCalls()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MaxPendingAcceptSessionCallsSetInt32">
            <summary>Sets the shim of SessionHandlerOptions.set_MaxPendingAcceptSessionCalls(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MessageWaitTimeoutGet">
            <summary>Sets the shim of SessionHandlerOptions.get_MessageWaitTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.MessageWaitTimeoutSetTimeSpan">
            <summary>Sets the shim of SessionHandlerOptions.set_MessageWaitTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.RaiseExceptionReceivedObjectExceptionReceivedEventArgs">
            <summary>Sets the shim of SessionHandlerOptions.RaiseExceptionReceived(Object source, ExceptionReceivedEventArgs args)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.WaitForPendingOperationsOnCloseGet">
            <summary>Sets the shim of SessionHandlerOptions.get_WaitForPendingOperationsOnClose()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionHandlerOptions.WaitForPendingOperationsOnCloseSetBoolean">
            <summary>Sets the shim of SessionHandlerOptions.set_WaitForPendingOperationsOnClose(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SessionLockLostException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.#ctor(Microsoft.ServiceBus.Messaging.SessionLockLostException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SessionLockLostException.SessionLockLostException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.ConstructorString">
            <summary>Sets the shim of SessionLockLostException.SessionLockLostException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSessionLockLostException.ConstructorStringException">
            <summary>Sets the shim of SessionLockLostException.SessionLockLostException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.#ctor(Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.EqualsObject">
            <summary>Sets the shim of SharedAccessAuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.GetHashCode01">
            <summary>Sets the shim of SharedAccessAuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalKeyNameGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalKeyNameSetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalPrimaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalPrimaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalPrimaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalPrimaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalSecondaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalSecondaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.InternalSecondaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalSecondaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.KeyNameGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.KeyNameSetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.OnValidate">
            <summary>Sets the shim of SharedAccessAuthorizationRule.OnValidate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.PrimaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_PrimaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.PrimaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.SecondaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_SecondaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.SecondaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_SecondaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.AllInstances.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.CheckBase64String">
            <summary>Sets the shim of SharedAccessAuthorizationRule.CheckBase64(String base64EncodedString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.Constructor">
            <summary>Sets the shim of SharedAccessAuthorizationRule.SharedAccessAuthorizationRule()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.ConstructorStringIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.SharedAccessAuthorizationRule(String keyName, IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.ConstructorStringStringIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.SharedAccessAuthorizationRule(String keyName, String primaryKey, IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.ConstructorStringStringStringIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.SharedAccessAuthorizationRule(String keyName, String primaryKey, String secondaryKey, IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.EqualsObject">
            <summary>Sets the shim of SharedAccessAuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.GenerateRandomKey">
            <summary>Sets the shim of SharedAccessAuthorizationRule.GenerateRandomKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.GetHashCode">
            <summary>Sets the shim of SharedAccessAuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalKeyNameGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalKeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalKeyNameSetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalKeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalPrimaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalPrimaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalPrimaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalPrimaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalSecondaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_InternalSecondaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.InternalSecondaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_InternalSecondaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.IsValidCombinationOfRightsIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.IsValidCombinationOfRights(IEnumerable`1&lt;AccessRights&gt; rights)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.KeyNameGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_KeyName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.KeyNameSetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_KeyName(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.OnValidate">
            <summary>Sets the shim of SharedAccessAuthorizationRule.OnValidate()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.PrimaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_PrimaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.PrimaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.SecondaryKeyGet">
            <summary>Sets the shim of SharedAccessAuthorizationRule.get_SecondaryKey()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.SecondaryKeySetString">
            <summary>Sets the shim of SharedAccessAuthorizationRule.set_SecondaryKey(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.StaticConstructor">
            <summary>Sets the shim of SharedAccessAuthorizationRule.SharedAccessAuthorizationRule()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSharedAccessAuthorizationRule.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the shim of SharedAccessAuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SqlFilter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.#ctor(Microsoft.ServiceBus.Messaging.SqlFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.CompatibilityLevelGet">
            <summary>Sets the shim of SqlFilter.get_CompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.CompatibilityLevelSetInt32">
            <summary>Sets the shim of SqlFilter.set_CompatibilityLevel(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.EnsureCompatibilityLevel">
            <summary>Sets the shim of SqlFilter.EnsureCompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.MatchBrokeredMessage">
            <summary>Sets the shim of SqlFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of SqlFilter.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.ParametersGet">
            <summary>Sets the shim of SqlFilter.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.Preprocess">
            <summary>Sets the shim of SqlFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.RequiresPreprocessingGet">
            <summary>Sets the shim of SqlFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.SqlExpressionGet">
            <summary>Sets the shim of SqlFilter.get_SqlExpression()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.SqlExpressionSetString">
            <summary>Sets the shim of SqlFilter.set_SqlExpression(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.ToString01">
            <summary>Sets the shim of SqlFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.AllInstances.Validate">
            <summary>Sets the shim of SqlFilter.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.CompatibilityLevelGet">
            <summary>Sets the shim of SqlFilter.get_CompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.CompatibilityLevelSetInt32">
            <summary>Sets the shim of SqlFilter.set_CompatibilityLevel(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.ConstructorString">
            <summary>Sets the shim of SqlFilter.SqlFilter(String sqlExpression)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.ConstructorStringInt32">
            <summary>Sets the shim of SqlFilter.SqlFilter(String sqlExpression, Int32 compatibilityLevel)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.EnsureCompatibilityLevel">
            <summary>Sets the shim of SqlFilter.EnsureCompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.MatchBrokeredMessage">
            <summary>Sets the shim of SqlFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.OnDeserializedStreamingContext">
            <summary>Sets the shim of SqlFilter.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.ParametersGet">
            <summary>Sets the shim of SqlFilter.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.Preprocess">
            <summary>Sets the shim of SqlFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.RequiresPreprocessingGet">
            <summary>Sets the shim of SqlFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.SqlExpressionGet">
            <summary>Sets the shim of SqlFilter.get_SqlExpression()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.SqlExpressionSetString">
            <summary>Sets the shim of SqlFilter.set_SqlExpression(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.StaticConstructor">
            <summary>Sets the shim of SqlFilter.SqlFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.ToString">
            <summary>Sets the shim of SqlFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlFilter.Validate">
            <summary>Sets the shim of SqlFilter.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SqlRuleAction</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.#ctor(Microsoft.ServiceBus.Messaging.SqlRuleAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.CompatibilityLevelGet">
            <summary>Sets the shim of SqlRuleAction.get_CompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.CompatibilityLevelSetInt32">
            <summary>Sets the shim of SqlRuleAction.set_CompatibilityLevel(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.EnsureCompatibilityLevel">
            <summary>Sets the shim of SqlRuleAction.EnsureCompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.ExecuteBrokeredMessage">
            <summary>Sets the shim of SqlRuleAction.Execute(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.OnDeserializedStreamingContext">
            <summary>Sets the shim of SqlRuleAction.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.ParametersGet">
            <summary>Sets the shim of SqlRuleAction.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.Preprocess">
            <summary>Sets the shim of SqlRuleAction.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.RequiresPreprocessingGet">
            <summary>Sets the shim of SqlRuleAction.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.SqlExpressionGet">
            <summary>Sets the shim of SqlRuleAction.get_SqlExpression()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.SqlExpressionSetString">
            <summary>Sets the shim of SqlRuleAction.set_SqlExpression(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.ToString01">
            <summary>Sets the shim of SqlRuleAction.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.AllInstances.Validate">
            <summary>Sets the shim of SqlRuleAction.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.CompatibilityLevelGet">
            <summary>Sets the shim of SqlRuleAction.get_CompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.CompatibilityLevelSetInt32">
            <summary>Sets the shim of SqlRuleAction.set_CompatibilityLevel(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.ConstructorString">
            <summary>Sets the shim of SqlRuleAction.SqlRuleAction(String sqlExpression)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.ConstructorStringInt32">
            <summary>Sets the shim of SqlRuleAction.SqlRuleAction(String sqlExpression, Int32 compatibilityLevel)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.EnsureCompatibilityLevel">
            <summary>Sets the shim of SqlRuleAction.EnsureCompatibilityLevel()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.ExecuteBrokeredMessage">
            <summary>Sets the shim of SqlRuleAction.Execute(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.OnDeserializedStreamingContext">
            <summary>Sets the shim of SqlRuleAction.OnDeserialized(StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.ParametersGet">
            <summary>Sets the shim of SqlRuleAction.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.Preprocess">
            <summary>Sets the shim of SqlRuleAction.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.RequiresPreprocessingGet">
            <summary>Sets the shim of SqlRuleAction.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.SqlExpressionGet">
            <summary>Sets the shim of SqlRuleAction.get_SqlExpression()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.SqlExpressionSetString">
            <summary>Sets the shim of SqlRuleAction.set_SqlExpression(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.StaticConstructor">
            <summary>Sets the shim of SqlRuleAction.SqlRuleAction()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.ToString">
            <summary>Sets the shim of SqlRuleAction.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSqlRuleAction.Validate">
            <summary>Sets the shim of SqlRuleAction.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SubscriptionClient</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.#ctor(Microsoft.ServiceBus.Messaging.SubscriptionClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AbandonAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AbandonGuid">
            <summary>Sets the shim of SubscriptionClient.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSession">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionAsync">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionAsyncString">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionAsyncStringTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionString">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionStringTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AddRuleAsyncRuleDescription">
            <summary>Sets the shim of SubscriptionClient.AddRuleAsync(RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AddRuleAsyncStringFilter">
            <summary>Sets the shim of SubscriptionClient.AddRuleAsync(String ruleName, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AddRuleRuleDescription">
            <summary>Sets the shim of SubscriptionClient.AddRule(RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AddRuleStringFilter">
            <summary>Sets the shim of SubscriptionClient.AddRule(String ruleName, Filter filter)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AbandonAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.AbandonAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AbandonAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.AbandonAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AbandonGuid">
            <summary>Sets the shim of SubscriptionClient.Abandon(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AbandonGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.Abandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSession">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionAsync">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionAsyncString">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionAsyncStringTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionAsyncTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSessionAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionString">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(String sessionId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionStringTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(String sessionId, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AcceptMessageSessionTimeSpan">
            <summary>Sets the shim of SubscriptionClient.AcceptMessageSession(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AddRuleAsyncRuleDescription">
            <summary>Sets the shim of SubscriptionClient.AddRuleAsync(RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AddRuleAsyncStringFilter">
            <summary>Sets the shim of SubscriptionClient.AddRuleAsync(String ruleName, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AddRuleRuleDescription">
            <summary>Sets the shim of SubscriptionClient.AddRule(RuleDescription description)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.AddRuleStringFilter">
            <summary>Sets the shim of SubscriptionClient.AddRule(String ruleName, Filter filter)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginAcceptMessageSessionStringTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAcceptMessageSession(String sessionId, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginAddRuleRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAddRule(RuleDescription description, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginAddRuleRuleDescriptionTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAddRule(RuleDescription description, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginCreateReceiverReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateReceiver(ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginCreateReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateReceiver(String subQueuePath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginGetMessageSessionsDateTimeAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginGetMessageSessions(DateTime lastUpdatedTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginRemoveRuleStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRule(String ruleName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginRemoveRuleStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRule(String ruleName, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginRemoveRulesByTagStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRulesByTag(String tag, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.BeginRemoveRulesByTagStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRulesByTag(String tag, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.CompleteAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.CompleteGuid">
            <summary>Sets the shim of SubscriptionClient.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterGuid">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeadLetterGuidStringString">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeferAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeferGuid">
            <summary>Sets the shim of SubscriptionClient.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndAbandonIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndAddRuleIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAddRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndCompleteIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndCreateReceiverIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndCreateReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndDeferIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndGetMessageSessionsIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndGetMessageSessions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndPeekIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndReceiveIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndRemoveRuleIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndRemoveRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EndRemoveRulesByTagIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndRemoveRulesByTag(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EnsureCreateInternalBrowser">
            <summary>Sets the shim of SubscriptionClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.EnsureCreateInternalReceiver">
            <summary>Sets the shim of SubscriptionClient.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.GetMessageSessions">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.GetMessageSessionsAsync">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessionsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.GetMessageSessionsAsyncDateTime">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessionsAsync(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.GetMessageSessionsDateTime">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessions(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.InternalReceiverGet">
            <summary>Sets the shim of SubscriptionClient.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of SubscriptionClient.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.IsSubQueueGet">
            <summary>Sets the shim of SubscriptionClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.IsSubQueueSetBoolean">
            <summary>Sets the shim of SubscriptionClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of SubscriptionClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of SubscriptionClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ModeGet">
            <summary>Sets the shim of SubscriptionClient.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ModeSetReceiveMode">
            <summary>Sets the shim of SubscriptionClient.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.NameGet">
            <summary>Sets the shim of SubscriptionClient.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.NameSetString">
            <summary>Sets the shim of SubscriptionClient.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnAbort">
            <summary>Sets the shim of SubscriptionClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of SubscriptionClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnMessageActionOfBrokeredMessage">
            <summary>Sets the shim of SubscriptionClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of SubscriptionClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnMessageAsyncFuncOfBrokeredMessageTask">
            <summary>Sets the shim of SubscriptionClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of SubscriptionClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of SubscriptionClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.Peek">
            <summary>Sets the shim of SubscriptionClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekAsync">
            <summary>Sets the shim of SubscriptionClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekAsyncInt64">
            <summary>Sets the shim of SubscriptionClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekBatchAsyncInt32">
            <summary>Sets the shim of SubscriptionClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of SubscriptionClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekBatchInt32">
            <summary>Sets the shim of SubscriptionClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekBatchInt64Int32">
            <summary>Sets the shim of SubscriptionClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PeekInt64">
            <summary>Sets the shim of SubscriptionClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PrefetchCountGet">
            <summary>Sets the shim of SubscriptionClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.PrefetchCountSetInt32">
            <summary>Sets the shim of SubscriptionClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.Receive">
            <summary>Sets the shim of SubscriptionClient.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveAsync">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveAsyncInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchInt32">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveInt64">
            <summary>Sets the shim of SubscriptionClient.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ReceiveTimeSpan">
            <summary>Sets the shim of SubscriptionClient.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of SubscriptionClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerAsyncType">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerAsync(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerAsyncTypeSessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerAsync(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerFactoryAsyncIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactoryAsync(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerFactoryAsyncIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactoryAsync(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerFactoryIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactory(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerFactoryIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactory(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerType">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandler(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RegisterSessionHandlerTypeSessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandler(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RemoveRuleAsyncString">
            <summary>Sets the shim of SubscriptionClient.RemoveRuleAsync(String ruleName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RemoveRuleString">
            <summary>Sets the shim of SubscriptionClient.RemoveRule(String ruleName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RemoveRulesByTagString">
            <summary>Sets the shim of SubscriptionClient.RemoveRulesByTag(String tag)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RenewMessageLockAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.RenewMessageLockAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.RenewMessageLockGuid">
            <summary>Sets the shim of SubscriptionClient.RenewMessageLock(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.SubscriptionPathGet">
            <summary>Sets the shim of SubscriptionClient.get_SubscriptionPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.SubscriptionPathSetString">
            <summary>Sets the shim of SubscriptionClient.set_SubscriptionPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ThrowIfBrowserNullString">
            <summary>Sets the shim of SubscriptionClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.ThrowIfReceiverNullString">
            <summary>Sets the shim of SubscriptionClient.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.TopicPathGet">
            <summary>Sets the shim of SubscriptionClient.get_TopicPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances.TopicPathSetString">
            <summary>Sets the shim of SubscriptionClient.set_TopicPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances._AcceptMessageSessionAsyncb__12AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.&lt;AcceptMessageSessionAsync&gt;b__12(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances._GetMessageSessionsAsyncb__20AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.&lt;GetMessageSessionsAsync&gt;b__20(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.AllInstances._RenewMessageLockAsyncb__1IAsyncResult">
            <summary>Sets the shim of SubscriptionClient.&lt;RenewMessageLockAsync&gt;b__1(IAsyncResult r)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginAbandonGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAbandon(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginAcceptMessageSessionStringTimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAcceptMessageSession(String sessionId, TimeSpan serverWaitTime, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginAddRuleRuleDescriptionAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAddRule(RuleDescription description, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginAddRuleRuleDescriptionTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginAddRule(RuleDescription description, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginCompleteBatchIEnumerableOfGuidAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginCompleteGuidAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginComplete(Guid lockToken, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginCreateReceiverReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateReceiver(ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginCreateReceiverStringReceiveModeTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginCreateReceiver(String subQueuePath, ReceiveMode receiveMode, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginDeadLetterGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginDeadLetterGuidStringStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginDeferGuidIDictionaryOfStringObjectAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginDefer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginGetMessageSessionsDateTimeAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginGetMessageSessions(DateTime lastUpdatedTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginReceiveBatchIEnumerableOfInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginReceiveBatchInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginReceiveInt64AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceive(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginReceiveTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginReceive(TimeSpan serverWaitTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginRemoveRuleStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRule(String ruleName, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginRemoveRuleStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRule(String ruleName, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginRemoveRulesByTagStringAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRulesByTag(String tag, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BeginRemoveRulesByTagStringTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.BeginRemoveRulesByTag(String tag, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CompleteAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CompleteBatchAsyncIEnumerableOfGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteBatchAsync(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CompleteBatchIEnumerableOfGuid">
            <summary>Sets the shim of SubscriptionClient.CompleteBatch(IEnumerable`1&lt;Guid&gt; lockTokens)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CompleteGuid">
            <summary>Sets the shim of SubscriptionClient.Complete(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ConstructorMessagingFactoryStringReceiveMode">
            <summary>Sets the shim of SubscriptionClient.SubscriptionClient(MessagingFactory messagingFactory, String subscriptionPath, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ConstructorMessagingFactoryStringStringReceiveMode">
            <summary>Sets the shim of SubscriptionClient.SubscriptionClient(MessagingFactory messagingFactory, String topicPath, String name, ReceiveMode receiveMode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CreateFromConnectionStringStringStringString">
            <summary>Sets the shim of SubscriptionClient.CreateFromConnectionString(String connectionString, String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CreateFromConnectionStringStringStringStringReceiveMode">
            <summary>Sets the shim of SubscriptionClient.CreateFromConnectionString(String connectionString, String topicPath, String name, ReceiveMode mode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CreateStringString">
            <summary>Sets the shim of SubscriptionClient.Create(String topicPath, String name)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.CreateStringStringReceiveMode">
            <summary>Sets the shim of SubscriptionClient.Create(String topicPath, String name, ReceiveMode mode)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterAsyncGuidStringString">
            <summary>Sets the shim of SubscriptionClient.DeadLetterAsync(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterGuid">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeadLetterGuidStringString">
            <summary>Sets the shim of SubscriptionClient.DeadLetter(Guid lockToken, String deadLetterReason, String deadLetterErrorDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeferAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.DeferAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeferAsyncGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.DeferAsync(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeferGuid">
            <summary>Sets the shim of SubscriptionClient.Defer(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.DeferGuidIDictionaryOfStringObject">
            <summary>Sets the shim of SubscriptionClient.Defer(Guid lockToken, IDictionary`2&lt;String,Object&gt; propertiesToModify)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndAbandonIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAbandon(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndAcceptMessageSessionIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAcceptMessageSession(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndAddRuleIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndAddRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndCompleteBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndCompleteBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndCompleteIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndCreateReceiverIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndCreateReceiver(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndDeadLetterIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndDeadLetter(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndDeferIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndDefer(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndGetMessageSessionsIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndGetMessageSessions(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndPeekIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndReceiveBatchIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndReceiveBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndReceiveIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndReceive(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndRemoveRuleIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndRemoveRule(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EndRemoveRulesByTagIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.EndRemoveRulesByTag(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EnsureCreateInternalBrowser">
            <summary>Sets the shim of SubscriptionClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.EnsureCreateInternalReceiver">
            <summary>Sets the shim of SubscriptionClient.EnsureCreateInternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.FormatDeadLetterPathStringString">
            <summary>Sets the shim of SubscriptionClient.FormatDeadLetterPath(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.FormatSubscriptionPathStringString">
            <summary>Sets the shim of SubscriptionClient.FormatSubscriptionPath(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.GetMessageSessions">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.GetMessageSessionsAsync">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessionsAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.GetMessageSessionsAsyncDateTime">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessionsAsync(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.GetMessageSessionsDateTime">
            <summary>Sets the shim of SubscriptionClient.GetMessageSessions(DateTime lastUpdatedTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.InternalReceiverGet">
            <summary>Sets the shim of SubscriptionClient.get_InternalReceiver()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.InternalReceiverSetMessageReceiver">
            <summary>Sets the shim of SubscriptionClient.set_InternalReceiver(MessageReceiver value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.IsSubQueueGet">
            <summary>Sets the shim of SubscriptionClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.IsSubQueueSetBoolean">
            <summary>Sets the shim of SubscriptionClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.MessagingFactoryGet">
            <summary>Sets the shim of SubscriptionClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of SubscriptionClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ModeGet">
            <summary>Sets the shim of SubscriptionClient.get_Mode()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ModeSetReceiveMode">
            <summary>Sets the shim of SubscriptionClient.set_Mode(ReceiveMode value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.NameGet">
            <summary>Sets the shim of SubscriptionClient.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.NameSetString">
            <summary>Sets the shim of SubscriptionClient.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnAbort">
            <summary>Sets the shim of SubscriptionClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnCloseTimeSpan">
            <summary>Sets the shim of SubscriptionClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnEndCloseIAsyncResult">
            <summary>Sets the shim of SubscriptionClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnMessageActionOfBrokeredMessage">
            <summary>Sets the shim of SubscriptionClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnMessageActionOfBrokeredMessageOnMessageOptions">
            <summary>Sets the shim of SubscriptionClient.OnMessage(Action`1&lt;BrokeredMessage&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnMessageAsyncFuncOfBrokeredMessageTask">
            <summary>Sets the shim of SubscriptionClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OnMessageAsyncFuncOfBrokeredMessageTaskOnMessageOptions">
            <summary>Sets the shim of SubscriptionClient.OnMessageAsync(Func`2&lt;BrokeredMessage,Task&gt; callback, OnMessageOptions onMessageOptions)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.OperationTimeoutGet">
            <summary>Sets the shim of SubscriptionClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.Peek">
            <summary>Sets the shim of SubscriptionClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekAsync">
            <summary>Sets the shim of SubscriptionClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekAsyncInt64">
            <summary>Sets the shim of SubscriptionClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekBatchAsyncInt32">
            <summary>Sets the shim of SubscriptionClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of SubscriptionClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekBatchInt32">
            <summary>Sets the shim of SubscriptionClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekBatchInt64Int32">
            <summary>Sets the shim of SubscriptionClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PeekInt64">
            <summary>Sets the shim of SubscriptionClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PrefetchCountGet">
            <summary>Sets the shim of SubscriptionClient.get_PrefetchCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.PrefetchCountSetInt32">
            <summary>Sets the shim of SubscriptionClient.set_PrefetchCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.Receive">
            <summary>Sets the shim of SubscriptionClient.Receive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveAsync">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveAsyncInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveAsyncTimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveAsync(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchAsyncIEnumerableOfInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchAsyncInt32">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchAsyncInt32TimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatchAsync(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchIEnumerableOfInt64">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(IEnumerable`1&lt;Int64&gt; sequenceNumbers)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchInt32">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveBatchInt32TimeSpan">
            <summary>Sets the shim of SubscriptionClient.ReceiveBatch(Int32 messageCount, TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveInt64">
            <summary>Sets the shim of SubscriptionClient.Receive(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ReceiveTimeSpan">
            <summary>Sets the shim of SubscriptionClient.Receive(TimeSpan serverWaitTime)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of SubscriptionClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerAsyncType">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerAsync(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerAsyncTypeSessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerAsync(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerFactoryAsyncIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactoryAsync(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerFactoryAsyncIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactoryAsync(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerFactoryIMessageSessionAsyncHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactory(IMessageSessionAsyncHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerFactoryIMessageSessionHandlerFactorySessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandlerFactory(IMessageSessionHandlerFactory factory, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerType">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandler(Type handlerType)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RegisterSessionHandlerTypeSessionHandlerOptions">
            <summary>Sets the shim of SubscriptionClient.RegisterSessionHandler(Type handlerType, SessionHandlerOptions options)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RemoveRuleAsyncString">
            <summary>Sets the shim of SubscriptionClient.RemoveRuleAsync(String ruleName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RemoveRuleString">
            <summary>Sets the shim of SubscriptionClient.RemoveRule(String ruleName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RemoveRulesByTagString">
            <summary>Sets the shim of SubscriptionClient.RemoveRulesByTag(String tag)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RenewMessageLockAsyncGuid">
            <summary>Sets the shim of SubscriptionClient.RenewMessageLockAsync(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.RenewMessageLockGuid">
            <summary>Sets the shim of SubscriptionClient.RenewMessageLock(Guid lockToken)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.SubscriptionPathGet">
            <summary>Sets the shim of SubscriptionClient.get_SubscriptionPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.SubscriptionPathSetString">
            <summary>Sets the shim of SubscriptionClient.set_SubscriptionPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ThrowIfBrowserNullString">
            <summary>Sets the shim of SubscriptionClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.ThrowIfReceiverNullString">
            <summary>Sets the shim of SubscriptionClient.ThrowIfReceiverNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.TopicPathGet">
            <summary>Sets the shim of SubscriptionClient.get_TopicPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient.TopicPathSetString">
            <summary>Sets the shim of SubscriptionClient.set_TopicPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient._AcceptMessageSessionAsyncb__12AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.&lt;AcceptMessageSessionAsync&gt;b__12(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient._GetMessageSessionsAsyncb__20AsyncCallbackObject">
            <summary>Sets the shim of SubscriptionClient.&lt;GetMessageSessionsAsync&gt;b__20(AsyncCallback c, Object s)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionClient._RenewMessageLockAsyncb__1IAsyncResult">
            <summary>Sets the shim of SubscriptionClient.&lt;RenewMessageLockAsync&gt;b__1(IAsyncResult r)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.SubscriptionDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.#ctor(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AccessedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_AccessedAt()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.AccessedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_AccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.AutoDeleteOnIdleGet">
            <summary>Sets the shim of SubscriptionDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.AvailabilityStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of SubscriptionDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of SubscriptionDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.DefaultRuleDescriptionGet">
            <summary>Sets the shim of SubscriptionDescription.get_DefaultRuleDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.DefaultRuleDescriptionSetRuleDescription">
            <summary>Sets the shim of SubscriptionDescription.set_DefaultRuleDescription(RuleDescription value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableBatchedOperationsGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableDeadLetteringOnFilterEvaluationExceptionsGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableDeadLetteringOnFilterEvaluationExceptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableDeadLetteringOnFilterEvaluationExceptionsSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableDeadLetteringOnFilterEvaluationExceptions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.EnableDeadLetteringOnMessageExpirationSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableDeadLetteringOnMessageExpiration(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.ForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of SubscriptionDescription.get_ForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.ForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_ForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.ForwardToGet">
            <summary>Sets the shim of SubscriptionDescription.get_ForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.ForwardToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_ForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAccessedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAvailabilityStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableDeadLetteringOnFilterEvaluationExceptionsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableDeadLetteringOnFilterEvaluationExceptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableDeadLetteringOnFilterEvaluationExceptionsSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableDeadLetteringOnFilterEvaluationExceptions(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalEnableDeadLetteringOnMessageExpirationSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableDeadLetteringOnMessageExpiration(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalForwardToGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalForwardToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalLockDurationGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalLockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalLockDurationSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalLockDuration(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMaxDeliveryCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMaxDeliveryCountSetNullableOfInt32">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMaxDeliveryCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMessageCountDetailsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMessageCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalMessageCountSetNullableOfInt64">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMessageCount(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalRequiresSessionGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalRequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalRequiresSessionSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalRequiresSession(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.LockDurationGet">
            <summary>Sets the shim of SubscriptionDescription.get_LockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.LockDurationSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_LockDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.MaxDeliveryCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_MaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.MaxDeliveryCountSetInt32">
            <summary>Sets the shim of SubscriptionDescription.set_MaxDeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.MessageCountDetailsGet">
            <summary>Sets the shim of SubscriptionDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.MessageCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_MessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.NameGet">
            <summary>Sets the shim of SubscriptionDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.NameSetString">
            <summary>Sets the shim of SubscriptionDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of SubscriptionDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.RequiresSessionGet">
            <summary>Sets the shim of SubscriptionDescription.get_RequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.RequiresSessionSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_RequiresSession(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.StatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.StatusSetEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.TopicPathGet">
            <summary>Sets the shim of SubscriptionDescription.get_TopicPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.TopicPathSetString">
            <summary>Sets the shim of SubscriptionDescription.set_TopicPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of SubscriptionDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of SubscriptionDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AutoDeleteOnIdleGet">
            <summary>Sets the shim of SubscriptionDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.AvailabilityStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of SubscriptionDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.Constructor">
            <summary>Sets the shim of SubscriptionDescription.SubscriptionDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.ConstructorStringString">
            <summary>Sets the shim of SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.CreatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of SubscriptionDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.DefaultRuleDescriptionGet">
            <summary>Sets the shim of SubscriptionDescription.get_DefaultRuleDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.DefaultRuleDescriptionSetRuleDescription">
            <summary>Sets the shim of SubscriptionDescription.set_DefaultRuleDescription(RuleDescription value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableBatchedOperationsGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptionsGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableDeadLetteringOnFilterEvaluationExceptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptionsSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableDeadLetteringOnFilterEvaluationExceptions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of SubscriptionDescription.get_EnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.EnableDeadLetteringOnMessageExpirationSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_EnableDeadLetteringOnMessageExpiration(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.ForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of SubscriptionDescription.get_ForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.ForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_ForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.ForwardToGet">
            <summary>Sets the shim of SubscriptionDescription.get_ForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.ForwardToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_ForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAccessedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAvailabilityStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalCreatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableDeadLetteringOnFilterEvaluationExceptionsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableDeadLetteringOnFilterEvaluationExceptions()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableDeadLetteringOnFilterEvaluationExceptionsSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableDeadLetteringOnFilterEvaluationExceptions(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableDeadLetteringOnMessageExpirationGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalEnableDeadLetteringOnMessageExpiration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalEnableDeadLetteringOnMessageExpirationSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalEnableDeadLetteringOnMessageExpiration(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalForwardDeadLetteredMessagesToGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalForwardDeadLetteredMessagesTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalForwardDeadLetteredMessagesToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalForwardDeadLetteredMessagesTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalForwardToGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalForwardToSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalLockDurationGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalLockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalLockDurationSetNullableOfTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_InternalLockDuration(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMaxDeliveryCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMaxDeliveryCountSetNullableOfInt32">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMaxDeliveryCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMessageCountDetailsGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMessageCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalMessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalMessageCountSetNullableOfInt64">
            <summary>Sets the shim of SubscriptionDescription.set_InternalMessageCount(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalRequiresSessionGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalRequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalRequiresSessionSetNullableOfBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_InternalRequiresSession(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalStatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of SubscriptionDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalUserMetadataGet">
            <summary>Sets the shim of SubscriptionDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of SubscriptionDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.LockDurationGet">
            <summary>Sets the shim of SubscriptionDescription.get_LockDuration()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.LockDurationSetTimeSpan">
            <summary>Sets the shim of SubscriptionDescription.set_LockDuration(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.MaxDeliveryCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_MaxDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.MaxDeliveryCountSetInt32">
            <summary>Sets the shim of SubscriptionDescription.set_MaxDeliveryCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.MessageCountDetailsGet">
            <summary>Sets the shim of SubscriptionDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.MessageCountGet">
            <summary>Sets the shim of SubscriptionDescription.get_MessageCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.NameGet">
            <summary>Sets the shim of SubscriptionDescription.get_Name()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.NameSetString">
            <summary>Sets the shim of SubscriptionDescription.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of SubscriptionDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.RequiresSessionGet">
            <summary>Sets the shim of SubscriptionDescription.get_RequiresSession()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.RequiresSessionSetBoolean">
            <summary>Sets the shim of SubscriptionDescription.set_RequiresSession(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.StaticConstructor">
            <summary>Sets the shim of SubscriptionDescription.SubscriptionDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.StatusGet">
            <summary>Sets the shim of SubscriptionDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.StatusSetEntityStatus">
            <summary>Sets the shim of SubscriptionDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.TopicPathGet">
            <summary>Sets the shim of SubscriptionDescription.get_TopicPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.TopicPathSetString">
            <summary>Sets the shim of SubscriptionDescription.set_TopicPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.UpdatedAtGet">
            <summary>Sets the shim of SubscriptionDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.UserMetadataGet">
            <summary>Sets the shim of SubscriptionDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimSubscriptionDescription.UserMetadataSetString">
            <summary>Sets the shim of SubscriptionDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.TopicClient</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.#ctor(Microsoft.ServiceBus.Messaging.TopicClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginCreateSenderTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCreateSender(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.CancelScheduledMessageAsyncInt64">
            <summary>Sets the shim of TopicClient.CancelScheduledMessageAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of TopicClient.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndCreateSenderIAsyncResult">
            <summary>Sets the shim of TopicClient.EndCreateSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of TopicClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndPeekIAsyncResult">
            <summary>Sets the shim of TopicClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of TopicClient.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndSendBatchIAsyncResult">
            <summary>Sets the shim of TopicClient.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EndSendIAsyncResult">
            <summary>Sets the shim of TopicClient.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EnsureCreateInternalBrowser">
            <summary>Sets the shim of TopicClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.EnsureCreateInternalSender">
            <summary>Sets the shim of TopicClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.InternalSenderGet">
            <summary>Sets the shim of TopicClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.InternalSenderSetMessageSender">
            <summary>Sets the shim of TopicClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.IsSubQueueGet">
            <summary>Sets the shim of TopicClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.IsSubQueueSetBoolean">
            <summary>Sets the shim of TopicClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.MessagingFactoryGet">
            <summary>Sets the shim of TopicClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of TopicClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.OnAbort">
            <summary>Sets the shim of TopicClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of TopicClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.OnEndCloseIAsyncResult">
            <summary>Sets the shim of TopicClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.OperationTimeoutGet">
            <summary>Sets the shim of TopicClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PathGet">
            <summary>Sets the shim of TopicClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PathSetString">
            <summary>Sets the shim of TopicClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.Peek">
            <summary>Sets the shim of TopicClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekAsync">
            <summary>Sets the shim of TopicClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekAsyncInt64">
            <summary>Sets the shim of TopicClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekBatchAsyncInt32">
            <summary>Sets the shim of TopicClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of TopicClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekBatchInt32">
            <summary>Sets the shim of TopicClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekBatchInt64Int32">
            <summary>Sets the shim of TopicClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.PeekInt64">
            <summary>Sets the shim of TopicClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of TopicClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.ScheduleMessageAsyncBrokeredMessageDateTimeOffset">
            <summary>Sets the shim of TopicClient.ScheduleMessageAsync(BrokeredMessage message, DateTimeOffset scheduleEnqueueTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.SendAsyncBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.SendBrokeredMessage">
            <summary>Sets the shim of TopicClient.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.ThrowIfBrowserNullString">
            <summary>Sets the shim of TopicClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.AllInstances.ThrowIfSenderNullString">
            <summary>Sets the shim of TopicClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginCancelScheduledMessageInt64AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCancelScheduledMessage(Int64 sequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginCreateBrowserTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCreateBrowser(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginCreateSenderTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginCreateSender(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginPeekBatchInt64Int32AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginPeekBatch(Int64 fromSequenceNumber, Int32 messageCount, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginPeekInt64AsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginPeek(Int64 fromSequenceNumber, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginScheduleMessageBrokeredMessageDateTimeOffsetAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginScheduleMessage(BrokeredMessage message, DateTimeOffset scheduleEnqueueTime, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginSendBatchIEnumerableOfBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginSendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BeginSendBrokeredMessageAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.BeginSend(BrokeredMessage message, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.CancelScheduledMessageAsyncInt64">
            <summary>Sets the shim of TopicClient.CancelScheduledMessageAsync(Int64 sequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.ConstructorMessagingFactoryString">
            <summary>Sets the shim of TopicClient.TopicClient(MessagingFactory messagingFactory, String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.CreateFromConnectionStringString">
            <summary>Sets the shim of TopicClient.CreateFromConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.CreateFromConnectionStringStringString">
            <summary>Sets the shim of TopicClient.CreateFromConnectionString(String connectionString, String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.CreateString">
            <summary>Sets the shim of TopicClient.Create(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndCancelScheduledMessageIAsyncResult">
            <summary>Sets the shim of TopicClient.EndCancelScheduledMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndCreateSenderIAsyncResult">
            <summary>Sets the shim of TopicClient.EndCreateSender(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndPeekBatchIAsyncResult">
            <summary>Sets the shim of TopicClient.EndPeekBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndPeekIAsyncResult">
            <summary>Sets the shim of TopicClient.EndPeek(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndScheduleMessageIAsyncResult">
            <summary>Sets the shim of TopicClient.EndScheduleMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndSendBatchIAsyncResult">
            <summary>Sets the shim of TopicClient.EndSendBatch(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EndSendIAsyncResult">
            <summary>Sets the shim of TopicClient.EndSend(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EnsureCreateInternalBrowser">
            <summary>Sets the shim of TopicClient.EnsureCreateInternalBrowser()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.EnsureCreateInternalSender">
            <summary>Sets the shim of TopicClient.EnsureCreateInternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.FormatTransferDeadLetterPathString">
            <summary>Sets the shim of TopicClient.FormatTransferDeadLetterPath(String topicPath)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.InternalSenderGet">
            <summary>Sets the shim of TopicClient.get_InternalSender()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.InternalSenderSetMessageSender">
            <summary>Sets the shim of TopicClient.set_InternalSender(MessageSender value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.IsSubQueueGet">
            <summary>Sets the shim of TopicClient.get_IsSubQueue()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.IsSubQueueSetBoolean">
            <summary>Sets the shim of TopicClient.set_IsSubQueue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.MessagingFactoryGet">
            <summary>Sets the shim of TopicClient.get_MessagingFactory()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.MessagingFactorySetMessagingFactory">
            <summary>Sets the shim of TopicClient.set_MessagingFactory(MessagingFactory value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.OnAbort">
            <summary>Sets the shim of TopicClient.OnAbort()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of TopicClient.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.OnCloseTimeSpan">
            <summary>Sets the shim of TopicClient.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.OnEndCloseIAsyncResult">
            <summary>Sets the shim of TopicClient.OnEndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.OperationTimeoutGet">
            <summary>Sets the shim of TopicClient.get_OperationTimeout()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PathGet">
            <summary>Sets the shim of TopicClient.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PathSetString">
            <summary>Sets the shim of TopicClient.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.Peek">
            <summary>Sets the shim of TopicClient.Peek()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekAsync">
            <summary>Sets the shim of TopicClient.PeekAsync()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekAsyncInt64">
            <summary>Sets the shim of TopicClient.PeekAsync(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekBatchAsyncInt32">
            <summary>Sets the shim of TopicClient.PeekBatchAsync(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekBatchAsyncInt64Int32">
            <summary>Sets the shim of TopicClient.PeekBatchAsync(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekBatchInt32">
            <summary>Sets the shim of TopicClient.PeekBatch(Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekBatchInt64Int32">
            <summary>Sets the shim of TopicClient.PeekBatch(Int64 fromSequenceNumber, Int32 messageCount)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.PeekInt64">
            <summary>Sets the shim of TopicClient.Peek(Int64 fromSequenceNumber)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.RegisterMessageClientEntityClientEntity">
            <summary>Sets the shim of TopicClient.RegisterMessageClientEntity(ClientEntity child)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.ScheduleMessageAsyncBrokeredMessageDateTimeOffset">
            <summary>Sets the shim of TopicClient.ScheduleMessageAsync(BrokeredMessage message, DateTimeOffset scheduleEnqueueTimeUtc)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.SendAsyncBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendAsync(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.SendBatchAsyncIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendBatchAsync(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.SendBatchIEnumerableOfBrokeredMessage">
            <summary>Sets the shim of TopicClient.SendBatch(IEnumerable`1&lt;BrokeredMessage&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.SendBrokeredMessage">
            <summary>Sets the shim of TopicClient.Send(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.ThrowIfBrowserNullString">
            <summary>Sets the shim of TopicClient.ThrowIfBrowserNull(String operationName)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicClient.ThrowIfSenderNullString">
            <summary>Sets the shim of TopicClient.ThrowIfSenderNull(String operationName)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.TopicDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.#ctor(Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AccessedAtGet">
            <summary>Sets the shim of TopicDescription.get_AccessedAt()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.AccessedAtGet">
            <summary>Sets the shim of TopicDescription.get_AccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.AuthorizationGet">
            <summary>Sets the shim of TopicDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.AutoDeleteOnIdleGet">
            <summary>Sets the shim of TopicDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.AvailabilityStatusGet">
            <summary>Sets the shim of TopicDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of TopicDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.CreatedAtGet">
            <summary>Sets the shim of TopicDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of TopicDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.DuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of TopicDescription.get_DuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.DuplicateDetectionHistoryTimeWindowSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_DuplicateDetectionHistoryTimeWindow(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableBatchedOperationsGet">
            <summary>Sets the shim of TopicDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableExpressGet">
            <summary>Sets the shim of TopicDescription.get_EnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableExpressSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableFilteringMessagesBeforePublishingGet">
            <summary>Sets the shim of TopicDescription.get_EnableFilteringMessagesBeforePublishing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableFilteringMessagesBeforePublishingSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableFilteringMessagesBeforePublishing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnablePartitioningGet">
            <summary>Sets the shim of TopicDescription.get_EnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnablePartitioningSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnablePartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableSubscriptionPartitioningGet">
            <summary>Sets the shim of TopicDescription.get_EnableSubscriptionPartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.EnableSubscriptionPartitioningSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableSubscriptionPartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.GetNewPath">
            <summary>Sets the shim of TopicDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAccessedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of TopicDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAvailabilityStatusGet">
            <summary>Sets the shim of TopicDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of TopicDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalCreatedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of TopicDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalDuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of TopicDescription.get_InternalDuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalDuplicateDetectionHistoryTimeWindowSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalDuplicateDetectionHistoryTimeWindow(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableExpressGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableExpressSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableFilteringMessagesBeforePublishingGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableFilteringMessagesBeforePublishing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableFilteringMessagesBeforePublishingSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableFilteringMessagesBeforePublishing(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnablePartitioningGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnablePartitioningSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnablePartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableSubscriptionPartitioningGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableSubscriptionPartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalEnableSubscriptionPartitioningSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableSubscriptionPartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalForwardToGet">
            <summary>Sets the shim of TopicDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalForwardToSetString">
            <summary>Sets the shim of TopicDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalIsAnonymousAccessibleGet">
            <summary>Sets the shim of TopicDescription.get_InternalIsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalIsAnonymousAccessibleSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalIsAnonymousAccessible(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalIsExpressGet">
            <summary>Sets the shim of TopicDescription.get_InternalIsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalIsExpressSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalIsExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalMaxSizeInMegabytesGet">
            <summary>Sets the shim of TopicDescription.get_InternalMaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalMaxSizeInMegabytesSetNullableOfInt64">
            <summary>Sets the shim of TopicDescription.set_InternalMaxSizeInMegabytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalMessageCountDetailsGet">
            <summary>Sets the shim of TopicDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of TopicDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalNewPathGet">
            <summary>Sets the shim of TopicDescription.get_InternalNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalNewPathSetString">
            <summary>Sets the shim of TopicDescription.set_InternalNewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalRequiresDuplicateDetectionGet">
            <summary>Sets the shim of TopicDescription.get_InternalRequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalRequiresDuplicateDetectionSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalRequiresDuplicateDetection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSizeInBytesGet">
            <summary>Sets the shim of TopicDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of TopicDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalStatusGet">
            <summary>Sets the shim of TopicDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of TopicDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSubscriptionCountGet">
            <summary>Sets the shim of TopicDescription.get_InternalSubscriptionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSubscriptionCountSetNullableOfInt32">
            <summary>Sets the shim of TopicDescription.set_InternalSubscriptionCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSupportOrderingGet">
            <summary>Sets the shim of TopicDescription.get_InternalSupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalSupportOrderingSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalSupportOrdering(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalUpdatedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalUserMetadataGet">
            <summary>Sets the shim of TopicDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.InternalUserMetadataSetString">
            <summary>Sets the shim of TopicDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.IsAnonymousAccessibleGet">
            <summary>Sets the shim of TopicDescription.get_IsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.IsAnonymousAccessibleSetBoolean">
            <summary>Sets the shim of TopicDescription.set_IsAnonymousAccessible(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.IsExpressGet">
            <summary>Sets the shim of TopicDescription.get_IsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.IsExpressSetBoolean">
            <summary>Sets the shim of TopicDescription.set_IsExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.IsValidForRename">
            <summary>Sets the shim of TopicDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.MaxSizeInMegabytesGet">
            <summary>Sets the shim of TopicDescription.get_MaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.MaxSizeInMegabytesSetInt64">
            <summary>Sets the shim of TopicDescription.set_MaxSizeInMegabytes(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.MessageCountDetailsGet">
            <summary>Sets the shim of TopicDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.NewPathGet">
            <summary>Sets the shim of TopicDescription.get_NewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.NewPathSetString">
            <summary>Sets the shim of TopicDescription.set_NewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of TopicDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of TopicDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.PathGet">
            <summary>Sets the shim of TopicDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.PathSetString">
            <summary>Sets the shim of TopicDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.RequiresDuplicateDetectionGet">
            <summary>Sets the shim of TopicDescription.get_RequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.RequiresDuplicateDetectionSetBoolean">
            <summary>Sets the shim of TopicDescription.set_RequiresDuplicateDetection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.RequiresEncryptionGet">
            <summary>Sets the shim of TopicDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of TopicDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of TopicDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SizeInBytesGet">
            <summary>Sets the shim of TopicDescription.get_SizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.StatusGet">
            <summary>Sets the shim of TopicDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.StatusSetEntityStatus">
            <summary>Sets the shim of TopicDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SubscriptionCountGet">
            <summary>Sets the shim of TopicDescription.get_SubscriptionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SupportOrderingGet">
            <summary>Sets the shim of TopicDescription.get_SupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.SupportOrderingSetBoolean">
            <summary>Sets the shim of TopicDescription.set_SupportOrdering(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.UpdateForRenameEntityDescription">
            <summary>Sets the shim of TopicDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.UpdatedAtGet">
            <summary>Sets the shim of TopicDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.UserMetadataGet">
            <summary>Sets the shim of TopicDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AllInstances.UserMetadataSetString">
            <summary>Sets the shim of TopicDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AuthorizationGet">
            <summary>Sets the shim of TopicDescription.get_Authorization()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AutoDeleteOnIdleGet">
            <summary>Sets the shim of TopicDescription.get_AutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AutoDeleteOnIdleSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_AutoDeleteOnIdle(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.AvailabilityStatusGet">
            <summary>Sets the shim of TopicDescription.get_AvailabilityStatus()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.CollectionNameMicrosoftServiceBusMessagingIResourceDescriptionget">
            <summary>Sets the shim of TopicDescription.Microsoft.ServiceBus.Messaging.IResourceDescription.get_CollectionName()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.Constructor">
            <summary>Sets the shim of TopicDescription.TopicDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.ConstructorString">
            <summary>Sets the shim of TopicDescription.TopicDescription(String path)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.CreatedAtGet">
            <summary>Sets the shim of TopicDescription.get_CreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.DefaultMessageTimeToLiveGet">
            <summary>Sets the shim of TopicDescription.get_DefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.DefaultMessageTimeToLiveSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_DefaultMessageTimeToLive(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.DuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of TopicDescription.get_DuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.DuplicateDetectionHistoryTimeWindowSetTimeSpan">
            <summary>Sets the shim of TopicDescription.set_DuplicateDetectionHistoryTimeWindow(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableBatchedOperationsGet">
            <summary>Sets the shim of TopicDescription.get_EnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableBatchedOperationsSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableBatchedOperations(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableExpressGet">
            <summary>Sets the shim of TopicDescription.get_EnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableExpressSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableFilteringMessagesBeforePublishingGet">
            <summary>Sets the shim of TopicDescription.get_EnableFilteringMessagesBeforePublishing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableFilteringMessagesBeforePublishingSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableFilteringMessagesBeforePublishing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnablePartitioningGet">
            <summary>Sets the shim of TopicDescription.get_EnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnablePartitioningSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnablePartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableSubscriptionPartitioningGet">
            <summary>Sets the shim of TopicDescription.get_EnableSubscriptionPartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.EnableSubscriptionPartitioningSetBoolean">
            <summary>Sets the shim of TopicDescription.set_EnableSubscriptionPartitioning(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.GetNewPath">
            <summary>Sets the shim of TopicDescription.GetNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAccessedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalAccessedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAccessedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalAccessedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAutoDeleteOnIdleGet">
            <summary>Sets the shim of TopicDescription.get_InternalAutoDeleteOnIdle()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAutoDeleteOnIdleSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalAutoDeleteOnIdle(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAvailabilityStatusGet">
            <summary>Sets the shim of TopicDescription.get_InternalAvailabilityStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalAvailabilityStatusSetNullableOfEntityAvailabilityStatus">
            <summary>Sets the shim of TopicDescription.set_InternalAvailabilityStatus(Nullable`1&lt;EntityAvailabilityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalCreatedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalCreatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalCreatedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalCreatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalDefaultMessageTimeToLiveGet">
            <summary>Sets the shim of TopicDescription.get_InternalDefaultMessageTimeToLive()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalDefaultMessageTimeToLiveSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalDefaultMessageTimeToLive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalDuplicateDetectionHistoryTimeWindowGet">
            <summary>Sets the shim of TopicDescription.get_InternalDuplicateDetectionHistoryTimeWindow()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalDuplicateDetectionHistoryTimeWindowSetNullableOfTimeSpan">
            <summary>Sets the shim of TopicDescription.set_InternalDuplicateDetectionHistoryTimeWindow(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableBatchedOperationsGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableBatchedOperations()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableBatchedOperationsSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableBatchedOperations(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableExpressGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableExpressSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableFilteringMessagesBeforePublishingGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableFilteringMessagesBeforePublishing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableFilteringMessagesBeforePublishingSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableFilteringMessagesBeforePublishing(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnablePartitioningGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnablePartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnablePartitioningSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnablePartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableSubscriptionPartitioningGet">
            <summary>Sets the shim of TopicDescription.get_InternalEnableSubscriptionPartitioning()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalEnableSubscriptionPartitioningSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalEnableSubscriptionPartitioning(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalForwardToGet">
            <summary>Sets the shim of TopicDescription.get_InternalForwardTo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalForwardToSetString">
            <summary>Sets the shim of TopicDescription.set_InternalForwardTo(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalIsAnonymousAccessibleGet">
            <summary>Sets the shim of TopicDescription.get_InternalIsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalIsAnonymousAccessibleSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalIsAnonymousAccessible(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalIsExpressGet">
            <summary>Sets the shim of TopicDescription.get_InternalIsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalIsExpressSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalIsExpress(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalMaxSizeInMegabytesGet">
            <summary>Sets the shim of TopicDescription.get_InternalMaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalMaxSizeInMegabytesSetNullableOfInt64">
            <summary>Sets the shim of TopicDescription.set_InternalMaxSizeInMegabytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalMessageCountDetailsGet">
            <summary>Sets the shim of TopicDescription.get_InternalMessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalMessageCountDetailsSetMessageCountDetails">
            <summary>Sets the shim of TopicDescription.set_InternalMessageCountDetails(MessageCountDetails value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalNewPathGet">
            <summary>Sets the shim of TopicDescription.get_InternalNewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalNewPathSetString">
            <summary>Sets the shim of TopicDescription.set_InternalNewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalRequiresDuplicateDetectionGet">
            <summary>Sets the shim of TopicDescription.get_InternalRequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalRequiresDuplicateDetectionSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalRequiresDuplicateDetection(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSizeInBytesGet">
            <summary>Sets the shim of TopicDescription.get_InternalSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of TopicDescription.set_InternalSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalStatusGet">
            <summary>Sets the shim of TopicDescription.get_InternalStatus()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalStatusSetNullableOfEntityStatus">
            <summary>Sets the shim of TopicDescription.set_InternalStatus(Nullable`1&lt;EntityStatus&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSubscriptionCountGet">
            <summary>Sets the shim of TopicDescription.get_InternalSubscriptionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSubscriptionCountSetNullableOfInt32">
            <summary>Sets the shim of TopicDescription.set_InternalSubscriptionCount(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSupportOrderingGet">
            <summary>Sets the shim of TopicDescription.get_InternalSupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalSupportOrderingSetNullableOfBoolean">
            <summary>Sets the shim of TopicDescription.set_InternalSupportOrdering(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalUpdatedAtGet">
            <summary>Sets the shim of TopicDescription.get_InternalUpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalUpdatedAtSetNullableOfDateTime">
            <summary>Sets the shim of TopicDescription.set_InternalUpdatedAt(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalUserMetadataGet">
            <summary>Sets the shim of TopicDescription.get_InternalUserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.InternalUserMetadataSetString">
            <summary>Sets the shim of TopicDescription.set_InternalUserMetadata(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.IsAnonymousAccessibleGet">
            <summary>Sets the shim of TopicDescription.get_IsAnonymousAccessible()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.IsAnonymousAccessibleSetBoolean">
            <summary>Sets the shim of TopicDescription.set_IsAnonymousAccessible(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.IsExpressGet">
            <summary>Sets the shim of TopicDescription.get_IsExpress()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.IsExpressSetBoolean">
            <summary>Sets the shim of TopicDescription.set_IsExpress(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.IsValidForRename">
            <summary>Sets the shim of TopicDescription.IsValidForRename()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.MaxSizeInMegabytesGet">
            <summary>Sets the shim of TopicDescription.get_MaxSizeInMegabytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.MaxSizeInMegabytesSetInt64">
            <summary>Sets the shim of TopicDescription.set_MaxSizeInMegabytes(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.MessageCountDetailsGet">
            <summary>Sets the shim of TopicDescription.get_MessageCountDetails()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.NewPathGet">
            <summary>Sets the shim of TopicDescription.get_NewPath()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.NewPathSetString">
            <summary>Sets the shim of TopicDescription.set_NewPath(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.OverrideEntityAvailabilityStatusEntityAvailabilityStatus">
            <summary>Sets the shim of TopicDescription.OverrideEntityAvailabilityStatus(EntityAvailabilityStatus availabilityStatus)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.OverrideEntityStatusEntityStatus">
            <summary>Sets the shim of TopicDescription.OverrideEntityStatus(EntityStatus status)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.PathGet">
            <summary>Sets the shim of TopicDescription.get_Path()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.PathSetString">
            <summary>Sets the shim of TopicDescription.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.RequiresDuplicateDetectionGet">
            <summary>Sets the shim of TopicDescription.get_RequiresDuplicateDetection()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.RequiresDuplicateDetectionSetBoolean">
            <summary>Sets the shim of TopicDescription.set_RequiresDuplicateDetection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.RequiresEncryptionGet">
            <summary>Sets the shim of TopicDescription.get_RequiresEncryption()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SetEntityCreatedAtDateTime">
            <summary>Sets the shim of TopicDescription.SetEntityCreatedAt(DateTime createdAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SetEntityUpdatedAtDateTime">
            <summary>Sets the shim of TopicDescription.SetEntityUpdatedAt(DateTime updatedAt)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SizeInBytesGet">
            <summary>Sets the shim of TopicDescription.get_SizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.StaticConstructor">
            <summary>Sets the shim of TopicDescription.TopicDescription()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.StatusGet">
            <summary>Sets the shim of TopicDescription.get_Status()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.StatusSetEntityStatus">
            <summary>Sets the shim of TopicDescription.set_Status(EntityStatus value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SubscriptionCountGet">
            <summary>Sets the shim of TopicDescription.get_SubscriptionCount()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SupportOrderingGet">
            <summary>Sets the shim of TopicDescription.get_SupportOrdering()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.SupportOrderingSetBoolean">
            <summary>Sets the shim of TopicDescription.set_SupportOrdering(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.UpdateForRenameEntityDescription">
            <summary>Sets the shim of TopicDescription.UpdateForRename(EntityDescription renameRequestDescription)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.UpdatedAtGet">
            <summary>Sets the shim of TopicDescription.get_UpdatedAt()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.UserMetadataGet">
            <summary>Sets the shim of TopicDescription.get_UserMetadata()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTopicDescription.UserMetadataSetString">
            <summary>Sets the shim of TopicDescription.set_UserMetadata(String value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.TransactionSizeExceededException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.#ctor(Microsoft.ServiceBus.Messaging.TransactionSizeExceededException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.ConstructorMessagingExceptionDetailTrackingContext">
            <summary>Sets the shim of TransactionSizeExceededException.TransactionSizeExceededException(MessagingExceptionDetail detail, TrackingContext trackingContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.ConstructorMessagingExceptionDetailTrackingContextException">
            <summary>Sets the shim of TransactionSizeExceededException.TransactionSizeExceededException(MessagingExceptionDetail detail, TrackingContext trackingContext, Exception innerException)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of TransactionSizeExceededException.TransactionSizeExceededException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.ConstructorString">
            <summary>Sets the shim of TransactionSizeExceededException.TransactionSizeExceededException(String message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTransactionSizeExceededException.ConstructorStringException">
            <summary>Sets the shim of TransactionSizeExceededException.TransactionSizeExceededException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter">
            <summary>Shim type of Microsoft.ServiceBus.Messaging.TrueFilter</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.#ctor(Microsoft.ServiceBus.Messaging.TrueFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances.MatchBrokeredMessage">
            <summary>Sets the shim of TrueFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances.Preprocess">
            <summary>Sets the shim of TrueFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances.RequiresPreprocessingGet">
            <summary>Sets the shim of TrueFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances.ToString01">
            <summary>Sets the shim of TrueFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.AllInstances.Validate">
            <summary>Sets the shim of TrueFilter.Validate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.Constructor">
            <summary>Sets the shim of TrueFilter.TrueFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.MatchBrokeredMessage">
            <summary>Sets the shim of TrueFilter.Match(BrokeredMessage message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.Preprocess">
            <summary>Sets the shim of TrueFilter.Preprocess()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.RequiresPreprocessingGet">
            <summary>Sets the shim of TrueFilter.get_RequiresPreprocessing()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.StaticConstructor">
            <summary>Sets the shim of TrueFilter.TrueFilter()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.ToString">
            <summary>Sets the shim of TrueFilter.ToString()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.ShimTrueFilter.Validate">
            <summary>Sets the shim of TrueFilter.Validate()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.AllowRule</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.#ctor(System.String,Microsoft.ServiceBus.Messaging.AllowRuleClaimType,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.AttachBackingFieldToKeyName">
            <summary>Attaches delegates to emulate StubAllowRule.KeyName as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.Clone">
            <summary>Sets the stub of AuthorizationRule.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.Clone01">
            <summary>Sets the stub of AuthorizationRule.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.Equals(System.Object)">
            <summary>Sets the stub of AuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.EqualsObject">
            <summary>Sets the stub of AuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.GetHashCode">
            <summary>Sets the stub of AuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.GetHashCode01">
            <summary>Sets the stub of AuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.InitializeStub">
            <summary>Initializes a new instance of type StubAllowRule</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.KeyName">
            <summary>Sets the stub of AllowRule.get_KeyName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.KeyNameGet">
            <summary>Sets the stub of AllowRule.get_KeyName()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.KeyNameSetString">
            <summary>Sets the stub of AllowRule.set_KeyName(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.OnValidate">
            <summary>Sets the stub of AuthorizationRule.OnValidate()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.OnValidate01">
            <summary>Sets the stub of AuthorizationRule.OnValidate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Sets the stub of AuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubAllowRule.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the stub of AuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.AuthorizationRules</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationRules</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubAuthorizationRules.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.DefaultEventProcessorFactory`1</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultEventProcessorFactory</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubDefaultEventProcessorFactory`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.EventHubRuntimeInformation</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation.InitializeStub">
            <summary>Initializes a new instance of type StubEventHubRuntimeInformation</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventHubRuntimeInformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.EventProcessorOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions.InitializeStub">
            <summary>Initializes a new instance of type StubEventProcessorOptions</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubEventProcessorOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubICheckpointManager">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.ICheckpointManager</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubICheckpointManager.#ctor">
            <summary>Initializes a new instance of type StubICheckpointManager</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubICheckpointManager.CheckpointAsyncLeaseStringInt64">
            <summary>Sets the stub of ICheckpointManager.CheckpointAsync(Lease lease, String offset, Int64 sequenceNumber)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubICheckpointManager.Microsoft#ServiceBus#Messaging#ICheckpointManager#CheckpointAsync(Microsoft.ServiceBus.Messaging.Lease,System.String,System.Int64)">
            <summary>Sets the stub of ICheckpointManager.CheckpointAsync(Lease lease, String offset, Int64 sequenceNumber)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IEventProcessor</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.#ctor">
            <summary>Initializes a new instance of type StubIEventProcessor</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.CloseAsyncPartitionContextCloseReason">
            <summary>Sets the stub of IEventProcessor.CloseAsync(PartitionContext context, CloseReason reason)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.Microsoft#ServiceBus#Messaging#IEventProcessor#CloseAsync(Microsoft.ServiceBus.Messaging.PartitionContext,Microsoft.ServiceBus.Messaging.CloseReason)">
            <summary>Sets the stub of IEventProcessor.CloseAsync(PartitionContext context, CloseReason reason)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.Microsoft#ServiceBus#Messaging#IEventProcessor#OpenAsync(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Sets the stub of IEventProcessor.OpenAsync(PartitionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.Microsoft#ServiceBus#Messaging#IEventProcessor#ProcessEventsAsync(Microsoft.ServiceBus.Messaging.PartitionContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.EventData})">
            <summary>Sets the stub of IEventProcessor.ProcessEventsAsync(PartitionContext context, IEnumerable`1&lt;EventData&gt; messages)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.OpenAsyncPartitionContext">
            <summary>Sets the stub of IEventProcessor.OpenAsync(PartitionContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessor.ProcessEventsAsyncPartitionContextIEnumerableOfEventData">
            <summary>Sets the stub of IEventProcessor.ProcessEventsAsync(PartitionContext context, IEnumerable`1&lt;EventData&gt; messages)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessorFactory">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IEventProcessorFactory</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessorFactory.#ctor">
            <summary>Initializes a new instance of type StubIEventProcessorFactory</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessorFactory.CreateEventProcessorPartitionContext">
            <summary>Sets the stub of IEventProcessorFactory.CreateEventProcessor(PartitionContext context)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIEventProcessorFactory.Microsoft#ServiceBus#Messaging#IEventProcessorFactory#CreateEventProcessor(Microsoft.ServiceBus.Messaging.PartitionContext)">
            <summary>Sets the stub of IEventProcessorFactory.CreateEventProcessor(PartitionContext context)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.#ctor">
            <summary>Initializes a new instance of type StubIMessageSessionAsyncHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.OnCloseSessionAsyncMessageSession">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.OnMessageAsyncMessageSessionBrokeredMessage">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandler.OnSessionLostAsyncException">
            <summary>Sets the stub of IMessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory.#ctor">
            <summary>Initializes a new instance of type StubIMessageSessionAsyncHandlerFactory</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory.CreateInstanceMessageSessionBrokeredMessage">
            <summary>Sets the stub of IMessageSessionAsyncHandlerFactory.CreateInstance(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory.DisposeInstanceIMessageSessionAsyncHandler">
            <summary>Sets the stub of IMessageSessionAsyncHandlerFactory.DisposeInstance(IMessageSessionAsyncHandler handler)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandlerFactory#CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of IMessageSessionAsyncHandlerFactory.CreateInstance(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionAsyncHandlerFactory.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandlerFactory#DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
            <summary>Sets the stub of IMessageSessionAsyncHandlerFactory.DisposeInstance(IMessageSessionAsyncHandler handler)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IMessageSessionHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.#ctor">
            <summary>Initializes a new instance of type StubIMessageSessionHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Sets the stub of IMessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of IMessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnSessionLost(System.Exception)">
            <summary>Sets the stub of IMessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.OnCloseSessionMessageSession">
            <summary>Sets the stub of IMessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.OnMessageMessageSessionBrokeredMessage">
            <summary>Sets the stub of IMessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandler.OnSessionLostException">
            <summary>Sets the stub of IMessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory.#ctor">
            <summary>Initializes a new instance of type StubIMessageSessionHandlerFactory</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory.CreateInstanceMessageSessionBrokeredMessage">
            <summary>Sets the stub of IMessageSessionHandlerFactory.CreateInstance(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory.DisposeInstanceIMessageSessionHandler">
            <summary>Sets the stub of IMessageSessionHandlerFactory.DisposeInstance(IMessageSessionHandler handler)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory.Microsoft#ServiceBus#Messaging#IMessageSessionHandlerFactory#CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of IMessageSessionHandlerFactory.CreateInstance(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubIMessageSessionHandlerFactory.Microsoft#ServiceBus#Messaging#IMessageSessionHandlerFactory#DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
            <summary>Sets the stub of IMessageSessionHandlerFactory.DisposeInstance(IMessageSessionHandler handler)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubLease">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.Lease</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLease.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.Equals(System.Object)">
            <summary>Sets the stub of Lease.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLease.EqualsObject">
            <summary>Sets the stub of Lease.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.GetHashCode">
            <summary>Sets the stub of Lease.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLease.GetHashCode01">
            <summary>Sets the stub of Lease.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.InitializeStub">
            <summary>Initializes a new instance of type StubLease</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLease.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLease.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLease.IsExpired">
            <summary>Sets the stub of Lease.IsExpired()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLease.IsExpired01">
            <summary>Sets the stub of Lease.IsExpired()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.LeaseLostException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor(Microsoft.ServiceBus.Messaging.Lease,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubLeaseLostException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubLeaseLostException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of LeaseLostException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of LeaseLostException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.InitializeStub">
            <summary>Initializes a new instance of type StubLeaseLostException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubLeaseLostException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.InitializeStub">
            <summary>Initializes a new instance of type StubMessageSessionAsyncHandler</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnCloseSessionAsyncMessageSession">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnCloseSessionAsync(MessageSession session)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnMessageAsyncMessageSessionBrokeredMessage">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnMessageAsync(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionAsyncHandler.OnSessionLostAsyncException">
            <summary>Sets the stub of MessageSessionAsyncHandler.OnSessionLostAsync(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.MessageSessionHandler</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.InitializeStub">
            <summary>Initializes a new instance of type StubMessageSessionHandler</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
            <summary>Sets the stub of MessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnCloseSessionMessageSession">
            <summary>Sets the stub of MessageSessionHandler.OnCloseSession(MessageSession session)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>Sets the stub of MessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnMessageMessageSessionBrokeredMessage">
            <summary>Sets the stub of MessageSessionHandler.OnMessage(MessageSession session, BrokeredMessage message)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnSessionLost(System.Exception)">
            <summary>Sets the stub of MessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessageSessionHandler.OnSessionLostException">
            <summary>Sets the stub of MessageSessionHandler.OnSessionLost(Exception exception)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.MessagingException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.#ctor(System.String,System.Boolean,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMessagingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMessagingException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.InitializeStub">
            <summary>Initializes a new instance of type StubMessagingException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.MessagingFactorySettings</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.Clone">
            <summary>Sets the stub of MessagingFactorySettings.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.Clone01">
            <summary>Sets the stub of MessagingFactorySettings.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.InitializeStub">
            <summary>Initializes a new instance of type StubMessagingFactorySettings</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnBeginCreateFactory(System.Uri,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of MessagingFactorySettings.OnBeginCreateFactory(Uri uri, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnBeginCreateFactory(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
            <summary>Sets the stub of MessagingFactorySettings.OnBeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnBeginCreateFactoryIEnumerableOfUriAsyncCallbackObject">
            <summary>Sets the stub of MessagingFactorySettings.OnBeginCreateFactory(IEnumerable`1&lt;Uri&gt; uriAddresses, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnBeginCreateFactoryUriAsyncCallbackObject">
            <summary>Sets the stub of MessagingFactorySettings.OnBeginCreateFactory(Uri uri, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnEndCreateFactory(System.IAsyncResult)">
            <summary>Sets the stub of MessagingFactorySettings.OnEndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubMessagingFactorySettings.OnEndCreateFactoryIAsyncResult">
            <summary>Sets the stub of MessagingFactorySettings.OnEndCreateFactory(IAsyncResult result)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubPairedMessagingFactoryException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubPairedMessagingFactoryException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.InitializeStub">
            <summary>Initializes a new instance of type StubPairedMessagingFactoryException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubPairedMessagingFactoryException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.PartitionContext</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext.InitializeStub">
            <summary>Initializes a new instance of type StubPartitionContext</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.PartitionRuntimeInformation</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation.InitializeStub">
            <summary>Initializes a new instance of type StubPartitionRuntimeInformation</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubPartitionRuntimeInformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.QuotaExceededException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubQuotaExceededException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubQuotaExceededException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.InitializeStub">
            <summary>Initializes a new instance of type StubQuotaExceededException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubQuotaExceededException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.RelayDescription</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription.#ctor(System.String,Microsoft.ServiceBus.RelayType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription.InitializeStub">
            <summary>Initializes a new instance of type StubRelayDescription</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubRelayDescription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSendAvailabilityBacklogException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSendAvailabilityBacklogException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.InitializeStub">
            <summary>Initializes a new instance of type StubSendAvailabilityBacklogException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityBacklogException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSendAvailabilityMessagingException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSendAvailabilityMessagingException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of MessagingException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.InitializeStub">
            <summary>Initializes a new instance of type StubSendAvailabilityMessagingException</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSendAvailabilityMessagingException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.SessionHandlerOptions</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions.InitializeStub">
            <summary>Initializes a new instance of type StubSessionHandlerOptions</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSessionHandlerOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule">
            <summary>Stub type of Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.Clone">
            <summary>Sets the stub of AuthorizationRule.Clone()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.Clone01">
            <summary>Sets the stub of AuthorizationRule.Clone()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.Equals(System.Object)">
            <summary>Sets the stub of SharedAccessAuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.EqualsObject">
            <summary>Sets the stub of SharedAccessAuthorizationRule.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.GetHashCode">
            <summary>Sets the stub of SharedAccessAuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.GetHashCode01">
            <summary>Sets the stub of SharedAccessAuthorizationRule.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.InitializeStub">
            <summary>Initializes a new instance of type StubSharedAccessAuthorizationRule</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.OnValidate">
            <summary>Sets the stub of SharedAccessAuthorizationRule.OnValidate()</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.OnValidate01">
            <summary>Sets the stub of SharedAccessAuthorizationRule.OnValidate()</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
            <summary>Sets the stub of SharedAccessAuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="F:Microsoft.ServiceBus.Messaging.Fakes.StubSharedAccessAuthorizationRule.ValidateRightsIEnumerableOfAccessRights">
            <summary>Sets the stub of SharedAccessAuthorizationRule.ValidateRights(IEnumerable`1&lt;AccessRights&gt; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext">
            <summary>Shim type of Microsoft.ServiceBus.Tracing.TrackingContext</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.#ctor(Microsoft.ServiceBus.Tracing.TrackingContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.ClientRequestIdGet">
            <summary>Sets the shim of TrackingContext.get_ClientRequestId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.CorrelationRequestIdGet">
            <summary>Sets the shim of TrackingContext.get_CorrelationRequestId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.CreateClientTrackingExceptionInfo">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.CreateClientTrackingExceptionInfoDateTime">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo(DateTime timestamp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.SystemTrackerGet">
            <summary>Sets the shim of TrackingContext.get_SystemTracker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AllInstances.TrackingIdGet">
            <summary>Sets the shim of TrackingContext.get_TrackingId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.AppendRoleInstanceInformationToTrackingIdString">
            <summary>Sets the shim of TrackingContext.AppendRoleInstanceInformationToTrackingId(String trackingId)</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.ClientRequestIdGet">
            <summary>Sets the shim of TrackingContext.get_ClientRequestId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.ConstructorStringString">
            <summary>Sets the shim of TrackingContext.TrackingContext(String trackingId, String systemTracker)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.ConstructorStringStringStringString">
            <summary>Sets the shim of TrackingContext.TrackingContext(String trackingId, String systemTracker, String correlationRequestId, String clientRequestId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.CorrelationRequestIdGet">
            <summary>Sets the shim of TrackingContext.get_CorrelationRequestId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.CreateClientTrackingExceptionInfo">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.CreateClientTrackingExceptionInfoDateTime">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo(DateTime timestamp)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstance">
            <summary>Sets the shim of TrackingContext.GetInstance()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceFromKeyString">
            <summary>Sets the shim of TrackingContext.GetInstanceFromKey(String key)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceFromKeyStringString">
            <summary>Sets the shim of TrackingContext.GetInstanceFromKey(String key, String overrideSystemTracker)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceGuid">
            <summary>Sets the shim of TrackingContext.GetInstance(Guid guidTrackingId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceGuidString">
            <summary>Sets the shim of TrackingContext.GetInstance(Guid guidTrackingId, String overrideSystemTracker)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceMessageBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(Message message, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceMessageStringBooleanWebOperationContext">
            <summary>Sets the shim of TrackingContext.GetInstance(Message message, String overrideSystemTracker, Boolean embedRoleInformation, WebOperationContext webOperationContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceMessageWebOperationContextBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(Message message, WebOperationContext webOperationContext, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceStringBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(String stringTrackingId, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceStringStringBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(String stringTrackingId, String overrideSystemTracker, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceStringStringStringStringBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(String stringTrackingId, String overrideSystemTracker, String correlationRequestId, String clientRequestId, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetInstanceUriIDictionaryOfStringObjectIDictionaryOfStringString">
            <summary>Sets the shim of TrackingContext.GetInstance(Uri requestUri, IDictionary`2&lt;String,Object&gt; messageProperties, IDictionary`2&lt;String,String&gt; messageHeaders)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetRoleInstanceInformation">
            <summary>Sets the shim of TrackingContext.GetRoleInstanceInformation()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetSystemTrackerIDictionaryOfStringObjectIDictionaryOfStringString">
            <summary>Sets the shim of TrackingContext.GetSystemTracker(IDictionary`2&lt;String,Object&gt; messageProperties, IDictionary`2&lt;String,String&gt; messageHeaders)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetSystemTrackerMessagePropertiesMessageHeaders">
            <summary>Sets the shim of TrackingContext.GetSystemTracker(MessageProperties messageProperties, MessageHeaders messageHeaders)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetTrackingEndpointMessageHeadersWebOperationContext">
            <summary>Sets the shim of TrackingContext.GetTrackingEndpoint(MessageHeaders messageHeaders, WebOperationContext webOperationContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetTrackingEndpointUri">
            <summary>Sets the shim of TrackingContext.GetTrackingEndpoint(Uri requestUri)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetTrackingIdIDictionaryOfStringObjectIDictionaryOfStringString">
            <summary>Sets the shim of TrackingContext.GetTrackingId(IDictionary`2&lt;String,Object&gt; requestProperties, IDictionary`2&lt;String,String&gt; requestHeaders)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetTrackingIdMessagePropertiesMessageHeadersWebOperationContext">
            <summary>Sets the shim of TrackingContext.GetTrackingId(MessageProperties messageProperties, MessageHeaders messageHeaders, WebOperationContext webOperationContext)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.GetTrackingIdUniqueId">
            <summary>Sets the shim of TrackingContext.GetTrackingId(UniqueId uniqueId)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.RoleIdentifierGet">
            <summary>Sets the shim of TrackingContext.get_RoleIdentifier()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.RoleIdentifierSetString">
            <summary>Sets the shim of TrackingContext.set_RoleIdentifier(String value)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.StaticConstructor">
            <summary>Sets the shim of TrackingContext.TrackingContext()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.SystemTrackerGet">
            <summary>Sets the shim of TrackingContext.get_SystemTracker()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.TrackingIdGet">
            <summary>Sets the shim of TrackingContext.get_TrackingId()</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Tracing.Fakes.ShimTrackingContext.TryGetHeaderIDictionaryOfStringStringStringStringOut">
            <summary>Sets the shim of TrackingContext.TryGetHeader(IDictionary`2&lt;String,String&gt; headersDictionary, String header, String&amp; value)</summary>
        </member>
        <member name="T:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper">
            <summary>Shim type of Microsoft.ServiceBus.Web.StreamMessageHelper</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.CreateJsonMessageMessageVersionStringStream">
            <summary>Sets the shim of StreamMessageHelper.CreateJsonMessage(MessageVersion version, String action, Stream jsonStream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.CreateMessageMessageVersionStringStream">
            <summary>Sets the shim of StreamMessageHelper.CreateMessage(MessageVersion version, String action, Stream stream)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.CreateMessageMessageVersionStringStreamWriterDelegate">
            <summary>Sets the shim of StreamMessageHelper.CreateMessage(MessageVersion version, String action, StreamWriterDelegate writer)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.GetStreamMessage">
            <summary>Sets the shim of StreamMessageHelper.GetStream(Message message)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.GetStreamXmlDictionaryReader">
            <summary>Sets the shim of StreamMessageHelper.GetStream(XmlDictionaryReader reader)</summary>
        </member>
        <member name="P:Microsoft.ServiceBus.Web.Fakes.ShimStreamMessageHelper.GetXmlStreamXmlDictionaryReader">
            <summary>Sets the shim of StreamMessageHelper.GetXmlStream(XmlDictionaryReader reader)</summary>
        </member>
    </members>
</doc>
