using System.Linq;
using System.Collections.Generic;

namespace IGL.Data.Repositories
{
    public class RoleTaskRepository : BaseTableRepository<ServiceEntities.RoleTaskDefinitionEntity>
    {
        // partition is the session of the game        
        // rowkey is a number generated by the client unique within the session of the game

        public RoleTaskRepository() : base("RoleTask", 100)
        {
            AutoMapper.Mapper.Initialize(cfg =>
                {
                    cfg.CreateMap<RoleTaskDefinition, ServiceEntities.RoleTaskDefinitionEntity>()
                    .ForMember(m => m.PartitionKey, s => s.MapFrom(g => g.Name))
                    .ForMember(m => m.RowKey, s => s.MapFrom(g => g.Version));

                    cfg.CreateMap<ServiceEntities.RoleTaskDefinitionEntity, RoleTaskDefinition>();
                    cfg.CreateMap(typeof(List<ServiceEntities.RoleTaskDefinitionEntity>), typeof(List<RoleTaskDefinition>));                    
                }
            );
        }

        public AzureResult InsertOrReplaceDefinition(RoleTaskDefinition definition)
        {
            return InsertOrReplace(definition);
        }

        public AzureResult<IEnumerable<RoleTaskDefinition>> GetRoleTaskDefinitions(string name = null, double? version = null)
        {
            var result = base.Get(name, version?.ToString());

            var definitions = result.ResultObject.Select(d => new RoleTaskDefinition
            {
                Name = d.Name,
                QueueName = d.QueueName,
                Type = d.Type, 
                Version = d.Version
            });

            return new AzureResult<IEnumerable<RoleTaskDefinition>>()
            {
                Code = result.Code,
                Message = result.Message,
                ResultObject = definitions
            };
        }
    }
}
